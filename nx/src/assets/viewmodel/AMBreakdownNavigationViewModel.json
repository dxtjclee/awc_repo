{
    "schemaVersion": "1.0.0",
    "imports":
    [
        "js/aw-native-sublocation.directive",
        "js/aw.objectNav.sublocation.controller",
        "js/aw.occmgmt.sublocation.controller"
    ],
    "data":
    {
        "_sublocation":
        {
            "name": "com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation",
            "label": "AM Breakdown Declarative Navigate",
            "clientScopeURI": "Awp0ObjectNavigation",
            "nameToken": "com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation",
            "context": {
                "search": {
                    "provider": "Awp0ObjectSetRowProvider",
                    "sortType": "Alphabetical"
                }
            },
            "defaultDisplayMode": "TreeSummaryView",
            "viewBase": "AMBreakdownNavigation",
            "breadcrumbConfig" : {
                "type" : "navigate",
                "vm" : "objectNavigationBreadcrumb",
                "chevronDataProvider": "objectNavBreadcrumbChevronDataProvider",
                "crumbDataProvider": "objectNavBreadcrumbDataProvider",
                "id": "d_uids",
                "noUpdate": true,
                "displayProperty": "object_string"
            },
            "viewModes": {
                "TreeSummaryView": {
                    "primaryWorkArea": "tree",
                    "secondaryWorkArea": true
                },
                "TreeView": {
                    "primaryWorkArea": "tree",
                    "secondaryWorkArea": false
                }
            },
            "policy": "/policies/AMPropertyPolicy.json"
        },
        "objNavState": {
            "initialValues": {
                "totalFound": 0
            },
            "meta": {}
        }
    },
    "actions": {
        "initializeObjectNav": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "registerContext"
                },
                {
                    "action": "updateSubPanelContext"
                },
                {
                    "action": "updatePortWithChangedParams"
                }
            ]
        },
        "registerContext": {
            "actionType": "JSFunction",
            "method": "registerContext",
            "deps": "js/objectNavigationService"
        },
        "deRegisterContext": {
            "actionType": "JSFunction",
            "method": "deRegisterContext",
            "deps": "js/objectNavigationService"
        },
        "updateSubPanelContext": {
            "actionType": "JSFunctionAsync",
            "method": "getSubPanelContextData",
            "inputData": {
                "provider": "{{data._sublocation}}",
                "baseSelection": "{{subPanelContext.openedObject}}",
                "objNavSelectionModel": "{{data.selectionModels.objNavSelectionModel}}",
                "objNavStateAtomicDataRef": "{{data.atomicDataRef.objNavState}}",
                "objNavStateUpdater": "{{data.updateAtomicData}}"
            },
            "outputData": {
                "_sublocation": ""
            },
            "deps": "js/objectNavigationService"
        },
        "actOnStateChange": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "setDefaultContextChangedVal"
                },
                {
                    "action": "getUpdatedSearchContextOnStateChange"
                },
                {
                    "action": "resetObjectNavSinceContxChanged",
                    "condition": "conditions.shouldObjNavDpBeReset"
                }

            ]
        },
        "setDefaultContextChangedVal": {
            "actionType": "JSFunction",
            "method": "setDefaultContextChangedVal",
            "inputData": {},
            "outputData": {
                "objNavContextChanged": "objNavContextChanged"
            },
            "deps": "js/objectNavigationService"
        },
        "getUpdatedSearchContextOnStateChange": {
            "actionType": "JSFunctionAsync",
            "method": "getUpdatedSearchContextOnStateChange",
            "inputData": {
                "originalParams": "{{data.changedParams}}",
                "localSubPanelContext": "{{data._sublocation}}",
                "baseSelection": "{{subPanelContext.openedObject}}",
                "objNavSelectionModel": "{{data.selectionModels.objNavSelectionModel}}"
            },
            "outputData": {
                "_sublocation": "localSubPanelContext",
                "objNavContextChanged": "objNavContextChanged",
                "changedParams": "changeInParams"
            },
            "deps": "js/objectNavigationService"
        },
        "resetObjectNavSinceContxChanged": {
            "actionType": "JSFunction",
            "method": "resetObjNavDP",
            "inputData": {
                "objNavSelectionModel": "{{data.selectionModels.objNavSelectionModel}}"
            },
            "deps": "js/objectNavigationService"
        },
        "syncURLWithNewParams": {
            "actionType": "JSFunction",
            "method": "syncURLWithNewParams",
            "inputData": {
                "newParams": "{{ports.paramsToURL.syncObject.newParams}}"
            },
            "deps": "js/selectionSyncUtils"
        },
        "updatePortWithChangedParams": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "getChangedStateParams"
                }
            ]
        },
        "getChangedStateParams": {
            "actionType": "JSFunction",
            "method": "getChangedStateParams",
            "inputData": {
                "eventData": "{{parameters.eventData}}"
            },
            "outputData": {
                "changedParams": "changedParams"
            },
            "deps": "js/selectionSyncUtils"
        },
        "syncSelectionWithURL": {
            "actionType": "JSFunction",
            "method": "getSelectionParamsToSyncInObjectNav",
            "inputData": {
                "selectedObjects": "{{data.objNavState.selected}}",
                "selectionQueryParamKey": "s_uid",
                "baseSelection": "{{data._sublocation && data._sublocation.baseSelection ? data._sublocation.baseSelection : subPanelContext.openedObject}}"
            },
            "deps": "js/objNavSelectionSyncUtils"
        }
    },
    "onEvent": [
        {
            "eventId": "stateChangeSuccess",
            "action": "actOnStateChange",
            "cacheEventData": true
        }
    ],
    "selectionModels": {
        "objNavSelectionModel": {
            "selectionMode": "multiple"
        }
    },
    "conditions": {
        "shouldObjNavDpBeReset": {
            "expression": "data.objNavContextChanged === true"
        }
    },
    "lifecycleHooks": {
        "onMount": "initializeObjectNav",
        "onUpdate": {
            "action": "syncSelectionWithURL",
            "observers": [ "viewModel.objNavState.selected" ]
        }
    }
}

{
  "commands": {
    "epShowActivitiesToggleCommand": {
      "title": "{{i18n.epShowActivitiesToggleCommandTitle}}",
      "iconId": "cmdTime",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.epHideActivitiesToggleCommandTitle}}"
      }
    },
    "epAddActivityByCode": {
      "title": "{{i18n.searchActivity}}",
      "iconId": "cmdSearch",
      "description": "{{i18n.searchActivityDescription}}",
      "isGroup": false
    },
    "epAddActivityFromDataCard": {
      "title": "{{i18n.createActivityFromDataCard}}",
      "iconId": "cmdAddFromLibrary",
      "description": "{{i18n.createActivityFromDataCardDescription}}",
      "isGroup": false
    },
    "epDeleteActivitiesCommand": {
      "title": "{{i18n.deleteButtonTitle}}",
      "iconId": "cmdDelete",
      "isGroup": false
    },
    "epCreateClassicActivityCmd": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createClassicActivityCmdTitle}}",
      "description": "{{i18n.createClassicActivityCmdDescription}}",
      "isGroup": false
    },
    "openEpTasksCommand": {
      "iconId": "cmdOpen",
      "isShuttle": true
    },
    "openAuthorBOETaskSwitcherCommand": {
      "iconId": "miscTaskAuthorBOELarge",
      "title": "{{i18n.authorBOETaskCommandTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.authorBOETaskCommandTitle}}",
        "messages": [
          "{{i18n.authorBOETaskCommandTileDescription}}",
          "{{i18n.authorBOETaskCommandTileCriteria}}"
        ]
      }
    },
    "openAuthorBOETaskForManagePageCommand": {
      "iconId": "miscTaskAuthorBOELarge",
      "title": "{{i18n.authorBOETaskCommandTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.authorBOETaskCommandTitle}}",
        "messages": [
          "{{i18n.authorBOETaskCommandTileDescription}}",
          "{{i18n.authorBOETaskCommandTileCriteria}}"
        ]
      }
    },
    "updateRevisionCommand": {
      "iconId": "cmdUpdateEBOMRevision",
      "title": "{{i18n.updateEBOMRevisionCommand}}",
      "isGroup": false
    },
    "createNewWorkPackage": {
      "isGroup": false,
      "extendedTooltip": {
        "view": "extendedTooltipDefault"
      }
    },
    "createMbomAndPlantBopUsingRuleStream": {
      "iconId": "cmdGenerate",
      "title": "{{i18n.autoGenerateStructureCmdTitle}}",
      "description": "{{i18n.autoGenerateStructureCmdDescription}}",
      "isGroup": false
    },
    "removeStructureFromWorkpackageCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeStructureTitle}}",
      "isGroup": false
    },
    "epAddStructureToWorkpackageTileCommand": {
      "iconId": "cmdAdd",
      "title": "{{commandContext.commandTitles.epAddStructureTitle}}",
      "isGroup": false
    },
    "epUseExistingStructureForWorkpackageCommand": {
      "iconId": "cmdReuse",
      "title": "{{commandContext.commandTitles.epAddStructureTitle}}",
      "isGroup": false
    },
    "epCreateStructureForWorkpackageTileCommand": {
      "iconId": "cmdNew",
      "title": "{{commandContext.commandTitles.epCreateStructureTitle}}",
      "isGroup": false
    },
    "epCreateNewStructureFromTemplateForWorkpackageTileCommand": {
      "iconId": "cmdAddFromTemplate",
      "title": "{{commandContext.commandTitles.epCreateStructureFromTemplate}}",
      "isGroup": false
    },
    "epGroupAddToWorkpackage": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}",
      "isGroup": true
    },
    "epCreateStructureFromMirrorTileCommand": {
      "iconId": "cmdCreateUsingMirror16",
      "title": "{{i18n.epCreateStructureFromMirrorTitle}}",
      "isGroup": false
    },
    "openProductBOPTaskSwitcherCommand": {
      "iconId": "miscTaskProductBOPAuthoringLarge",
      "title": "{{i18n.productBOPAuthoringTaskTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.productBOPAuthoringTaskTitle}}",
        "messages": [
          "{{i18n.productBOPAuthoringTileDescription}}",
          "{{i18n.productBOPAuthoringTileCriteria}}"
        ]
      }
    },
    "openProductBOPTaskCommandForManagePage": {
      "iconId": "miscTaskProductBOPAuthoringLarge",
      "title": "{{i18n.productBOPAuthoringTaskTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.productBOPAuthoringTaskTitle}}",
        "messages": [
          "{{i18n.productBOPAuthoringTileDescription}}",
          "{{i18n.productBOPAuthoringTileCriteria}}"
        ]
      }
    },
    "backToBalancingCommand": {
      "iconId": "cmdBackToBalancing",
      "title": "{{i18n.backToBalancingTitle}}"
    },
    "epHostedClassificationCommand": {
      "iconId": "cmdClassificationSearch",
      "title": "{{i18n.epHostedClassificationCommandTitle}}",
      "description": "{{i18n.epHostedClassificationCommandDescription}}"
    },
    "epProductBOPCreateGroupCommand": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.createGroupTitle}}"
    },
    "cmdAlternativeOpenInNewTab": {
      "iconId": "cmdOpen",
      "title": "{{i18n.openInNewTab}}"
    },
    "cmdCreateAlternative": {
      "iconId": "cmdCreateAlternative",
      "title": "{{i18n.createAlternativeTitle}}"
    },
    "cmdManageAlternativesGroup": {
      "iconId": "cmdManageAlternatives",
      "isGroup": true,
      "title": "{{i18n.manageAlternativeTitle}}"
    },
    "cmdCreatePartialAlternative": {
      "iconId": "cmdNew",
      "title": "{{i18n.createPartialAlternativeTitle}}"
    },
    "cmdSearchPartialAlternative": {
      "iconId": "cmdSearch",
      "title": "{{i18n.searchPartialAlternatives}}"
    },
    "cmdGoToMaster": {
      "iconId": "cmdOpenMasterFromAlternative",
      "title": "{{i18n.goToMasterTitle}}"
    },
    "cmdCloneAlternative": {
      "iconId": "cmdCreateAlternative",
      "title": "{{i18n.cloneAlternativeTitle}}"
    },
    "epCheckOut": {
      "iconId": "cmdCheckout",
      "title": "{{i18n.checkOutTooltip}}"
    },
    "epCheckIn": {
      "iconId": "cmdCheckin",
      "title": "{{i18n.checkInTooltip}}"
    },
    "cmdCreateReport": {
      "iconId": "cmdGenerateReport",
      "title": "{{i18n.createReportCommandTitle}}"
    },
    "EPOpenShowObject": {
      "iconId": "cmdOpenDetails",
      "isGroup": false,
      "title": "{{i18n.openShowObjectTitle}}"
    },
    "epUnassignPart": {
      "iconId": "cmdRemove",
      "title": "{{i18n.unassign}}"
    },
    "epUnassignResource": {
      "iconId": "cmdRemove",
      "title": "{{i18n.unassign}}"
    },
    "EpSetOccurrenceType": {
      "iconId": "cmdChangeOccurrenceType",
      "title": "{{i18n.setOccurrenceType}}"
    },
    "epRemoveWorkarea": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeWorkarea}}"
    },
    "epPartsClearImpactIndication": {
      "iconId": "cmdHandleImpact",
      "title": "{{i18n.clearImpactIndicationTitle}}",
      "description": "{{i18n.clearImpactIndicationDesc}}"
    },
    "epRestoreImpactIndication": {
      "iconId": "cmdRestore",
      "title": "{{i18n.restoreImpactIndicationTitle}}",
      "description": "{{i18n.restoreImpactIndicationDesc}}"
    },
    "epStartEditInformation": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}"
    },
    "epSaveEditsInformation": {
      "iconId": "cmdSave",
      "title": "{{i18n.saveEditsTitle}}"
    },
    "epCancelEditsInformation": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}"
    },
    "epAttachFileLaunchPanelCommand": {
      "iconId": "cmdAttach",
      "title": "{{i18n.attachFile}}",
      "description": "{{i18n.attachFileCmdDesc}}"
    },
    "epDownloadAttachmentCommand": {
      "iconId": "cmdDownload",
      "title": "{{i18n.downloadAttachment}}",
      "description": "{{i18n.downloadAttachmentDescription}}"
    },
    "epDeleteAttachmentCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.deleteAttachment}}",
      "description": "{{i18n.deleteAttachmentDescription}}"
    },
    "epUnassignDocumentItem": {
      "iconId": "cmdRemove",
      "title": "{{i18n.delete}}"
    },
    "epPasteDocumentItem": {
      "iconId": "cmdPaste",
      "title": "{{i18n.paste}}"
    },
    "epPasteResource": {
      "iconId": "cmdPaste",
      "title": "{{i18n.paste}}"
    },
    "epAddWebLink": {
      "iconId": "cmdAddURL",
      "title": "{{i18n.addWebLink}}"
    },
    "epOpenDocument": {
      "iconId": "cmdOpen",
      "title": "{{i18n.openInNewTab}}"
    },
    "epRemoveScopeFlow": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeScopeFlow}}",
      "description": "{{i18n.removeScopeFlowDescription}}"
    },
    "XcBrowseReplaceFilePopupWithReviseCheckCommand": {
      "iconId": "cmdReplace",
      "title": "{{i18n.replaceFileCommandTitle}}",
      "description": "{{i18n.Awp0ReplaceDatasetDesc}}"
    },
    "epCreateDCDCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.epCreateDCDTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.epCreateDCDTitle}}",
        "messages": [
          "{{i18n.epCreateDCDTitle}}"
        ]
      }
    },
    "epRemoveDCDCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.epRemoveDCDTitle}}"
    },
    "epPasteInspectionDefinitionParts": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epPasteInspectionDefinitionPartsTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.epPasteInspectionDefinitionPartsTitle}}",
        "messages": [
          "{{i18n.epPasteInspectionDefinitionPartsDescription}}",
          "{{i18n.epPasteInspectionDefinitionPartsCriteria}}"
        ]
      }
    },
    "epRemoveInspectionDefinitionPartsCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeScopeFlow}}"
    },
    "epAssignWorkAreaToInputObject": {
      "iconId": "cmdAddWorkArea",
      "title": "{{i18n.addWorkArea}}"
    },
    "epCmdUnpackAllPartsTab": {
      "iconId": "cmdUnpackAll16",
      "isGroup": false,
      "title": "{{i18n.epUnpackAll}}"
    },
    "epCmdPackAllPartsTab": {
      "iconId": "cmdPackAll16",
      "isGroup": false,
      "title": "{{i18n.epPackAll}}"
    },
    "epCreateOperation": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createOperationCmdTitle}}"
    },
    "epCreateProcessArea": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createProcessAreaCmdTitle}}"
    },
    "epCreateProcessResource": {
      "iconId": "cmdCreateProcessResource",
      "title": "{{i18n.createProcessResourceCmdTitle}}"
    },
    "gotoPreviousPage": {
      "iconId": "cmdBack",
      "isGroup": false,
      "title": "{{i18n.gotoPreviousPageCmdTitle}}"
    },
    "epAssignProject": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.assignProjectCmdTitle}}"
    },
    "epCreateProcess": {
      "iconId": "cmdAddProcess",
      "title": "{{i18n.createProcessCmdTitle}}"
    },
    "epCreateFolder": {
      "iconId": "cmdAddFolder",
      "title": "{{i18n.createFolderCmdTitle}}"
    },
    "epCreateCompoundOperation": {
      "iconId": "cmdAddCompoundOperation",
      "title": "{{i18n.createCompoundOperationTitle}}"
    },
    "epCreateExecutionStep": {
      "iconId": "cmdAddExecutionStep",
      "title": "{{i18n.createExecutionStepTitle}}"
    },
    "epCreateFunctionalGroup": {
      "iconId": "cmdAddProcess",
      "title": "{{i18n.createFunctionalGroupTitle}}"
    },
    "resetLayoutCommand": {
      "iconId": "cmdAutoLayout",
      "title": "{{i18n.resetLayoutTitle}}",
      "description": "{{i18n.resetLayoutDescription}}"
    },
    "updateFlowsCommand": {
      "iconId": "cmdUpdatedFlows",
      "title": "{{i18n.updateFlowsTitle}}",
      "description": "{{i18n.updateFlowsDescription}}"
    },
    "selectExternalFlowsTabCommand": {
      "iconId": "indicatorHasExternalPredecessors"
    },
    "showInPertDiagramCommand": {
      "iconId": "cmdDiagramSmall",
      "title": "{{i18n.showInPertDiagramTitle}}",
      "description": "{{i18n.showInPertDiagramDescription}}"
    },
    "showEntireBOPTreeCommand": {
      "iconId": "cmdTreeView",
      "title": "{{i18n.showBOPTitle}}",
      "description": "{{i18n.showBOPDescription}}"
    },
    "epActionsMenuForPERTNodeCommand": {
      "iconId": "cmdMore",
      "title": "{{i18n.epMoreActionsCommandTitle}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}",
      "isGroup": true
    },
    "assemblyCreateGroupCommandForPert": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createGroupTitle}}",
      "isGroup": true
    },
    "epCmdCut": {
      "iconId": "cmdCut",
      "title": "{{i18n.Awp0CutTitle}}",
      "description": "{{i18n.Awp0CutDesc}}"
    },
    "epCmdDelete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.epCmdDeleteTitle}}",
      "description": "{{i18n.epCmdDeleteDesc}}"
    },
    "epCmdMultipleDelete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.epCmdDeleteTitle}}",
      "description": "{{i18n.epCmdDeleteDesc}}"
    },
    "epCmdUnassign": {
      "iconId": "cmdRemove",
      "title": "{{i18n.epCmdUnassignTitle}}"
    },
    "cloneOperationCommand": {
      "iconId": "cmdOperationClone",
      "title": "{{i18n.cloneOperation}}"
    },
    "cloneProcessCommand": {
      "iconId": "cmdProcessClone",
      "title": "{{i18n.cloneProcess}}"
    },
    "epCloneOperationOrProcessGroup": {
      "iconId": "cmdDuplicate",
      "title": "{{i18n.addClone}}",
      "isGroup": true
    },
    "epCmdPasteInto": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteIntoTitle}}"
    },
    "epCmdPasteGroup": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteGroupTitle}}",
      "isGroup": true
    },
    "epCmdPasteBefore": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteBeforeTitle}}"
    },
    "epCmdPasteAfter": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteAfterTitle}}"
    },
    "epCmdPackOrUnpack": {
      "iconId": "cmdUnpack",
      "isGroup": false,
      "title": "{{i18n.epUnpack}}",
      "selected": {
        "iconId": "cmdPack",
        "title": "{{i18n.epPack}}"
      }
    },
    "epPasteRefParts": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epPasteRefPartsTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.epPasteRefPartsTitle}}",
        "messages": [
          "{{i18n.epPasteRefPartsDescription}}",
          "{{i18n.epPasteRefPartsCriteria}}"
        ]
      }
    },
    "epCmdUnpackAll": {
      "iconId": "cmdUnpackAll16",
      "isGroup": false,
      "title": "{{i18n.epUnpackAll}}"
    },
    "epCmdPackAll": {
      "iconId": "cmdPackAll16",
      "isGroup": false,
      "title": "{{i18n.epPackAll}}"
    },
    "epProcessRegenerateFindNumber": {
      "iconId": "cmdRegenerateNumber",
      "title": "{{i18n.regenerateFindNumberTitle}}",
      "description": "{{i18n.regenerateFindNumberDescription}}"
    },
    "submitToWorkflowCommand": {
      "iconId": "cmdSubmitToWorkflow",
      "title": "{{i18n.submitToWorkflowTitle}}",
      "description": "{{i18n.submitToWorkflowDescription}}"
    },
    "epValidationRunCommand": {
      "iconId": "cmdPlay",
      "isGroup": false,
      "title": "{{i18n.runValidationsCommandTitle}}"
    },
    "epValidationOpenValidationsPanelCommand": {
      "iconId": "cmdOpenValidationChecks",
      "isGroup": false,
      "title": "{{i18n.openValidationsPanelCommandTitle}}",
      "selected": {
        "iconId": "cmdOpenValidationChecks",
        "title": "{{i18n.closeValidationsPanelCommandTitle}}"
      }
    },
    "openAssemblyPlanningTaskSwitcherCommand": {
      "iconId": "miscTaskAssemblyPlanningLarge",
      "title": "{{i18n.processPlanningTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.processPlanningTitle}}",
        "messages": [
          "{{i18n.assemblyPlanningTaskDescription}}"
        ]
      }
    },
    "openAssemblyPlanningWithAssociatedProcessCheckCommand": {
      "iconId": "miscTaskAssemblyPlanning",
      "title": "{{i18n.processPlanningTitle}}"
    },
    "goToProcessPlanningFromProcessCommand": {
      "iconId": "miscTaskAssemblyPlanning",
      "title": "{{i18n.processPlanningTitle}}"
    },
    "assemblyCreateGroupCommand": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.createGroupTitle}}"
    },
    "openAssemblyPlanningTaskCommandForManagePage": {
      "iconId": "miscTaskAssemblyPlanningLarge",
      "title": "{{i18n.processPlanningTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.processPlanningTitle}}",
        "messages": [
          "{{i18n.assemblyPlanningTaskDescription}}"
        ]
      }
    },
    "epAssignWorkAreaToScope": {
      "iconId": "cmdAddWorkArea",
      "title": "{{i18n.addWorkArea}}"
    },
    "epAssignWorkAreaToBopLine": {
      "iconId": "cmdAssignWorkArea",
      "title": "{{i18n.assignWorkAreaTile}}",
      "description": "{{i18n.assignWorkAreaDescription}}"
    },
    "epRemoveWorkareaFromScope": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeWorkarea}}"
    },
    "openWorkInstructionsTaskSwitcherCommand": {
      "iconId": "miscTaskAuthorWorkInstructionsLarge",
      "title": "{{i18n.openWorkInstructionsCommandTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.openWorkInstructionsCommandTitle}}",
        "messages": [
          "{{i18n.openWorkInstructionsCommandDescription}}"
        ]
      }
    },
    "wiCmdOpenInEwi": {
      "iconId": "cmdOpen",
      "title": "{{i18n.openInEwi}}",
      "extendedTooltip": {
        "view": "WiOpenEwiCommandTooltip"
      }
    },
    "openWorkInstructionsWithAssociatedProcessCheckCommand": {
      "iconId": "miscTaskAuthorWorkInstructions",
      "title": "{{i18n.openWorkInstructionsCommandTitle}}"
    },
    "goToWorkInstructionsFromProcessCommand": {
      "iconId": "miscTaskAuthorWorkInstructions",
      "title": "{{i18n.openWorkInstructionsCommandTitle}}"
    },
    "goToWorkInstructionsFromProcessStationCommand": {
      "iconId": "miscTaskAuthorWorkInstructions",
      "title": "{{i18n.openWorkInstructionsCommandTitle}}"
    },
    "openWorkInstructionsTaskCommandForManagePage": {
      "iconId": "miscTaskAuthorWorkInstructionsLarge",
      "title": "{{i18n.openWorkInstructionsCommandTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.openWorkInstructionsCommandTitle}}",
        "messages": [
          "{{i18n.openWorkInstructionsCommandDescription}}"
        ]
      }
    },
    "wiAssignWorkAreaToSelectedObj": {
      "iconId": "cmdAssignWorkArea",
      "title": "{{i18n.addWorkArea}}"
    },
    "epAssignToProcessResource": {
      "iconId": "cmdAssignTask",
      "title": "{{i18n.assignToProcessResource}}"
    },
    "epOpenTimeDistribution": {
      "iconId": "cmdVariantAnalysis",
      "title": "{{i18n.openTimeDistributionTooltip}}"
    },
    "epBalancingToggleProductBOP": {
      "iconId": "cmdShowProductBOPPanel",
      "title": "{{i18n.showProductBOP}}",
      "selected": {
        "iconId": "cmdShowProductBOPPanel",
        "title": "{{i18n.hideProductBOP}}"
      }
    },
    "openLineBalancingTaskFromGoToCommand": {
      "iconId": "miscTaskLineBalancing",
      "title": "{{i18n.LineBalancingTitle}}"
    },
    "epBalancingPasteContextMenuCommand": {
      "iconId": "cmdPaste",
      "title": "{{i18n.Awp0PasteGroup}}",
      "isGroup": false,
      "isToggle": false
    },
    "openLineBalancingTaskSwitcherCommand": {
      "iconId": "miscTaskLineBalancing",
      "title": "{{i18n.LineBalancingTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.LineBalancingTitle}}",
        "messages": [
          "{{i18n.lineBalancingTileDescription}}"
        ]
      }
    },
    "epBalancingCutCommand": {
      "iconId": "cmdCut",
      "isGroup": false,
      "title": "{{i18n.Awp0CutTitle}}"
    },
    "epBalancingCopyCommand": {
      "iconId": "cmdCopy",
      "title": "{{i18n.Awp0CopyTitle}}",
      "isGroup": false
    },
    "epBalancingMultipleDeleteCommand": {
      "iconId": "cmdDelete",
      "title": "{{i18n.epCmdDeleteTitle}}",
      "description": "{{i18n.epCmdDeleteDesc}}"
    },
    "balancingStationTileGroupCommands": {
      "iconId": "cmdMore",
      "isGroup": true,
      "title": "{{i18n.more}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}"
    },
    "epCreateOperatorInLB": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createOperator}}"
    },
    "epBalancingCmdDeleteOperator": {
      "iconId": "cmdDelete",
      "title": "{{i18n.epBalancingCmdDeleteOperatorTitle}}"
    },
    "epBalancingPrCapacityCommand": {
      "iconId": "cmdSetRatio",
      "title": "{{i18n.epBalancingEditPrCapacityCommandName}}"
    },
    "epBalancingOpenCommand": {
      "iconId": "cmdOpen",
      "title": "{{i18n.open}}"
    },
    "epOpenLineLayoutInNewTab": {
      "iconId": "cmdViewLineLayout",
      "title": "{{i18n.openLineLayout}}"
    },
    "epShowPartPlanningActivitiesToggleCommand": {
      "title": "{{i18n.epShowPartPlanningActivitiesToggleCommandTitle}}",
      "iconId": "cmdPartPlanning",
      "isGroup": false,
      "description": "{{i18n.epPartPlanningActivitiesToggleCommandToolTipDescription}}",
      "selected": {
        "title": "{{i18n.epHidePartPlanningActivitiesToggleCommandTitle}}"
      }
    },
    "openInNxTcXmlEP": {
      "iconId": "cmdOpenInNx",
      "title": "{{i18n.Awn0OpenNxTcXmlTitle}}",
      "description": "{{i18n.Awn0NXOpenHostedDesc}}"
    },
    "openInNxHostedCellCommand": {
      "iconId": "cmdOpenInNx",
      "title": "{{i18n.openHostedCommandTitle}}",
      "description": "{{i18n.Awn0NXOpenHostedDesc}}"
    },
    "epRemoveScope": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeScope}}"
    },
    "openOperationPlanningCommand": {
      "iconId": "miscTaskOperationPlanningLarge",
      "title": "{{i18n.operationPlanningPageTitle}}"
    },
    "openOperationPlanningTaskSwitcherCommand": {
      "iconId": "miscTaskOperationPlanningLarge",
      "title": "{{i18n.operationPlanningPageTitle}}"
    },
    "epSelectProductVariantPopupCommand": {
      "iconId": "cmdSettings",
      "title": "{{i18n.selectProductVariantsPopupTitle}}",
      "isGroup": false
    },
    "pmiMoreCommand": {
      "iconId": "cmdMoreVertical",
      "title": "{{i18n.more}}"
    },
    "pmiRemoveInspection": {
      "iconId": "cmdRemove",
      "title": "{{i18n.unassign}}"
    },
    "updatePmiCommand": {
      "iconId": "cmdUpdateAssignedRevision",
      "title": "{{i18n.update}}",
      "description": "{{i18n.pmiUpdateCommandDescription}}"
    },
    "syncPlantToBOPCommand": {
      "iconId": "cmdSync",
      "title": "{{i18n.syncBOE}}",
      "description": "{{i18n.syncPlantDesc}}",
      "isGroup": false
    },
    "syncBOPtoPlantCommand": {
      "iconId": "cmdSync",
      "title": "{{i18n.syncBOE}}",
      "description": "{{i18n.syncPlantBOPDesc}}",
      "isGroup": false
    },
    "WISaveInstructionsCommand": {
      "iconId": "cmdSave",
      "title": "{{i18n.save}}"
    },
    "WIShowTipsCommand": {
      "iconId": "cmdShowTips",
      "title": "{{i18n.tips}}"
    },
    "stepGroupCommands": {
      "iconId": "cmdMore",
      "isRibbon": true,
      "title": "{{i18n.more}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}"
    },
    "WIValidateOccEffectivityCommand": {
      "iconId": "cmdValidateEffectivityCoverage",
      "isGroup": false,
      "title": "{{i18n.validateEffectivityPopupTitle}}"
    },
    "WICloseValidateEffectivityPopupCommand": {
      "iconId": "cmdClosePanel",
      "isGroup": false,
      "title": "Close"
    },
    "setEffectivityStepCommand": {
      "iconId": "cmdApplyEffectiveDate",
      "title": "{{i18n.setEffectivity}}",
      "description": "{{i18n.setEffectivityDesc}}"
    },
    "removeEffectivityCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.deleteEffectivity}}"
    },
    "addEffectivityCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.createEffectivity}}"
    },
    "editEffectivityCommand": {
      "iconId": "cmdEdit",
      "title": "{{i18n.editEffectivity}}"
    },
    "epSetPartsEffectivityCommand": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.setEffectivity}}",
      "description": "{{i18n.setEffectivityDesc}}"
    },
    "epSetProductViewEffectivityCommand": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.setEffectivity}}",
      "description": "{{i18n.setEffectivityDesc}}"
    },
    "openProcessPlanningTaskFromStationCommand": {
      "iconId": "miscTaskAssemblyPlanning",
      "title": "{{i18n.processPlanningTitle}}"
    },
    "openHighLevelPlanningTaskSwitcherCommand": {
      "iconId": "miscTaskAuthorHighLevelBOPLarge",
      "title": "{{i18n.highLevelPlanningTaskTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.highLevelPlanningTaskTitle}}",
        "messages": [
          "{{i18n.openPlanningCommandTileDescription}}",
          "{{i18n.openPlanningCommandTileCriteria}}"
        ]
      }
    },
    "openHighLevelPlanningTaskSwitcherCommandForManagePage": {
      "iconId": "miscTaskAuthorHighLevelBOPLarge",
      "title": "{{i18n.highLevelPlanningTaskTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.highLevelPlanningTaskTitle}}",
        "messages": [
          "{{i18n.openPlanningCommandTileDescription}}",
          "{{i18n.openPlanningCommandTileCriteria}}"
        ]
      }
    },
    "highLevelPlanningCmdDeleteProcess": {
      "iconId": "cmdDelete",
      "title": "{{i18n.epCmdDeleteTitle}}",
      "description": "{{i18n.epCmdDeleteDesc}}"
    },
    "highLevelPlanningCmdPasteIntoContainer": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteIntoTitle}}"
    },
    "highLevelPlanningCmdPasteGroup": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteGroupTitle}}",
      "isGroup": true
    },
    "highLevelPlanningCmdPasteBefore": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteBeforeTitle}}"
    },
    "highLevelPlanningCmdPasteAfter": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteAfterTitle}}"
    },
    "highLevelPlanningCmdCutProcess": {
      "iconId": "cmdCut",
      "title": "{{i18n.highLevelPlanningCmdCutTitle}}",
      "description": "{{i18n.highLevelPlanningCmdCutDesc}}"
    },
    "highLevelPlanningCloneProcessGroupCmd": {
      "iconId": "cmdDuplicate",
      "title": "{{i18n.highLevelPlanningCloneProcessGroupCmdTitle}}",
      "description": "{{i18n.highLevelPlanningCloneProcessGroupCmdDesc}}",
      "isGroup": true
    },
    "highLevelPlanningCloneProcessWithSameAssembly": {
      "title": "{{i18n.cloneProcessWithSameAssemblyTitle}}"
    },
    "highLevelPlanningCloneProcessWithSelectedAssembly": {
      "title": "{{i18n.cloneProcessWithSelectedAssemblyTitle}}"
    },
    "openProcessPlanningTaskFromHighLevelPlanningProcessTree": {
      "iconId": "miscTaskAssemblyPlanning",
      "title": "{{i18n.processPlanningTitle}}"
    },
    "highLevelPlanningProcessAreaCmdCutProcess": {
      "iconId": "cmdCut",
      "title": "{{i18n.highLevelPlanningCmdCutTitle}}",
      "description": "{{i18n.highLevelPlanningCmdCutDesc}}"
    },
    "highLevelPlanningProcessAreaCmdPasteGroup": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteGroupTitle}}",
      "isGroup": true
    },
    "highLevelPlanningProcessAreaCmdPasteBefore": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteBeforeTitle}}"
    },
    "highLevelPlanningProcessAreaCmdPasteIntoContainer": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteIntoTitle}}"
    },
    "highLevelPlanningProcessAreaCmdPasteAfter": {
      "iconId": "cmdPaste",
      "title": "{{i18n.epCmdPasteAfterTitle}}"
    },
    "epNavigationHoverMenuCommand": {
      "iconId": "cmdMore",
      "title": "{{i18n.epMoreActionsCommandTitle}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}",
      "isRibbon": true
    },
    "epNavigationHoverMenuWithAssociatedProcessCheckCommand": {
      "iconId": "cmdMore",
      "title": "{{i18n.epMoreActionsCommandTitle}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}",
      "isGroup": true
    },
    "openBackgroundPartsTaskSwitcherCommand": {
      "iconId": "miscTaskManageBackgroundPartsLarge",
      "title": "{{i18n.backgroundPartsTaskTitle}}",
      "extendedTooltip": {
        "view": "MfeCommandTooltip",
        "title": "{{i18n.backgroundPartsTaskTitle}}",
        "messages": [
          "{{i18n.openBackgroundPartsTaskDescription}}",
          "{{i18n.openBackgroundPartsTaskCriteria}}"
        ]
      }
    },
    "assignBackgroundPartsCommand": {
      "iconId": "cmdAddAsBackgroundPart",
      "isGroup": false,
      "title": "{{i18n.assignBackgroundPartsCmdTitle}}",
      "description": "{{i18n.assignBackgroundPartsCmdDesc}}"
    },
    "removeBackgroundPartsCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeBackgroundPartsCmdTitle}}",
      "description": "{{i18n.removeBackgroundPartsCmdDesc}}"
    },
    "showMatchingEBOMLineCommand": {
      "iconId": "cmdFind",
      "isToggle": false,
      "title": "{{i18n.showMatchingEBOMLineCommandTitle}}"
    },
    "removeEBOMFromWorkpackageCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeStructureTitle}}",
      "isGroup": false
    },
    "epGeneratePlantFromPlantBOPCommand": {
      "iconId": "cmdNew",
      "title": "{{i18n.epGeneratePlantFromPlantBOPTitle}}",
      "isGroup": false
    },
    "epAddAssociatedPlantCommand": {
      "iconId": "cmdAssociate",
      "title": "{{i18n.epAddAssociatedPlantTitle}}",
      "isGroup": false
    },
    "epGeneratePlantBOPFromPlantCommand": {
      "iconId": "cmdNew",
      "title": "{{i18n.epGeneratePlantBOPFromPlantTitle}}",
      "isGroup": false
    },
    "epAddAssociatedPlantBOPCommand": {
      "iconId": "cmdAssociate",
      "title": "{{i18n.epAddAssociatedPlantBOPTitle}}",
      "isGroup": false
    },
    "epConfigurationFilter": {
      "iconId": "cmdConfigure",
      "isGroup": true,
      "title": "{{i18n.occmgmtConfigurationFilterTitle}}",
      "description": "{{i18n.Awb0ConfigurationFilterDesc}}"
    },
    "epProcessConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.bopConfiguration}}",
      "description": "{{i18n.bopConfigurationDesc}}"
    },
    "epMbomConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.mbomConfiguration}}",
      "description": "{{i18n.mbomConfigurationDesc}}"
    },
    "epEbomConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.ebomConfiguration}}",
      "description": "{{i18n.ebomConfigurationDesc}}"
    },
    "epPlantConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.plantConfiguration}}",
      "description": "{{i18n.plantConfigurationDesc}}"
    },
    "epProductBopConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.productBopConfiguration}}",
      "description": "{{i18n.productBopConfigurationDesc}}"
    },
    "epResetAllConfiguration": {
      "iconId": "cmdReset",
      "title": "{{i18n.resetAllConfiguration}}",
      "description": "{{i18n.resetAllConfigurationDesc}}"
    },
    "viewOtherConfigurationCommand": {
      "iconId": "cmdViewPlanInAnotherConfiguration",
      "title": "{{i18n.viewOtherConfigurationTitle}}",
      "description": "{{i18n.viewOtherConfigurationTitleDesc}}"
    },
    "epConfigContextGroupCommand": {
      "iconId": "cmdMore",
      "title": "{{i18n.epMoreActionsCommandTitle}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}",
      "isRibbon": true
    },
    "epSetConfigContextToWorkpackageCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.set}}",
      "isGroup": false
    },
    "epRemoveConfigContextFromWorkpackageCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeStructureTitle}}",
      "isGroup": false
    },
    "epOpenConfigContextFromWorkpackageCommand": {
      "iconId": "cmdOpen",
      "title": "{{i18n.openConfigContext}}",
      "isGroup": false
    },
    "epProductionProgramGroupCommand": {
      "iconId": "cmdMore",
      "title": "{{i18n.epMoreActionsCommandTitle}}",
      "description": "{{i18n.epMoreActionsCommandDescription}}",
      "isRibbon": true
    },
    "epCreateProductionProgramFromWorkpackageCommand": {
      "iconId": "cmdNew",
      "title": "{{i18n.createProductionProgram}}",
      "description": "{{i18n.createProductionProgramToolTip}}",
      "isGroup": false
    },
    "epUseExistingProductionProgramFromWorkpackageCommand": {
      "iconId": "cmdReuse",
      "title": "{{i18n.useExistingProductionProgram}}",
      "isGroup": false
    },
    "epEditProductionProgramFromWorkpackageCommand": {
      "iconId": "cmdEdit",
      "title": "{{i18n.editProductionProgram}}",
      "isGroup": false
    },
    "epRemoveProductionProgramFromWorkpackageCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeProductionProgram}}",
      "isGroup": false
    },
    "epRemoveProductVariantFromProductionProgramCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.remove}}",
      "isGroup": false
    },
    "createDynamicInProcessAssemblyCommand": {
      "iconId": "cmdCreateDIPA",
      "isGroup": false,
      "title": "{{i18n.createDIPACmdTitle}}"
    },
    "updateDynamicInProcessAssemblyCommand": {
      "iconId": "cmdUpdateDIPA",
      "isGroup": false,
      "title": "{{i18n.updateDIPACmdTitle}}"
    },
    "removeIntegratedFromWorkpackageCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeStructureTitle}}",
      "isGroup": false
    },
    "deletePriFlow": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteFlowCommand}}"
    }
  },
  "commandHandlers": {
    "epShowActivitiesToggleCommandHandler": {
      "id": "epShowActivitiesToggleCommand",
      "action": "epShowActivitiesToggleCommandAction",
      "selectWhen": {
        "condition": "conditions.epShowActivities"
      },
      "activeWhen": {
        "condition": "conditions.showActivitiesCommand"
      },
      "visibleWhen": {
        "condition": "conditions.showActivitiesCommand"
      }
    },
    "epAddActivityByCodeCommandHandler": {
      "id": "epAddActivityByCode",
      "action": "epAddActivityByCodeAction",
      "activeWhen": {
        "condition": "conditions.showCreateDataCardActivitiesCommands"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateDataCardActivitiesCommands"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epAddActivityFromDataCardCommandHandler": {
      "id": "epAddActivityFromDataCard",
      "action": "epAddActivityFromDataCardAction",
      "activeWhen": {
        "condition": "conditions.showCreateDataCardActivitiesCommands"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateDataCardActivitiesCommands"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epDeleteActivitiesCommandHandler": {
      "id": "epDeleteActivitiesCommand",
      "action": "epActivitiesDeleteAction",
      "activeWhen": {
        "condition": "conditions.showDeleteActivitiesCommand"
      },
      "visibleWhen": {
        "condition": "conditions.showDeleteActivitiesCommand"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epCreateClassicActivityCommandHandler": {
      "id": "epCreateClassicActivityCmd",
      "action": "epCreateClassicActivityCommandAction",
      "activeWhen": {
        "condition": "conditions.showCreateActivitiesCommands"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateActivitiesCommands"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "ShowCCObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "tools_info_OpenInEasyPlanAction",
      "activeWhen": {
        "condition": "conditions.isCtxSelectedCCObject"
      },
      "visibleWhen": {
        "condition": "conditions.isCtxSelectedCCObject"
      }
    },
    "PinCCObjectCommandHandler": {
      "id": "Awp0PinObject",
      "action": "pinCCObjectAction",
      "activeWhen": {
        "condition": "conditions.isCtxSelectedCCObjectPin"
      },
      "visibleWhen": {
        "condition": "conditions.isCtxSelectedCCObjectPin"
      }
    },
    "EasyPlanObjectNavigationCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openManageWorkPackagePage",
      "activeWhen": {
        "condition": "conditions.openInEP"
      },
      "visibleWhen": {
        "condition": "conditions.openInEP"
      }
    },
    "OpenInEPWithMCNCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openInEPWithMCNAction",
      "activeWhen": {
        "condition": "conditions.openInEPWithMCN"
      },
      "visibleWhen": {
        "condition": "conditions.openInEPWithMCN"
      }
    },
    "tools_info_OpenInEasyPlanCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "tools_info_OpenInEasyPlanAction",
      "activeWhen": {
        "condition": "conditions.tool_info_open"
      },
      "visibleWhen": {
        "condition": "conditions.tool_info_open"
      }
    },
    "openInNewWindowEasyPlanCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openInNewWindowInEasyPlanAction",
      "activeWhen": {
        "condition": "conditions.tool_info_open"
      },
      "visibleWhen": {
        "condition": "conditions.tool_info_open"
      }
    },
    "openInNewTabEasyPlanCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openInNewTabInEasyPlanAction",
      "activeWhen": {
        "condition": "conditions.tool_info_open"
      },
      "visibleWhen": {
        "condition": "conditions.tool_info_open"
      }
    },
    "openObjectCellHandlerInTableHandler": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "action": "openManageWorkPackagePage",
      "activeWhen": {
        "condition": "conditions.open_in_table_cell"
      },
      "visibleWhen": {
        "condition": "conditions.open_in_table_cell"
      }
    },
    "tools_info_OpenInEasyPlanWithMCNCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "tools_info_OpenInEasyPlanWithMCNAction",
      "activeWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      },
      "visibleWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      }
    },
    "openInNewWindowEasyPlanWithMCNCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openInNewWindowInEasyPlanWithMCNAction",
      "activeWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      },
      "visibleWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      }
    },
    "openInNewTabEasyPlanWithMCNCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openInNewTabInEasyPlanWithMCNAction",
      "activeWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      },
      "visibleWhen": {
        "condition": "conditions.toolInfoOpenWithMCN"
      }
    },
    "openEpTasksCommandHandler": {
      "id": "openEpTasksCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "openAuthorBOETaskSwitcherCommandHandler": {
      "id": "openAuthorBOETaskSwitcherCommand",
      "action": "openAuthorBOETaskPageAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isBOEAllowedAndPartOfWP"
      },
      "selectWhen": false
    },
    "openAuthorBOETaskSwitcherCommandHandlerForBackgroundParts": {
      "id": "openAuthorBOETaskSwitcherCommand",
      "activeWhen": {
        "condition": "conditions.isBackgroundPartsPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isOpenAuthorBOETaskSwitcherVisibleForBackgroundParts"
      }
    },
    "openAuthorBOETaskForManagePageCommandHandler": {
      "id": "openAuthorBOETaskForManagePageCommand",
      "action": "openAuthorBOETaskPageAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isBOEAuthoringAllowedInWorkPackage"
      },
      "enableWhen": {
        "condition": "conditions.isBOEAllowedAndPartOfWP"
      }
    },
    "AddToMyChangesHandler": {
      "id": "Cm1AddToMyChanges",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "ExistingTraceLinkCommandHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "CreateTraceLinkCtxHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "CreateTraceLinkHandler": {
      "id": "Arm0CreateTraceLink",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "OverrideAwb0ViewGroupHandler": {
      "id": "Awb0ViewGroup",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "Awb0ResetStructureHandler": {
      "id": "Awb0ResetStructure",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "Awp0ViewGroupHandler": {
      "id": "Awp0ViewGroup",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "openInIllustratorForPlantHandler": {
      "id": "openInIllustrator",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "Cm1ShowCreateChangeHandler": {
      "id": "Cm1ShowCreateChange",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "Cm1ShowCreateChangeInContextHandler": {
      "id": "Cm1ShowCreateChangeInContext",
      "activeWhen": {
        "condition": "conditions.IsMEPlantContext"
      },
      "visibleWhen": false
    },
    "Evm1ExecuteRecipeCmdHandler": {
      "id": "Evm1ExecuteRecipe",
      "activeWhen": {
        "condition": "conditions.RecipeCmdVisibility"
      },
      "visibleWhen": false
    },
    "Evm1CreateRecipeCmdHandler": {
      "id": "Evm1CreateRecipe",
      "activeWhen": {
        "condition": "conditions.RecipeCmdVisibility"
      },
      "visibleWhen": false
    },
    "Att1SetFreezePointCmdHandler": {
      "id": "Att1SetFreezePoint",
      "activeWhen": {
        "condition": "conditions.FreezePointCmdVisibility"
      },
      "visibleWhen": false
    },
    "CreateARCmdHandler": {
      "id": "Crt1CreateValidationContract",
      "activeWhen": {
        "condition": "conditions.CreateARCmdVisibility"
      },
      "visibleWhen": false
    },
    "Sc1CreateExchangeCmdHandler": {
      "id": "Sc1CreateExchange",
      "activeWhen": {
        "condition": "conditions.ShowCreateEventCmdVisiblity"
      },
      "visibleWhen": false
    },
    "Arm0GenerateTraceabilityMatrixCmdHandler": {
      "id": "Arm0GenerateTraceabilityMatrix",
      "activeWhen": {
        "condition": "conditions.GenerateTraceabilityMatrixCmdVisibility"
      },
      "visibleWhen": false
    },
    "AddInspectionDefCmdHandler": {
      "id": "Aqc0AddCharRepresentation",
      "activeWhen": {
        "condition": "conditions.AddInspectionDefCmdVisibility"
      },
      "visibleWhen": false
    },
    "Smr1CreateAsMaintainedStructureCmdHandler": {
      "id": "Smr1CreateAsMaintainedStructure",
      "activeWhen": {
        "condition": "conditions.CreateAsMaintainedStructureCmdVisibility"
      },
      "visibleWhen": false
    },
    "Smr1CreateAsBuiltStructureCmdHandler": {
      "id": "Smr1CreateAsBuiltStructure",
      "activeWhen": {
        "condition": "conditions.CreateAsBuiltStructureCmdVisibility"
      },
      "visibleWhen": false
    },
    "Sc1CreateLineItemCmdHandler": {
      "id": "Sc1CreateLineItem",
      "activeWhen": {
        "condition": "conditions.ShowCreateEventCmdVisibility"
      },
      "visibleWhen": false
    },
    "Awb0CreateSessionCmdHandler": {
      "id": "Awb0CreateSessionCommand",
      "activeWhen": {
        "condition": "conditions.CreateSessionCmdVisibility"
      },
      "visibleWhen": false
    },
    "Awb0SaveWorkingContextCmdHandler": {
      "id": "Awb0SaveWorkingContext",
      "activeWhen": {
        "condition": "conditions.CreateSWCCmdVisibility"
      },
      "visibleWhen": false
    },
    "Eda1NewCollaborationCmdHandler": {
      "id": "Eda1NewCollaboration",
      "activeWhen": {
        "condition": "conditions.NewCollaborationCmdVisibility"
      },
      "visibleWhen": false
    },
    "Qfm0GenerateFmeaCmdHandler": {
      "id": "Qfm0GenerateFmea",
      "activeWhen": {
        "condition": "conditions.GenerateFmeaCmdVisibility"
      },
      "visibleWhen": false
    },
    "Arm0ImportFromOfficeCmdHandler": {
      "id": "Arm0ImportFromOffice",
      "activeWhen": {
        "condition": "conditions.ImportCmdVisibility"
      },
      "visibleWhen": false
    },
    "AssignFinishCmdHandler": {
      "id": "Fsh1AssignFinish",
      "activeWhen": {
        "condition": "conditions.AssignFinishCmdVisibility"
      },
      "visibleWhen": false
    },
    "MarkAndSuspectCmdHandler": {
      "id": "Arm0MarkAndSuspect",
      "activeWhen": {
        "condition": "conditions.MarkAsSuspectCmdVisibility"
      },
      "visibleWhen": false
    },
    "ImportBOMCmdHandler": {
      "id": "Awb0ImportFromExcel",
      "activeWhen": {
        "condition": "conditions.ImportBOMCmdVisibility"
      },
      "visibleWhen": false
    },
    "assignBOECmdHandler": {
      "id": "assignResourceSelectedInClassificationPopup",
      "action": "addElementsAction",
      "visibleWhen": {
        "condition": "conditions.isAceOccurenceSublocation"
      },
      "activeWhen": {
        "condition": "conditions.isAceOccurenceSublocation"
      }
    },
    "updateRevisionCommandHandler": {
      "id": "updateRevisionCommand",
      "action": "openUpdateRevisionPopupBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOpenUpdateRevisionPopupVisible"
      }
    },
    "createNewWorkPackageHandler": {
      "id": "createNewWorkPackage",
      "action": "OpenCreateWorkPackagePopup",
      "activeWhen": true
    },
    "removeStructureFromWorkpackageCommandHandler": {
      "id": "removeStructureFromWorkpackageCommand",
      "action": "removeStructureFromWorkpackage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isStructureSelectedForRemoveStructureContext"
      }
    },
    "createMbomAndPlantBopUsingRuleStreamCommandHandler": {
      "id": "createMbomAndPlantBopUsingRuleStream",
      "action": "generateStructureCmdActionPopup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isMbomPlantBopCreationUsingRuleStreamAllowed"
      }
    },
    "epAddStructureToWorkpackageCommandHandler": {
      "id": "epAddStructureToWorkpackageTileCommand",
      "action": "displayAddObjectPopup",
      "activeWhen": true
    },
    "epUseExistingStructureForWorkpackageCommandHandler": {
      "id": "epUseExistingStructureForWorkpackageCommand",
      "action": "displayAddObjectPopup",
      "activeWhen": true
    },
    "epCreateStructureToWorkpackageCommandHandler": {
      "id": "epCreateStructureForWorkpackageTileCommand",
      "action": "displayCreatePopup",
      "activeWhen": true
    },
    "epCreateStructureFromMirrorCommandHandler": {
      "id": "epCreateStructureFromMirrorTileCommand",
      "action": "createMbomFromMirrorAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isMbomMirroCmdAvailable"
      }
    },
    "openProductBOPTaskSwitcherCommandHandler": {
      "id": "openProductBOPTaskSwitcherCommand",
      "action": "openProductBOPTaskSwitcherCommandAction",
      "activeWhen": {
        "condition": "conditions.isProductBOPAvailableInWorkspace"
      },
      "visibleWhen": {
        "condition": "conditions.isProductBOPAvailableInWorkspaceAndPartOfWorkPackage"
      },
      "selectWhen": {
        "condition": "conditions.isProductBOPSelected"
      }
    },
    "openProductBOPTaskHandlerForManagePage": {
      "id": "openProductBOPTaskCommandForManagePage",
      "action": "openProductBOPTaskCommandForManagePageBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isProductBOPAvailableInWorkspaceAndAllowedInWorkPackage"
      },
      "enableWhen": {
        "condition": "conditions.isProductBOPAvailableInWorkspaceAndPartOfWorkPackage"
      }
    },
    "backToBalancingCommandHandler": {
      "id": "backToBalancingCommand",
      "action": "goBackToBalancingAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isValidToGoBackToBalancing"
      }
    },
    "classifyOperationCommandHandler": {
      "id": "epHostedClassificationCommand",
      "action": "showClassificationPopupAction",
      "activeWhen": true
    },
    "epProductBOPCopyOperationCommandHandler": {
      "id": "Awp0Copy",
      "action": "epCmdCopyCommandAction",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isProductBOPCopyOperationAllowed"
      }
    },
    "epProductBOPCutOperationCommandHandler": {
      "id": "epCmdCut",
      "action": "epCmdCutCommandAction",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isProductBOPCutOperationAllowed"
      }
    },
    "epProductBOPPasteOperationCommandHandler": {
      "id": "Awp0Paste",
      "action": "epProductBOPPasteOperationCommandAction",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isProductBOPPasteOperationAllowed"
      }
    },
    "epCmdPasteIntoProductBOPHandler": {
      "id": "epCmdPasteInto",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "enableWhen": {
        "condition": "conditions.epCmdPasteIntoProductBOPCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteIntoProductBOPCondition"
      },
      "action": "epCmdPasteIntoAction"
    },
    "epCmdPasteBeforeProductBOPHandler": {
      "id": "epCmdPasteBefore",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "enableWhen": {
        "condition": "conditions.epCmdPasteBeforeProductBOPCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteBeforeProductBOPCondition"
      },
      "action": "epCmdPasteBeforeAction"
    },
    "epCmdPasteAfterProductBOPHandler": {
      "id": "epCmdPasteAfter",
      "activeWhen": {
        "condition": "conditions.isProductBOPSelected"
      },
      "enableWhen": {
        "condition": "conditions.epCmdPasteBeforeProductBOPCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteBeforeProductBOPCondition"
      },
      "action": "epCmdPasteAfterAction"
    },
    "cmdAlternativeOpenInNewTab": {
      "id": "cmdAlternativeOpenInNewTab",
      "action": "openAltCCInNewTab",
      "activeWhen": true
    },
    "cmdCreateAlternativeCommandHandler": {
      "id": "cmdCreateAlternative",
      "action": "createAlternativeCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isValidToCreateAlt"
      }
    },
    "cmdManageAlternativesGroupCommandHandler": {
      "id": "cmdManageAlternativesGroup",
      "activeWhen": {
        "condition": "conditions.isMasterCC"
      },
      "visibleWhen": {
        "condition": "conditions.isMasterCC"
      }
    },
    "cmdCreatePartialAlternativeCommandHandler": {
      "id": "cmdCreatePartialAlternative",
      "action": "createPartialAlternativeCommandAction",
      "activeWhen": {
        "condition": "conditions.isMasterCC"
      },
      "visibleWhen": {
        "condition": "conditions.isMasterCC"
      }
    },
    "cmdSearchPartialAlternativeCommandHandler": {
      "id": "cmdSearchPartialAlternative",
      "action": "searchPartialAlternativeCommandAction",
      "activeWhen": {
        "condition": "conditions.isMasterCC"
      },
      "visibleWhen": {
        "condition": "conditions.isMasterCC"
      }
    },
    "cmdGoToMasterCommandHandler": {
      "id": "cmdGoToMaster",
      "action": "goToMasterCommandAction",
      "activeWhen": {
        "condition": "conditions.isAlternativeCC"
      },
      "visibleWhen": {
        "condition": "conditions.isAlternativeCC"
      }
    },
    "cmdCloneAlternativeCommandHandler": {
      "id": "cmdCloneAlternative",
      "action": "createAlternativeCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isValidToCloneAlt"
      }
    },
    "epCheckOutCommandHandler": {
      "id": "epCheckOut",
      "action": "epCheckOutCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowCheckOut"
      }
    },
    "epCheckInCommandHandler": {
      "id": "epCheckIn",
      "action": "epPopulateCheckInConfirmationMsgInput",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowCheckIn"
      }
    },
    "cmdCreateReportCommandHandler": {
      "id": "cmdCreateReport",
      "action": "createReportCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isValidToCreateReport"
      }
    },
    "EPOpenShowObjectHandler": {
      "id": "EPOpenShowObject",
      "action": "epOpenShowObjectAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.hasSingleSelection"
      }
    },
    "BOPLineStartEditCommandHandler": {
      "id": "Awp0StartEdit",
      "action": "epBOPLineStartEditSummary",
      "activeWhen": {
        "condition": "conditions.isStartEditAllowedBOPLine"
      },
      "visibleWhen": {
        "condition": "conditions.isStartEditAllowedBOPLine"
      }
    },
    "epClearImpactIndicationPartsHandler": {
      "id": "epPartsClearImpactIndication",
      "action": "epClearImpactIndicationEvent",
      "activeWhen": {
        "condition": "conditions.clearImpactIndicationVisibilityCondition"
      },
      "visibleWhen": {
        "condition": "conditions.clearImpactIndicationVisibilityCondition"
      }
    },
    "epRestoreImpactIndicationPartsHandler": {
      "id": "epRestoreImpactIndication",
      "action": "epRestoreImpactIndicationEvent",
      "activeWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "epUnassignHandler": {
      "id": "epUnassign",
      "action": "epUnassignAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.setOccTypeCommandEnableCondition"
      }
    },
    "epUnassignPartHandler": {
      "id": "epUnassignPart",
      "action": "epUnassignPartBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "epUnassignResourceHandler": {
      "id": "epUnassignResource",
      "action": "epUnassignResourceAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "epSetOccurrenceTypeHandler": {
      "id": "EpSetOccurrenceType",
      "action": "epSetOccurrenceTypeAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.enableSetOccTypeCommmand"
      }
    },
    "epRemoveWorkareaHandler": {
      "id": "epRemoveWorkarea",
      "action": "epRemoveWorkareaAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "epStartEditInformationCommandHandler": {
      "id": "epStartEditInformation",
      "action": "epStartEditInformation",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isStartEditInformationAllowed"
      }
    },
    "epSaveEditsInformationCommandHandler": {
      "id": "epSaveEditsInformation",
      "action": "saveEdits",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCanSaveOrCancelEdit"
      }
    },
    "epCancelEditsInformationCommandHandler": {
      "id": "epCancelEditsInformation",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCanSaveOrCancelEdit"
      }
    },
    "epAttachFileCommandHandler": {
      "id": "epAttachFileLaunchPanelCommand",
      "action": "launchAttachFilePanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSingleSelectionObjectAllowed"
      }
    },
    "epCloseAttachFilePanelCommandHandler": {
      "id": "Awp0CloseCommandPanel",
      "action": "epCloseAttachFilePanelAction",
      "activeWhen": {
        "condition": "conditions.epIsAttachFilePanelOpenCondition"
      },
      "visibleWhen": true
    },
    "epDownloadAttachmentCommandHandler": {
      "id": "epDownloadAttachmentCommand",
      "action": "downloadAttachment",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAttachmentSelected"
      }
    },
    "epDeleteAttachmentCommandHandler": {
      "id": "epDeleteAttachmentCommand",
      "action": "deleteAttachment",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isDeleteOperationAllowed"
      }
    },
    "epUnassignDocumentItemCommandHandler": {
      "id": "epUnassignDocumentItem",
      "action": "epUnassignDocumentItemCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUnassignDocumentItemAllowed"
      }
    },
    "epPasteDocumentItemCommandHandler": {
      "id": "epPasteDocumentItem",
      "action": "epPasteDocumentItemCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPasteDocumentItemAllowed"
      }
    },
    "epPasteResourceCommandHandler": {
      "id": "epPasteResource",
      "action": "epPasteResourceCommandAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isPasteResourceAllowed"
      }
    },
    "epAddWebLinkCommandHandler": {
      "id": "epAddWebLink",
      "action": "launchCreateWebLinkPopupAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSingleInputObjectAllowed"
      }
    },
    "epOpenDocumentCommandHandler": {
      "id": "epOpenDocument",
      "action": "epOpenDocumentAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epRemoveScopeFlowHandler": {
      "id": "epRemoveScopeFlow",
      "action": "epRemoveScopeFlowAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "XcShareWithXceleratorPopupHandler": {
      "id": "XcShareWithXceleratorPopupCmd",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isXcShareFileAllowed"
      }
    },
    "XcBrowseReplaceFilePopupWithReviseCheckHandler": {
      "id": "XcBrowseReplaceFilePopupWithReviseCheckCommand",
      "action": "launchReplaceXCFilePopupWithReviseCheckAction",
      "activeWhen": {
        "condition": "conditions.isReplaceFileAllowed"
      },
      "visibleWhen": false
    },
    "epXcBrowseXceleratorHandler": {
      "id": "XcBrowseXcelertorCmd",
      "activeWhen": {
        "condition": "conditions.isXcLicenseInEpValid"
      },
      "visibleWhen": {
        "condition": "conditions.isXcLicenseInEpValid"
      },
      "action": "epCallBrowseXceleratorAction"
    },
    "epCreateDCDHandler": {
      "id": "epCreateDCDCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSingleInputObjectAllowed"
      },
      "action": "createDcdCommandAction"
    },
    "epRemoveDCDHandler": {
      "id": "epRemoveDCDCommand",
      "action": "epRemoveDCDAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSelectionAllowed"
      }
    },
    "epPasteInspectionDefinitionPartsCommandHandler": {
      "id": "epPasteInspectionDefinitionParts",
      "action": "epPasteInspectionDefinitionPartsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssignInspectionDefinitionPartPasteCondition"
      }
    },
    "epRemoveInspectionDefinitionPartsCommandHandler": {
      "id": "epRemoveInspectionDefinitionPartsCommand",
      "action": "epRemoveInspectionDefinitionPartsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveInspectionPartAllowed"
      }
    },
    "epAssignWorkAreaInWIClassicBopCommandHandler": {
      "id": "epAssignWorkAreaToInputObject",
      "action": "epAssignWorkAreaToInputObjectAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isWIClassicBopConfig"
      }
    },
    "epCmdUnpackAllPartTabHandler": {
      "id": "epCmdPackAllPartsTab",
      "enableWhen": true,
      "activeWhen": true,
      "visibleWhen": true,
      "action": "epCmdPackAllPartsTabAction"
    },
    "epCmdUPckAllPartTabHandler": {
      "id": "epCmdUnpackAllPartsTab",
      "enableWhen": true,
      "activeWhen": true,
      "visibleWhen": true,
      "action": "epCmdUnpackAllPartsTabAction"
    },
    "GotoPreviousPageCmdHandler": {
      "id": "gotoPreviousPage",
      "action": "gotoPreviousPageAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "AssignProjectCmdHandler": {
      "id": "epAssignProject",
      "action": "openProjectSection",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "CreateOperationCommandHandler": {
      "id": "epCreateOperation",
      "action": "createOperationCommandAction",
      "activeWhen": {
        "condition": "conditions.showCreateOperationCmd"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateOperationCmdAndIsNotReadOnlyMode"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "CreateProcessForPertCommandHandler": {
      "id": "epCreateProcess",
      "action": "createProcessCommandActionForProcessSequence",
      "activeWhen": {
        "condition": "conditions.showCreateProcessCmdForPERT"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateProcessCmdForPERT"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epCreateProcessForProductBOPCommandHandler": {
      "id": "epCreateProcess",
      "action": "createProcessCommandAction",
      "activeWhen": {
        "condition": "conditions.showCreateProcessForProductBOPCmd"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateProcessForProductBOPCmd"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "CreateOperationCommandHandlerForPert": {
      "id": "epCreateOperation",
      "action": "createOperationCommandActionForPERT",
      "activeWhen": {
        "condition": "conditions.showCreateOperationCmdForPERT"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateOperationCmdForPERT"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "CreateProcessAreaCommandHandler": {
      "id": "epCreateProcessArea",
      "action": "createProcessAreaCommandActionForProcessTree",
      "activeWhen": {
        "condition": "conditions.isCommandContextSelectionValidForCreateProcessAreaCommand"
      },
      "visibleWhen": {
        "condition": "conditions.isCommandContextSelectionValidForCreateProcessAreaCommand"
      }
    },
    "CreateProcessAreaCommandHandlerForPert": {
      "id": "epCreateProcessArea",
      "action": "createProcessAreaCommandActionForProcessSequence",
      "activeWhen": {
        "condition": "conditions.isContextObjectForPERTValidForCreateProcessAreaCommand"
      },
      "visibleWhen": {
        "condition": "conditions.isContextObjectForPERTValidForCreateProcessAreaCommand"
      }
    },
    "epCreateProcessResourceCommandHandler": {
      "id": "epCreateProcessResource",
      "action": "createProcessResourceCommandAction",
      "activeWhen": {
        "condition": "conditions.showCreateProcessResourceCmd"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateProcessResourceCmd"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epShowCreateOperationUnderProcessCommandHandler": {
      "id": "epCreateOperation",
      "action": "createOperationCommandAction",
      "activeWhen": {
        "condition": "conditions.epShowCreateOperationUnderProcessCommand"
      },
      "visibleWhen": {
        "condition": "conditions.epShowCreateOperationUnderProcessCommand"
      }
    },
    "epCreateProcessCommandHandler": {
      "id": "epCreateProcess",
      "action": "createProcessCommandAction",
      "activeWhen": {
        "condition": "conditions.epShowCreateProcessCmd"
      },
      "visibleWhen": {
        "condition": "conditions.epShowCreateProcessCmd"
      }
    },
    "epCreateFolderCommandHandler": {
      "id": "epCreateFolder",
      "action": "createProcessFolderCommandAction",
      "activeWhen": {
        "condition": "conditions.epShowCreateProcessCmd"
      },
      "visibleWhen": {
        "condition": "conditions.createContainerCmdVisibility"
      }
    },
    "createFolderCommandForPertHandler": {
      "id": "epCreateFolder",
      "action": "showCreateFolderPopup",
      "activeWhen": {
        "condition": "conditions.showCreateFolderCommandForPert"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateFolderCommandForPert"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epCreateCompoundOperationCommandHandler": {
      "id": "epCreateCompoundOperation",
      "action": "createCompoundOperationCommandAction",
      "activeWhen": {
        "condition": "conditions.enableConditionCreateCompoundOperationCommand"
      },
      "visibleWhen": {
        "condition": "conditions.enableConditionCreateCompoundOperationCmdAndIsNotReadOnlyMode"
      }
    },
    "epCreateCompoundOperationProcessSequenceCommandHandler": {
      "id": "epCreateCompoundOperation",
      "action": "createCompoundOperationProcessSequenceCommandAction",
      "activeWhen": {
        "condition": "conditions.enableConditionCreateCompoundOperationProcessSequenceCommand"
      },
      "visibleWhen": {
        "condition": "conditions.enableConditionCreateCompoundOperationProcessSequenceCommand"
      }
    },
    "epCreateExecutionStepCommandHandler": {
      "id": "epCreateExecutionStep",
      "action": "createExecutionStepCommandAction",
      "activeWhen": {
        "condition": "conditions.enableConditionCreateExecutionStepCommand"
      },
      "visibleWhen": {
        "condition": "conditions.enableConditionCreateExecutionStepCommand"
      }
    },
    "epCreateExecutionStepForPertCommandHandler": {
      "id": "epCreateExecutionStep",
      "action": "createExecutionStepForPertCommandAction",
      "activeWhen": {
        "condition": "conditions.enableConditionCreateExecutionStepForPertCommand"
      },
      "visibleWhen": {
        "condition": "conditions.enableConditionCreateExecutionStepForPertCommand"
      }
    },
    "epCreateFunctionalGroupCommandHandler": {
      "id": "epCreateFunctionalGroup",
      "action": "createFunctionalGroupCommandAction",
      "activeWhen": {
        "condition": "conditions.showCreateFunctionalGroupCmd"
      },
      "visibleWhen": {
        "condition": "conditions.showCreateFunctionalGroupCmd"
      }
    },
    "epUpdateFlowsCommandHandler": {
      "id": "updateFlowsCommand",
      "action": "epUpdateFlowsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTCPlatformVersionGreaterThanOrEqualTo14_2AndhasMoreThanOneChild"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "deletePertEdgesCommandHandler": {
      "id": "epCmdDelete",
      "action": "deletePertEdgeAction",
      "activeWhen": {
        "condition": "conditions.isEdgeSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isEdgeSelected"
      }
    },
    "deletePertEdgesNodeCommandHandler": {
      "id": "epCmdDelete",
      "action": "deletePertEdgeNodeAction",
      "activeWhen": {
        "condition": "conditions.isEdgeNodeSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isEdgeNodeSelected"
      }
    },
    "resetLayoutCommandHandler": {
      "id": "resetLayoutCommand",
      "action": "resetLayout",
      "activeWhen": {
        "condition": "conditions.isGraphRendered"
      },
      "visibleWhen": {
        "condition": "conditions.isGraphRendered"
      }
    },
    "deletePertNodeCommandHandler": {
      "id": "epCmdDelete",
      "action": "deletePertNodeAction",
      "activeWhen": {
        "condition": "conditions.isPertNodeSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isPertNodeSelected"
      }
    },
    "setAsPredecessorCommandHandler": {
      "id": "setAsPredecessorCommand",
      "action": "setSelectionAsPredecessor",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isContextMenuAllowedForPertNode"
      },
      "enableWhen": {
        "condition": "conditions.isContextMenuAllowedForPertNode"
      }
    },
    "setAsSuccessorCommandHandler": {
      "id": "setAsSuccessorCommand",
      "action": "setSelectionAsSuccessor",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPredecessorSet"
      },
      "enableWhen": {
        "condition": "conditions.isPredecessorSet"
      }
    },
    "selectExternalFlowsTabCommandHandler": {
      "id": "selectExternalFlowsTabCommand",
      "action": "selectExternalFlowsTabAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "showInPertDiagramCommandHandler": {
      "id": "showInPertDiagramCommand",
      "action": "setPertModeActiveAndUpdateContextObjectForPert",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isCommandContextNodeAvailableForProcessAreaAndProcess"
      }
    },
    "showEntireBOPTreeCommandHandler": {
      "id": "showEntireBOPTreeCommand",
      "action": "setPertModeActiveAndUpdateContextObjectForPert",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPertOrPRIModeActive"
      }
    },
    "hideArrangeResetCommandHandler": {
      "id": "arrangeReset",
      "activeWhen": {
        "condition": "condition.mfeHideColumnConfigCommmands"
      },
      "visibleWhen": false
    },
    "hideArrangeShowAllCommandHandler": {
      "id": "arrangeShowAll",
      "activeWhen": {
        "condition": "condition.mfeHideColumnConfigCommmands"
      },
      "visibleWhen": false
    },
    "hideArrangeViewConfigsCommandHandler": {
      "id": "arrangeViewConfigs",
      "activeWhen": {
        "condition": "condition.mfeHideColumnConfigCommmands"
      },
      "visibleWhen": false
    },
    "epCmdMultiDeleteCommandHandler": {
      "id": "epCmdMultipleDelete",
      "action": "epCmdMultipleDeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.epMultiSelectionAndNotReadOnly"
      },
      "visibleWhen": {
        "condition": "conditions.epMultiSelectionAndNotReadOnly"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epCmdCopyCommandHandler": {
      "id": "Awp0Copy",
      "action": "epCmdCopyCommandAction",
      "activeWhen": {
        "condition": "conditions.epCmdCutCopyCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epShowCutCopyProcessCmd"
      }
    },
    "epCmdCutCommandHandler": {
      "id": "epCmdCut",
      "action": "epCmdCutCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowCutCopyProcessCmd"
      },
      "enableWhen": {
        "condition": "!conditions.isNoCutOperationPerformed"
      }
    },
    "epCloneOperationCommandHandler": {
      "id": "cloneOperationCommand",
      "action": "epCloneOperationAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowCloneOperationCommand"
      }
    },
    "epCloneProcessCommandHandler": {
      "id": "cloneProcessCommand",
      "action": "epCloneProcessAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowProcessCloneCommand"
      }
    },
    "epCloneOperationOrProcessHandler": {
      "id": "epCloneOperationOrProcessGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epShowCloneCommandForETO"
      }
    },
    "epCmdPasteIntoHandler": {
      "id": "epCmdPasteInto",
      "enableWhen": {
        "condition": "conditions.epCmdPasteIntoEnabledCondition"
      },
      "activeWhen": {
        "condition": "conditions.epCmdCutCopyCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteIntoCondition"
      },
      "action": "epCmdPasteIntoAction"
    },
    "epCmdPasteGroupHandler": {
      "id": "epCmdPasteGroup",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.epCmdPasteGroupEnableCondition"
      }
    },
    "epCmdPasteBeforeHandler": {
      "id": "epCmdPasteBefore",
      "enableWhen": {
        "condition": "conditions.epCmdPasteBeforeEnableCondition"
      },
      "activeWhen": {
        "condition": "conditions.epCmdCutCopyCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteBeforeCondition"
      },
      "action": "epCmdPasteBeforeAction"
    },
    "epCmdPasteAfterHandler": {
      "id": "epCmdPasteAfter",
      "enableWhen": {
        "condition": "conditions.epCmdPasteBeforeEnableCondition"
      },
      "activeWhen": {
        "condition": "conditions.epCmdCutCopyCondition"
      },
      "visibleWhen": {
        "condition": "conditions.epCmdPasteBeforeCondition"
      },
      "action": "epCmdPasteAfterAction"
    },
    "epCmdPackOrUnpackHandler": {
      "id": "epCmdPackOrUnpack",
      "enableWhen": true,
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCmdPackOrUnpackVisibleCondition"
      },
      "selectWhen": {
        "condition": "conditions.epCmdPackSelectedConditon "
      },
      "action": "epCmdPackOrUnpackActionAndUpdate"
    },
    "epPasteRefPartsCommandHandler": {
      "id": "epPasteRefParts",
      "action": "epPasteRefPartsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssignRefPartPasteCondition"
      }
    },
    "epCmdUnpackAllHandler": {
      "id": "epCmdUnpackAll",
      "enableWhen": true,
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCmdPackOrUnpackVisibleCondition"
      },
      "action": "epCmdUnpackAllActionAndUpdate"
    },
    "epCmdPackAllHandler": {
      "id": "epCmdPackAll",
      "enableWhen": true,
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCmdPackOrUnpackVisibleCondition"
      },
      "action": "epCmdPackAllActionAndUpdate"
    },
    "epProcessRegenerateFindNumberCommandHandler": {
      "id": "epProcessRegenerateFindNumber",
      "action": "epProcessRegenerateFindNumberCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCmdRegenerateFindNoEnableCondition"
      }
    },
    "processTreeExportToExcelCommandHandler": {
      "id": "Arm0Export",
      "activeWhen": {
        "condition": "conditions.isExportImportCommandActiveInEP"
      },
      "visibleWhen": true,
      "action": "epActivateExportToRoundTripExcelPanel"
    },
    "processTreeImportFromExcelCommandHandler": {
      "id": "Arm0ImportExcel",
      "activeWhen": {
        "condition": "conditions.isExportImportCommandActiveInEP"
      },
      "visibleWhen": true,
      "action": "Arm0ActivateImportPanel"
    },
    "processTreeArm0ExportImportCommandHandler": {
      "id": "Arm0ExportImport",
      "activeWhen": {
        "condition": "conditions.isExportImportCommandActiveInEP"
      },
      "visibleWhen": true
    },
    "submitToWorkflowCommandHandler": {
      "id": "submitToWorkflowCommand",
      "action": "showSubmitToWorkflowPopup",
      "activeWhen": {
        "condition": "conditions.isSubmitToWorkflowCommandEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isSubmitToWorkflowCommandEnabled"
      }
    },
    "epValidationRunCommandHandler": {
      "id": "epValidationRunCommand",
      "action": "epValidationRunCommandAction",
      "enableWhen": {
        "condition": "conditions.hasValidationInput"
      },
      "activeWhen": true,
      "visibleWhen": true
    },
    "epValidationOpenValidationsPanelCommandHandler": {
      "id": "epValidationOpenValidationsPanelCommand",
      "action": "epValidationOpenValidationsPanelCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOnValidationEnabledPage"
      },
      "selectWhen": {
        "condition": "conditions.isOpenValidationsPanel"
      }
    },
    "openAssemblyPlanningLargeProductCommandHandler": {
      "id": "openAssemblyPlanningTaskSwitcherCommand",
      "action": "openAssemblyPlanningPage",
      "activeWhen": {
        "condition": "conditions.notPlanningForSmallProduct"
      },
      "visibleWhen": {
        "condition": "conditions.isProcessPlanningTaskSwitcherVisibleInLargeProduct"
      },
      "selectWhen": {
        "condition": "conditions.isAssemblyPlanningSelected"
      }
    },
    "openAssemblyPlanningSmallProductCommandHandler": {
      "id": "openAssemblyPlanningTaskSwitcherCommand",
      "action": "openAssemblyPlanningTaskCommandAction",
      "activeWhen": {
        "condition": "conditions.isPlanningForSmallProduct"
      },
      "visibleWhen": {
        "condition": "conditions.isProcessPlanningTaskSwitcherVisibleInSmallProduct"
      },
      "selectWhen": {
        "condition": "conditions.isAssemblyPlanningSelected"
      }
    },
    "openAssemblyPlanningWithAssociatedProcessCheckCommandHandler": {
      "id": "openAssemblyPlanningWithAssociatedProcessCheckCommand",
      "action": "bomBopOnPreferenceGoToAssemblyPlanning",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGoToApWiPageAllowedAndIsClassicBOPPartOfWP"
      }
    },
    "openProcessPlanningTaskFromHighLevelPlanningProcessTreeHandler": {
      "id": "goToProcessPlanningFromProcessCommand",
      "action": "openAssemblyPlanningPageWithTarget",
      "activeWhen": {
        "condition": "conditions.epCommandContextVmoIsProcessNotAContainer"
      },
      "visibleWhen": {
        "condition": "conditions.epCommandContextVmoIsProcessNotAContainer"
      }
    },
    "openAssemblyPlanningTaskHandlerForManagePage": {
      "id": "openAssemblyPlanningTaskCommandForManagePage",
      "action": "openAssemblyPlanningTaskActionForManagePage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssemblyPlanningAvailableInWorkspaceAndPlanningForSmallProduct"
      },
      "enableWhen": {
        "condition": "conditions.isProcessAndMbomPartOfWP"
      }
    },
    "epAssignWorkAreaToScopeHandler": {
      "id": "epAssignWorkAreaToScope",
      "action": "epAssignWorkAreaToScopeAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssignWorkareaToScopeAllowed"
      }
    },
    "epAssignWorkAreaToBopLineHandler": {
      "id": "epAssignWorkAreaToBopLine",
      "action": "epAssignWorkAreaToBopLineAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssignWorkAreaVisible"
      },
      "enableWhen": {
        "condition": "conditions.isAssignWorkAreaAllowedOnClassicBopOrProcessArea"
      }
    },
    "epRemoveWorkareaFromScopeHandler": {
      "id": "epRemoveWorkareaFromScope",
      "action": "epRemoveWorkareaFromScopeAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveWorkAreaFromScopeAllowedCondition"
      }
    },
    "openWorkInstructionFromProcessWithTargetCommandHandler": {
      "id": "goToWorkInstructionsFromProcessCommand",
      "action": "openWIPageWithTarget",
      "activeWhen": {
        "condition": "conditions.epCommandContextVmoIsProcessNotAContainer"
      },
      "visibleWhen": {
        "condition": "conditions.epCommandContextVmoIsProcessNotAContainer"
      }
    },
    "openWorkInstructionsWithAssociatedProcessCheckCommandHandler": {
      "id": "openWorkInstructionsWithAssociatedProcessCheckCommand",
      "action": "bomBopOnPreferenceGoToWorkInstructions",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGoToApWiPageAllowedAndIsClassicBOPPartOfWP"
      }
    },
    "openWorkInstructionsForLargeProductCommandHandler": {
      "id": "openWorkInstructionsTaskSwitcherCommand",
      "action": "openWorkInstructionsCommandAction",
      "activeWhen": {
        "condition": "conditions.notPlanningForSmallProduct"
      },
      "visibleWhen": {
        "condition": "conditions.isOpenWorkInstructionTaskActiveAndVisibleInLargeProduct"
      },
      "selectWhen": {
        "condition": "conditions.isWorkInstructionsSelected"
      }
    },
    "openWorkInstructionsforSmallProductCommandHandler": {
      "id": "openWorkInstructionsTaskSwitcherCommand",
      "action": "openWorkInstructionsCommandAction",
      "activeWhen": {
        "condition": "conditions.isPlanningForSmallProduct"
      },
      "visibleWhen": {
        "condition": "conditions.isOpenWorkInstructionTaskVisibleInTaskSwitcherForSmallProduct"
      },
      "selectWhen": {
        "condition": "conditions.isWorkInstructionsSelected"
      }
    },
    "wiCmdOpenInEwiHandler": {
      "id": "wiCmdOpenInEwi",
      "enableWhen": {
        "condition": "conditions.wiCmdOpenInEwiCondition"
      },
      "activeWhen": {
        "condition": "conditions.wiCmdOpenInEwiCondition"
      },
      "visibleWhen": {
        "condition": "conditions.wiCmdOpenInEwiCondition"
      },
      "action": "wiCmdOpenInEwiAction"
    },
    "openWorkInstructionForProcessStationCommandHandler": {
      "id": "goToWorkInstructionsFromProcessStationCommand",
      "action": "navigateToWorkInstructionPage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCommandContextVmoIsProcessStationAndNotIsWorkInstructionsSelected"
      }
    },
    "openWorkInstructionsTaskHandlerForManagePage": {
      "id": "openWorkInstructionsTaskCommandForManagePage",
      "action": "openWorkInstructionsTaskActionForManagePage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isWorkInstructionsAvailableInWorkspaceAndPlanningForSmallProductAndClassicBOPAllowedinWP"
      },
      "enableWhen": {
        "condition": "conditions.isProcessAndMbomPartOfWP"
      }
    },
    "wiAssignWorkAreaToSelectedObjCommandHandler": {
      "id": "wiAssignWorkAreaToSelectedObj",
      "action": "wiAssignWorkAreaToSelectedObjAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.wiAddWorkAreaToSelectedObjCmdCondition"
      }
    },
    "epAssignToProcessResource": {
      "id": "epAssignToProcessResource",
      "action": "epOpenProcessResourceList",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAssignToProcessResourceEnabled"
      }
    },
    "epOpenTimeDistributionCommandHandler": {
      "id": "epOpenTimeDistribution",
      "action": "epOpenTimeDistributionAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTimeDistributionEnabled"
      }
    },
    "epBalancingShowProductBOP": {
      "id": "epBalancingToggleProductBOP",
      "action": "epBalancingShowProductBOPAction",
      "activeWhen": {
        "condition": "conditions.showProductBOP"
      },
      "visibleWhen": {
        "condition": "conditions.showProductBOPToggleCommand"
      }
    },
    "epBalancingHideProductBOP": {
      "id": "epBalancingToggleProductBOP",
      "action": "epBalancingHideProductBOPAction",
      "activeWhen": {
        "condition": "conditions.hideProductBOP"
      },
      "visibleWhen": {
        "condition": "conditions.hideProductBOP"
      },
      "selectWhen": {
        "condition": "conditions.hideProductBOP"
      }
    },
    "openLineBalancingTaskFromGoToCommandHandler": {
      "id": "openLineBalancingTaskFromGoToCommand",
      "action": "openLineBalancingTaskFromGoToAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isCommandContextProcessAreaOrProcessLineNodeAndLBInWorkspace"
      }
    },
    "openLineBalancingTaskHandlerForTaskSwitcher": {
      "id": "openLineBalancingTaskSwitcherCommand",
      "action": "openLineBalancingTaskActionForTaskSwitcher",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScopeObjectProcessAreaOrProcessLineNode"
      },
      "selectWhen": {
        "condition": "conditions.epIsLineBalancingSublocation"
      }
    },
    "epBalancingPasteContextMenuCommandHandler": {
      "id": "epBalancingPasteContextMenuCommand",
      "action": "epCmdBalancingPasteIntoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epBalancingCmdPasteIntoEnabledCondition"
      }
    },
    "epBalancingMultiDeleteCommandHandler": {
      "id": "epBalancingMultipleDeleteCommand",
      "action": "epBalancingMultipleDeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.epMultiSelectionAndNotReadOnly"
      },
      "visibleWhen": {
        "condition": "conditions.epBalancingMultiDeleteFlowEnabled"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epBalancingCmdCopyCommandHandler": {
      "id": "epBalancingCopyCommand",
      "action": "epCmdCopyCommandAction",
      "activeWhen": {
        "condition": "conditions.isCutCopyAndNotExternalOperation"
      },
      "visibleWhen": {
        "condition": "conditions.isCutCopyAndNotExternalOperation"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epBalancingCmdCutCommandHandler": {
      "id": "epBalancingCutCommand",
      "action": "epCmdCutCommandAction",
      "activeWhen": {
        "condition": "conditions.isCutCopyAndNotExternalOperation"
      },
      "visibleWhen": {
        "condition": "conditions.isCutCopyAndNotExternalOperation"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epBalancingStationTileGroupCommandsHandler": {
      "id": "balancingStationTileGroupCommands",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epCreateOperatorInLBCommandHandler": {
      "id": "epCreateOperatorInLB",
      "action": "createOperatorInLBCommandAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epBalancingCmdDeleteCommandHandler": {
      "id": "epBalancingCmdDeleteOperator",
      "action": "epBalancingCmdDeleteOperatorCommandAction",
      "activeWhen": {
        "condition": "conditions.epbalancingIsEditPrEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.epbalancingIsEditPrEnabled"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epBalancingPrCapacityCommandHandler": {
      "id": "epBalancingPrCapacityCommand",
      "action": "launchPrCapacityPopupAction",
      "activeWhen": {
        "condition": "conditions.epbalancingIsEditPrEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.epbalancingIsEditPrEnabled"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "epOpenLineLayoutCommandHandler": {
      "id": "epOpenLineLayoutInNewTab",
      "action": "epOpenLineLayoutAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epViewLineLayout"
      }
    },
    "epShowPartPlanningActivitiesToggleCommandHandler": {
      "id": "epShowPartPlanningActivitiesToggleCommand",
      "action": "epShowPartPlanningActivitiesToggleCommandAction",
      "selectWhen": {
        "condition": "conditions.epSelectPartPlanningActivities"
      },
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epPartPlanningActivitieVisible"
      },
      "enableWhen": {
        "condition": "conditions.epPartPlanningActivitiesEnable"
      }
    },
    "openInNXTcXMLHandlerForEP": {
      "id": "openInNxTcXmlEP",
      "action": "openInNXEP",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPartPlanningOperationAndNotHosted"
      }
    },
    "openInNXHostedHandlerForEP": {
      "id": "openInNxHostedCellCommand",
      "action": "openInNXEP",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.openInNXHostedCommand"
      }
    },
    "epRemoveScopeHandler": {
      "id": "epRemoveScope",
      "action": "epRemoveScopeAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveScopeValid"
      }
    },
    "openOperationPlanningCommandHandler": {
      "id": "openOperationPlanningCommand",
      "action": "openOperationPlanningPage",
      "activeWhen": {
        "condition": "conditions.isStation"
      },
      "visibleWhen": {
        "condition": "conditions.isStation"
      }
    },
    "openOperationPlanningCommandHandlerForTaskSwitcher": {
      "id": "openOperationPlanningTaskSwitcherCommand",
      "action": "openOperationPlanningTaskSwitcherCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScopeObjectProcessStationAndisAssemblyPlanningOrWorkInstructionsAuthoringSelected"
      },
      "enableWhen": true
    },
    "epSelectProductVariantPopupCommandHandler": {
      "id": "epSelectProductVariantPopupCommand",
      "action": "selectProductVariantPopupAction",
      "activeWhen": {
        "condition": true
      },
      "visibleWhen": {
        "condition": true
      },
      "enableWhen": {
        "condition": "conditions.isEnableSelectProductVariantCommand"
      }
    },
    "pmiMoreCommandHandler": {
      "id": "pmiMoreCommand",
      "activeWhen": {
        "condition": "conditions.isPmiDetailsLoadable"
      },
      "visibleWhen": {
        "condition": "conditions.isPmiDetailsLoadable"
      },
      "action": "pmiMoreCommandAction"
    },
    "missingInSourcePmiMoreCommandHandler": {
      "id": "pmiMoreCommand",
      "activeWhen": {
        "condition": "conditions.isMissinginSource"
      },
      "visibleWhen": {
        "condition": "conditions.isMissinginSource"
      },
      "action": "missingInSourcePmiMoreCommandAction"
    },
    "pmiRemoveInspectionCommandHandler": {
      "id": "pmiRemoveInspection",
      "action": "pmiRemoveInspectionCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.hasSelectionAndValidPmiLicense"
      }
    },
    "updatePmiCommandHandler": {
      "id": "updatePmiCommand",
      "action": "updatePmiCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPmiUpdateCommandViewable"
      }
    },
    "syncCommandHandler": {
      "id": "syncPlantToBOPCommand",
      "action": "syncPlantToBOPCommandAction",
      "activeWhen": {
        "condition": "conditions.isTwinPlantBOPAssociatedCondition"
      },
      "visibleWhen": {
        "condition": "conditions.isTwinPlantBOPAssociatedCondition"
      }
    },
    "syncBOPtoPlantCommandHandler": {
      "id": "syncBOPtoPlantCommand",
      "action": "syncBOPToPlantCommandAction",
      "activeWhen": {
        "condition": "conditions.isTwinPlantAssociatedCondition"
      },
      "visibleWhen": {
        "condition": "conditions.isTwinPlantAssociatedCondition"
      }
    },
    "WISaveInstructionsCommandHandler": {
      "id": "WISaveInstructionsCommand",
      "activeWhen": true,
      "action": "WISaveWorkInstructions",
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isSaveWorkInstrictionsEnabled"
      }
    },
    "WIShowTipsCommandHandler": {
      "id": "WIShowTipsCommand",
      "action": "WIShowTipsCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "stepCommandsHandler": {
      "id": "stepGroupCommands",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epWICmdDeleteCommandHandler": {
      "id": "epCmdDelete",
      "action": "epCmdDeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.isStepHeaderObject"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveOperationAllowed"
      }
    },
    "WIValidateOccEffectivityCommandHandler": {
      "id": "WIValidateOccEffectivityCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isMultipleObjectSelectedInEP"
      },
      "action": "openValidateOccEffectivityPopup"
    },
    "validateEffectivityPopupCloseCommandHandler": {
      "id": "WICloseValidateEffectivityPopupCommand",
      "action": "validateEffectivityPopupCloseAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "setEffectivityStepCommandHandler": {
      "id": "setEffectivityStepCommand",
      "action": "setEffectivityCommandAction",
      "activeWhen": {
        "condition": "conditions.isEffectivityStepCommandEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isEffectivityStepCommandEnabled"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "setEffectivityOnMultipleObjectsCommandHandler": {
      "id": "setEffectivityStepCommand",
      "action": "setEffectivityOnMultipleObjectsCommandAction",
      "activeWhen": {
        "condition": "conditions.setEffectivityOnMultipleObjectsCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.setEffectivityOnMultipleObjectsCommandVisible"
      }
    },
    "removeEffectivityCommandHandler": {
      "id": "removeEffectivityCommand",
      "action": "removeEffectivityCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "addEffectivityCommandHandler": {
      "id": "addEffectivityCommand",
      "action": "addEffectivityCommandBatchAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "editEffectivityCommandHandler": {
      "id": "editEffectivityCommand",
      "action": "editEffectivityCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epSetPartsEffectivityCommandHandler": {
      "id": "epSetPartsEffectivityCommand",
      "action": "setEffectivityForPartsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isChangeOnSingleSelectionAllowed"
      }
    },
    "epSetProductViewEffectivityCommandHandler": {
      "id": "epSetProductViewEffectivityCommand",
      "action": "setProductViewEffectivityCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isProductViewSelected"
      }
    },
    "openProcessPlanningTasFromStationHandler": {
      "id": "openProcessPlanningTaskFromStationCommand",
      "action": "openProcessPlanningTask",
      "activeWhen": true,
      "visibleWhen": true
    },
    "highLevelPlanningCloneProcessWithSelectedAssemblyHandler": {
      "id": "highLevelPlanningCloneProcessWithSelectedAssembly",
      "action": "CloneAndAssociateProcessWithSelectedAssemblyCmdAction",
      "activeWhen": {
        "condition": "conditions.isValidForClone"
      },
      "visibleWhen": {
        "condition": "conditions.isValidForClone"
      },
      "enableWhen": {
        "condition": "conditions.isAssemblySelected"
      }
    },
    "highLevelPlanningCloneProcessWithSameAssemblyHandler": {
      "id": "highLevelPlanningCloneProcessWithSameAssembly",
      "action": "CloneAndAssociateProcessWithSameAssemblyCmdAction",
      "activeWhen": {
        "condition": "conditions.isValidForClone"
      },
      "visibleWhen": {
        "condition": "conditions.isValidForClone"
      }
    },
    "highLevelPlanningCloneProcessGroupCmdHandler": {
      "id": "highLevelPlanningCloneProcessGroupCmd",
      "activeWhen": {
        "condition": "conditions.isValidForClone"
      },
      "visibleWhen": {
        "condition": "conditions.isValidForClone"
      }
    },
    "openHighLevelPlanningCommandHandler": {
      "id": "openHighLevelPlanningTaskSwitcherCommand",
      "action": "openHighLevelPlanningTaskSwitcherCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOpenHighLevelPlanningTaskSwitcherIsVisible"
      },
      "selectWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      }
    },
    "openHighLevelPlanningTaskHandlerForManagePage": {
      "id": "openHighLevelPlanningTaskSwitcherCommandForManagePage",
      "action": "openHighLevelPlanningTaskActionForManagePage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOpenHighLevelPlanningTaskVisible"
      },
      "enableWhen": {
        "condition": "conditions.isOpenHighLevelPlanningTaskEnableOrVisible"
      }
    },
    "highLevelPlanningCutCommandHandler": {
      "id": "highLevelPlanningCmdCutProcess",
      "action": "performCutIfProcess",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isSingleProcessSelection"
      },
      "enableWhen": {
        "condition": "conditions.isNoCutOperationPerformed"
      }
    },
    "highLevelPlanningPasteGroupHandler": {
      "id": "highLevelPlanningCmdPasteGroup",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningPasteGroupCondition"
      }
    },
    "highLevelPlanningPasteIntoCommandHandler": {
      "id": "highLevelPlanningCmdPasteIntoContainer",
      "action": "highLevelPlanningPasteInto",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningPasteGroupCondition"
      }
    },
    "highLevelPlanningPasteBeforeHandler": {
      "id": "highLevelPlanningCmdPasteBefore",
      "action": "highLevelPlanningPasteBefore",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningPasteBeforeAfterCondition"
      }
    },
    "highLevelPlanningPasteAfterHandler": {
      "id": "highLevelPlanningCmdPasteAfter",
      "action": "highLevelPlanningPasteAfter",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningPasteBeforeAfterCondition"
      }
    },
    "highLevelPlanningProcessAreaCutCommandHandler": {
      "id": "highLevelPlanningProcessAreaCmdCutProcess",
      "action": "epCmdCutCommandAction",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isCutCmdAvailableForSelectedProcessArea"
      },
      "enableWhen": {
        "condition": "conditions.ishighLevelPlanningProcessAreaCmdCutProcessEnabled"
      }
    },
    "highLevelPlanningProcessAreaPasteGroupHandler": {
      "id": "highLevelPlanningProcessAreaCmdPasteGroup",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteGroupCondition"
      }
    },
    "highLevelPlanningProcessAreaPasteBeforeHandler": {
      "id": "highLevelPlanningProcessAreaCmdPasteBefore",
      "action": "epCmdPasteBeforeAction",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteBeforeAfterCondition"
      },
      "enableWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteBeforeAfterCommandEnableCondition"
      }
    },
    "highLevelPlanningProcessAreaPasteIntoCommandHandler": {
      "id": "highLevelPlanningProcessAreaCmdPasteIntoContainer",
      "action": "epCmdPasteIntoAction",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteBeforeAfterCondition"
      },
      "enableWhen": {
        "condition": "conditions.isProcessStationSelectedForPaste"
      }
    },
    "highLevelPlanningProcessAreaPasteAfterHandler": {
      "id": "highLevelPlanningProcessAreaCmdPasteAfter",
      "action": "epCmdPasteAfterAction",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteBeforeAfterCondition"
      },
      "enableWhen": {
        "condition": "conditions.highLevelPlanningProcessAreaPasteBeforeAfterCommandEnableCondition"
      }
    },
    "highLevelPlanningSingleDeleteCommandHandler": {
      "id": "highLevelPlanningCmdDeleteProcess",
      "action": "epCmdMultipleDeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.isHighLevelPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.highLevelPlanningMultipleProcessesSelected"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "goToProcessPlanningForProcessAreaCommandHandler": {
      "id": "openProcessPlanningTaskFromHighLevelPlanningProcessTree",
      "action": "openProcessPlanningTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isProcessAreaOnlyNodeAndIsHighLevelPlanningorAssemblyPlanningorWiSelected"
      }
    },
    "openHighLevelPlanningTaskSwitcherCommandHandlerForBackgroundParts": {
      "id": "openHighLevelPlanningTaskSwitcherCommand",
      "activeWhen": {
        "condition": "conditions.isBackgroundPartsPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isOpenHighLevelPlanningTaskSwitcherVisibleForBackgroundParts"
      }
    },
    "epNavigationHoverMenuCommandHandler": {
      "id": "epNavigationHoverMenuCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "openBackgroundPartsCommandHandler": {
      "id": "openBackgroundPartsTaskSwitcherCommand",
      "action": "openBackgroundPartsTaskSwitcherCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOpenBackgroundPartTaskEnableOrVisible"
      },
      "selectWhen": {
        "condition": "conditions.isBackgroundPartsPlanningSelected"
      }
    },
    "assignBackgroundPartsCommandHandler": {
      "id": "assignBackgroundPartsCommand",
      "action": "assignBackgroundPartsCommandAction",
      "activeWhen": {
        "condition": "conditions.isBackgroundPartsPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isMultipleEBOMPartsSelected"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "removeBackgroundPartsCommandHandler": {
      "id": "removeBackgroundPartsCommand",
      "action": "removeBackgroundPartsCommandAction",
      "activeWhen": {
        "condition": "conditions.isBackgroundPartsPlanningSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isMultipleBackgroundPartsSelected"
      },
      "enableWhen": {
        "condition": "conditions.isNotReadOnlyMode"
      }
    },
    "showMatchingEBOMLineCommandHandler": {
      "id": "showMatchingEBOMLineCommand",
      "action": "showMatchingEBOMLineCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.epCommandContextHasVmo"
      }
    },
    "removeEBOMFromWorkpackageCommandHandler": {
      "id": "removeEBOMFromWorkpackageCommand",
      "action": "removeEBOMFromWorkpackage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEBOMSelectedForRemoveStructureContext"
      }
    },
    "epAddBOPFromTemplateCommandHandler": {
      "id": "epCreateNewStructureFromTemplateForWorkpackageTileCommand",
      "action": "displayCreateProcessFromTemplatePopup",
      "activeWhen": {
        "condition": "conditions.isEpSmallProductEnable"
      },
      "visibleWhen": {
        "condition": "conditions.isEpSmallProductEnable"
      }
    },
    "epGeneratePlantFromPlantBOPCommandHandler": {
      "id": "epGeneratePlantFromPlantBOPCommand",
      "action": "generatePlantFromPlantBOPBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPlantBOPAssociatedWithWP"
      }
    },
    "epAddAssociatedPlantCommandHandler": {
      "id": "epAddAssociatedPlantCommand",
      "action": "epAddAssociatedPlantCommandBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPlantAssociatedWithPlantBOP"
      }
    },
    "epGeneratePlantBOPFromPlantCommandHandler": {
      "id": "epGeneratePlantBOPFromPlantCommand",
      "action": "generatePlantBOPFromPlantBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPlantWithNotTwinPresent"
      }
    },
    "epAddAssociatedPlantBOPCommandHandler": {
      "id": "epAddAssociatedPlantBOPCommand",
      "action": "epAddAssociatedPlantBOPCommandBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPlantBOPAssociatedWithPlant"
      }
    },
    "epCreateStructureToWorkpackageFromTemplateCommandHandler": {
      "id": "epCreateNewStructureFromTemplateForWorkpackageTileCommand",
      "action": "displayAddObjectFromTemplatePopup",
      "activeWhen": {
        "condition": "conditions.isEpPlantBOPTile"
      },
      "visibleWhen": {
        "condition": "conditions.isEpPlantBOPTile"
      }
    },
    "epRevisionRuleAdminCommandHandler": {
      "id": "RevisionRuleAdmin",
      "action": "launchRevisionRuleAdminPanel",
      "activeWhen": {
        "condition": "conditions.epRevisionRuleAdminCommandConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.epRevisionRuleAdminCommandConditionActive"
      }
    },
    "epConfigurationFilterCommandHandler": {
      "id": "epConfigurationFilter",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epResetAllConfigurationCommandHandler": {
      "id": "epResetAllConfiguration",
      "action": "epResetAllStructureConfigurationAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isWPHasConfigurationToReset"
      }
    },
    "epProcessConfigurationFilterCommandHandler": {
      "id": "epProcessConfigurationFilter",
      "action": "epProcessLaunchConfigurationPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEpProcessStructureExist"
      },
      "selectWhen": {
        "condition": "conditions.isProcessConfigPanelOpen"
      }
    },
    "epMbomConfigurationFilterCommandHandler": {
      "id": "epMbomConfigurationFilter",
      "action": "epMbomLaunchConfigurationPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEpMbomStructureExist"
      },
      "selectWhen": {
        "condition": "conditions.isMbomConfigPanelOpen"
      }
    },
    "epEbomConfigurationFilterCommandHandler": {
      "id": "epEbomConfigurationFilter",
      "action": "epEbomLaunchConfigurationPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEpEbomStructureExist"
      },
      "selectWhen": {
        "condition": "conditions.isEbomConfigPanelOpen"
      }
    },
    "epPlantConfigurationFilterCommandHandler": {
      "id": "epPlantConfigurationFilter",
      "action": "epLaunchPlantConfigurationPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEpPlantStructureExist"
      },
      "selectWhen": {
        "condition": "conditions.isPlantConfigPanelOpen"
      }
    },
    "epProductBopConfigurationFilterCommandHandler": {
      "id": "epProductBopConfigurationFilter",
      "action": "epLaunchProductBopConfigurationPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEpProductBopStructureExist"
      },
      "selectWhen": {
        "condition": "conditions.isProductBopConfigPanelOpen"
      }
    },
    "epCloseConfigurationFilterCommandPanelHandler": {
      "id": "Awp0CloseCommandPanel",
      "activeWhen": {
        "condition": "conditions.isEpConfigurationFilterPanelOpen"
      },
      "visibleWhen": {
        "condition": "conditions.isNotEpConfigurationFilterPanelOpen"
      }
    },
    "viewOtherConfigurationCommandHandler": {
      "id": "viewOtherConfigurationCommand",
      "action": "viewOtherConfigurationBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOtherConfigurationCommandEnabledCondition"
      }
    },
    "epConfigContextGroupCommandHandler": {
      "id": "epConfigContextGroupCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epSetConfigContextToWorkpackageCommandHandler": {
      "id": "epSetConfigContextToWorkpackageCommand",
      "action": "displayAddObjectPopup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isConfigContextNotAssociatedToWP"
      }
    },
    "epRemoveConfigContextFromWorkpackageCommandHandler": {
      "id": "epRemoveConfigContextFromWorkpackageCommand",
      "action": "removeConfigContextFromWorkpackage",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isConfigContextAssociatedToWP"
      }
    },
    "epOpenConfigContextFromWorkpackageCommandHandler": {
      "id": "epOpenConfigContextFromWorkpackageCommand",
      "action": "openConfigContextAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isConfigContextAssociatedToWP"
      }
    },
    "epProductionProgramGroupCommandHandler": {
      "id": "epProductionProgramGroupCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "epCreateProductionProgramFromWorkpackageCommandHandler": {
      "id": "epCreateProductionProgramFromWorkpackageCommand",
      "action": "openCreateProductionProgramPopup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.createProductionProgramVisibilityCond"
      }
    },
    "epUseExistingProductionProgramFromWorkpackageCommandHandler": {
      "id": "epUseExistingProductionProgramFromWorkpackageCommand",
      "action": "displayAddObjectPopup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isProductionProgramNotAssociatedToWP"
      }
    },
    "epEditProductionProgramFromWorkpackageCommandHandler": {
      "id": "epEditProductionProgramFromWorkpackageCommand",
      "action": "editProductionProgramPopup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isProductionProgramAssociatedToWP"
      }
    },
    "epRemoveProductionProgramFromWorkpackageCommandHandler": {
      "id": "epRemoveProductionProgramFromWorkpackageCommand",
      "action": "removeProductionProgramFromWorkpackage",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isProductionProgramAssociatedToWP"
      }
    },
    "epRemoveProductVariantFromProductionProgramCommandHandler": {
      "id": "epRemoveProductVariantFromProductionProgramCommand",
      "action": "removeProductVariantFromProductionProgramCommandAction",
      "activeWhen": {
        "condition": "conditions.isProductVariantSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isProductVariantSelected"
      },
      "enableWhen": true
    },
    "createDynamicInProcessAssemblyCommandHandler": {
      "id": "createDynamicInProcessAssemblyCommand",
      "action": "createDynamicInProcessAssemblyCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTCPlatformValidForDIPAAndIsNotReadOnlyMode"
      },
      "enableWhen": {
        "condition": "condition.isPlantBOPScopeAndNoPreviousDIPANode"
      }
    },
    "updateDynamicInProcessAssemblyCommandHandler": {
      "id": "updateDynamicInProcessAssemblyCommand",
      "action": "updateDynamicInProcessAssemblyCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTCPlatformValidForDIPAAndIsNotReadOnlyMode"
      },
      "enableWhen": {
        "condition": "condition.isPlantBOPScopeAndAtleastOneDIPANode"
      }
    },
    "removeIntegratedFromWorkpackageCommandHandler": {
      "id": "removeIntegratedFromWorkpackageCommand",
      "action": "removeIntegratedBOMFromWorkpackage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isIntegratedBOMSelectedForRemoveStructureContext"
      }
    },
    "deletePriFlowCommandHandler": {
      "id": "deletePriFlow",
      "action": "deletePriFlowAction",
      "activeWhen": {
        "condition": "conditions.isDeleteFlowEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isDeleteFlowEnabled"
      }
    }
  },
  "conditions": {
    "epShowActivities": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.epPageContext.showActivities",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "ctx.epPageContext.showActivities",
            "$query": {
              "$eq": "time"
            }
          }
        ]
      }
    },
    "showActivitiesCommand": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.sublocation.clientScopeURI",
            "$query": {
              "$in": [
                "workInstructions",
                "assemblyPlanning",
                "functionalPlan"
              ]
            }
          },
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode[0]",
            "$query": {
              "$in": [
                "CLASSIC_ACTIVITIES",
                "ACTIVITIES",
                "CLASSIC_ACTIVITIES_CREATE"
              ]
            }
          }
        ]
      }
    },
    "showCreateActivitiesCommands": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode[0]",
            "$query": {
              "$in": [
                "ACTIVITIES",
                "CLASSIC_ACTIVITIES_CREATE"
              ]
            }
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "showCreateDataCardActivitiesCommands": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "ctx.preferences.EP_TimeAnalysisMode[0]",
            "$query": {
              "$eq": "ACTIVITIES"
            }
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isActivitiesSelected": {
      "expression": {
        "$source": "commandContext.selectedObjects.length",
        "$query": {
          "$gt": "0"
        }
      }
    },
    "showDeleteActivitiesCommand": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showCreateActivitiesCommands",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isActivitiesSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCtxSelectedCCObjectPin": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isCtxSelectedCCObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.visibleServerCommands.Awp0PinObject",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isCtxSelectedCCObject": {
      "expression": {
        "$source": "ctx.selected",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "MECollaborationContext"
            ]
          }
        }
      }
    },
    "isInEPPage": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.locationContext['ActiveWorkspace:Location']",
            "$query": {
              "$eq": "easyplan"
            }
          },
          {
            "$source": "ctx.epTaskPageContext.collaborationContext.uid",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "openInEP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.vmo"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "MECollaborationContext"
                ]
              }
            }
          },
          {
            "$source": "ctx.preferences.EP_ShowOnlyEWI",
            "$query": {
              "$eq": "false"
            }
          },
          {
            "$source": "ctx.aw_host_type",
            "$query": {
              "$ne": "NX"
            }
          },
          {
            "$source": "ctx.aw_host_type",
            "$query": {
              "$ne": "ProcessSimulate"
            }
          }
        ]
      }
    },
    "tool_info_open": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "MECollaborationContext"
              ]
            }
          },
          {
            "$source": "ctx.preferences.EP_ShowOnlyEWI",
            "$query": {
              "$eq": "false"
            }
          }
        ]
      }
    },
    "open_in_table_cell": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "MECollaborationContext"
              ]
            }
          },
          {
            "$source": "ctx.preferences.EP_ShowOnlyEWI",
            "$query": {
              "$eq": "false"
            }
          }
        ]
      }
    },
    "openInEPWithMCN": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Awp0XRTObjectSetRow"
              ]
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.vmo"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "MECollaborationContext"
                ]
              }
            }
          },
          {
            "$source": "ctx.preferences.EP_ShowOnlyEWI",
            "$query": {
              "$eq": "false"
            }
          }
        ]
      }
    },
    "toolInfoOpenWithMCN": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "MECollaborationContext"
              ]
            }
          },
          {
            "$source": "ctx.pselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "ChangeNoticeRevision"
                ]
              }
            }
          },
          {
            "$source": "ctx.preferences.EP_ShowOnlyEWI",
            "$query": {
              "$eq": "false"
            }
          }
        ]
      }
    },
    "isAddInspectionDefinitionCmdAvailableonBOEAuthorPage": {
      "expression": "ctx.mselected.length === 1 && conditions.isOccStructureType && ctx.visibleServerCommands.Awb0AddChildElement && !ctx.hiddenCommands.Awb0AddChildElement"
    },
    "isOccStructureType": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && ctx.sublocation.nameToken === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
    },
    "isBOEAuthoringAllowedInWorkPackage": {
      "expression": {
        "$source": "ctx.preferences.EP_WorkPackageContentType",
        "$query": {
          "$in": [
            "Plant:Item",
            "Plant:ItemRevision",
            "Plant:PSBOMView",
            "Plant:PSBOMViewRevision"
          ]
        }
      }
    },
    "isPlantStructurePartOfWP": {
      "expression": {
        "$source": "ctx.epTaskPageContext.rootPlant.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isBOEAllowedAndPartOfWP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlantStructurePartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBOEAuthoringAllowedInWorkPackage",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOpenAuthorBOETaskSwitcherVisibleForBackgroundParts": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isBOEAllowedAndPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBackgroundPartsPlanningSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "IsMEPlantContext": {
      "expression": {
        "$source": "ctx.state.params.cc_uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "RecipeCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.executeRecipeCommandCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "FreezePointCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.att1setFreezePointCommandVisibilityCond",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "CreateARCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.createARVisibleCond",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "ShowCreateEventCmdVisiblity": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.sc1ShowCreateEventCmdCond",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "GenerateTraceabilityMatrixCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.visibleGenerateTraceabilityMatrix",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "AddInspectionDefCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAddInspectionDefinitionCmdAvailableonBOEAuthorPage",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "CreateAsMaintainedStructureCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.createAsMaintainedStructureCommandActive",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "CreateAsBuiltStructureCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.createAsBuiltStructureCommandActive",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "ShowCreateEventCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.sc1ShowCreateEventCmdCond",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "CreateSessionCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAwb0CreateSessionAllowed",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "CreateSWCCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCreateSWCCommandVisible",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "NewCollaborationCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.Eda1NewCollaboration",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "GenerateFmeaCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.Qfm0GenerateFmeaCond",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "ImportCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isImportCmdVisible",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "AssignFinishCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAssignFinishCommandVisible",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "MarkAsSuspectCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMarkAsSuspectCommandVisible",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "ImportBOMCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.IsMEPlantContext",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.enableImportBOMCommand",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isAceOccurenceSublocation": {
      "expression": {
        "$source": "ctx.aceActiveContext.key",
        "$query": {
          "$eq": "occmgmtContext"
        }
      }
    },
    "isManageWorkPackageNewSubLocationSelected": {
      "expression": "ctx.sublocation.nameToken === 'manageWorkPackageNewSubLocation'"
    },
    "isDisplayAutoBOPGenerationPreferenceSetToTrue": {
      "expression": "ctx.preferences.EP_DisplayAutoBOPGenerationCommand[0] === 'true'"
    },
    "isWorkPackageHasRequiredStructures": {
      "expression": "ctx.epPageContext && ctx.epPageContext.rootPlant && ctx.epPageContext.EbomStructureContext && !ctx.epPageContext.processStructure"
    },
    "isMbomPlantBopCreationUsingRuleStreamAllowed": {
      "expression": "conditions.isDisplayAutoBOPGenerationPreferenceSetToTrue && conditions.isWorkPackageHasRequiredStructures"
    },
    "isStructureSelectedForRemoveStructureContext": {
      "expression": "commandContext && commandContext.selection !== '' && commandContext.selection !== undefined"
    },
    "isMbomMirrorPreferenceAvailable": {
      "expression": "ctx.preferences.MEMBOM_Mirror_MakeRules !== undefined && ctx.preferences.MEMBOM_Mirror_TypePrefixSuffix !== undefined"
    },
    "isMbomMirrorPreferenceNotEmpty": {
      "expression": "ctx.preferences.MEMBOM_Mirror_MakeRules.length >= 1 && ctx.preferences.MEMBOM_Mirror_TypePrefixSuffix.length >= 1"
    },
    "isEpMbomTile": {
      "expression": "commandContext.objectBaseType == 'Item'"
    },
    "isMbomMirroCmdAvailable": {
      "expression": "conditions.isMbomMirrorPreferenceNotEmpty && conditions.isMbomMirrorPreferenceAvailable && conditions.isEpMbomTile"
    },
    "isEBOMAvailableInWP": {
      "expression": "ctx.epTaskPageContext.ebomStructure.uid"
    },
    "isOpenUpdateRevisionPopupVisible": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.preferences.MBMEnableUpdateEBOMRevision[0]",
            "$query": {
              "$eq": "true"
            }
          },
          {
            "$source": "ctx.preferences.EP_WorkPackageContentType[0]",
            "$query": {
              "$in": [
                "EBOM:ItemRevision",
                "EBOM:PSBOMViewRevision"
              ]
            }
          },
          {
            "$source": "conditions.isEBOMAvailableInWP",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isEBOMRevisionAvailable": {
      "expression": "data.ebomRevisions.length > 0"
    },
    "epCmdPasteIntoProductBOPCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.epCmdIsPasteSupportedForProductBOPCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdIsPasteSupportedForProductBOPCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.epCmdIsOperationPasteSupportedForProdBOPCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCmdIsFGPasteSupportedForObjectCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCmdIsProcessPasteSupportedForProductBOPCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdIsOperationPasteSupportedForProdBOPCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$notin": [
                  "Mfg0BvrCompOP",
                  "Mfg0BvrProductBOP",
                  "Mfg0BvrOperation"
                ]
              }
            }
          }
        ]
      }
    },
    "epCmdIsFGPasteSupportedForObjectCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "props.mbc0BopQualifier.dbValues[0]",
                "$query": {
                  "$eq": "FunctionalGroup"
                }
              }
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$or": [
                {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "Mfg0BvrProductBOP"
                    ]
                  }
                },
                {
                  "$source": "conditions.isFunctionalGroupSelected",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "epCmdIsProcessPasteSupportedForProductBOPCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isFunctionalGroupSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdPasteBeforeProductBOPCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.epCmdIsPasteBeforeSupportedForProdBOPPCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdIsPasteBeforeSupportedForProdBOPPCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.epCmdIsOperationPasteBeforeSupportedForProdBOPCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCmdPasteBeforeFGCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCmdPasteBeforeProcessCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdIsOperationPasteBeforeSupportedForProdBOPCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isConnectingToProdBOP",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epCmdPasteBeforeProcessCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isConnectingToProdBOP",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isConnectingToFG",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdPasteBeforeFGCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "props.mbc0BopQualifier.dbValues[0]",
                "$query": {
                  "$eq": "FunctionalGroup"
                }
              }
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isConnectingToProdBOP",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isConnectingToFG",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isConnectingToFG": {
      "expression": {
        "$source": "commandContext.connectToObject",
        "$query": {
          "$all": {
            "$source": "props.mbc0BopQualifier.dbValues[0]",
            "$query": {
              "$eq": "FunctionalGroup"
            }
          }
        }
      }
    },
    "isConnectingToProdBOP": {
      "expression": {
        "$source": "commandContext.connectToObject",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProductBOP"
              ]
            }
          }
        }
      }
    },
    "isFromProdBopScope": {
      "expression": {
        "$source": "ctx.ep.backToBalancing.isFromProdBopScope",
        "$query": {
          "$eq": true
        }
      }
    },
    "hasBackToBalancing": {
      "expression": {
        "$source": "ctx.ep.backToBalancing.uid",
        "$query": {
          "$ne": ""
        }
      }
    },
    "isOperationOrPbopLoadedCondition": {
      "expression": {
        "$source": "ctx.epPageContext.loadedObject.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrOperation",
            "Mfg0BvrProductBOP"
          ]
        }
      }
    },
    "isValidToGoBackToBalancing": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasBackToBalancing",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFromProdBopScope",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOperationOrPbopLoadedCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProductBOPSelected": {
      "expression": "ctx.sublocation.nameToken === 'functionalPlan'"
    },
    "isProductBOPAvailableInWorkspaceAndPartOfWorkPackage": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProductBOPAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProductBOPPartOfWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProductBOPPartOfWP": {
      "expression": {
        "$source": "ctx.epTaskPageContext.functionalPlan.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isProductBOPAvailableInWorkspaceAndAllowedInWorkPackage": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProductBOPAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProductBOPAllowedInWorkPackage",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProductBOPAvailableInWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "functionalPlan"
          ]
        }
      }
    },
    "isProductBOPAllowedInWorkPackage": {
      "expression": {
        "$source": "ctx.preferences.EP_WorkPackageContentType",
        "$query": {
          "$in": [
            "ProductBOP:Item",
            "ProductBOP:ItemRevision",
            "ProductBOP:PSBOMView",
            "ProductBOP:PSBOMViewRevision"
          ]
        }
      }
    },
    "isProductBOPCutOperationAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "isProductBOPCopyOperationAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrProductBOP"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isFunctionalGroupSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "isFunctionalGroupSelected": {
      "expression": {
        "$source": "commandContext.selection",
        "$query": {
          "$all": {
            "$source": "props.mbc0BopQualifier.dbValues[0]",
            "$query": {
              "$eq": "FunctionalGroup"
            }
          }
        }
      }
    },
    "isProductBOPPasteOperationAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isMasterCC": {
      "expression": "(ctx.epTaskPageContext.loadedObject.type !== 'Mfg0BvrPlantBOP') && conditions.isBalancingPage && !(ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC && ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0])"
    },
    "isAlternativeCC": {
      "expression": "(ctx.epTaskPageContext.loadedObject.type !== 'Mfg0BvrPlantBOP') && conditions.isBalancingPage && (ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC && ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0] !== '')"
    },
    "isBalancingPage": {
      "expression": "ctx.sublocation.nameToken === 'lineBalancing'"
    },
    "isValidToCreateAlt": {
      "expression": "(conditions.isManageWorkPackagePage) && ctx.epTaskPageContext.processStructure && ctx.epTaskPageContext.processStructure.type==='Mfg0BvrPlantBOP' && !(ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0])"
    },
    "isValidToCloneAlt": {
      "expression": "(conditions.isManageWorkPackagePage) && ctx.epTaskPageContext.processStructure && ctx.epTaskPageContext.processStructure.type==='Mfg0BvrPlantBOP' && ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0]"
    },
    "isManageWorkPackagePage": {
      "expression": "ctx.sublocation.nameToken == 'manageWorkPackageNewSubLocation'"
    },
    "isPartialAlternativeExist": {
      "expression": "ctx.allAltCCsList.length > 0"
    },
    "isCheckedOutAllowedSublocation": {
      "expression": {
        "$source": "ctx.sublocation.nameToken",
        "$query": {
          "$in": [
            "lineBalancing",
            "workInstructions",
            "processSubpageSubLocation",
            "assemblyPlanning"
          ]
        }
      }
    },
    "epIsCheckedOut": {
      "expression": "ctx.ep.scopeObject.props.bl_rev_checked_out_user && ctx.ep.scopeObject.props.bl_rev_checked_out_user.dbValues[0] !== ' '"
    },
    "epShowCheckOut": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isCheckedOutAllowedSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsCheckedOut",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epIsCheckedOutBySameUser": {
      "expression": "ctx.ep.scopeObject.props.bl_rev_checked_out_user && ctx.ep.scopeObject.props.bl_rev_checked_out_user.dbValues[0] === ctx.userSession.props.user.displayValues[0]"
    },
    "epShowCheckIn": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isCheckedOutAllowedSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsCheckedOut",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsCheckedOutBySameUser",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isOfTypePlantBop": {
      "expression": {
        "$source": "ctx.ep.scopeObject",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Mfg0BvrPlantBOP"
            ]
          }
        }
      }
    },
    "isOfTypeProductBop": {
      "expression": {
        "$source": "ctx.ep.scopeObject",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Mfg0BvrProductBOP"
            ]
          }
        }
      }
    },
    "isOfTypeProcess": {
      "expression": {
        "$source": "ctx.ep.scopeObject",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Mfg0BvrProcess"
            ]
          }
        }
      }
    },
    "isOfTypeCC": {
      "expression": {
        "$source": "ctx.ep.scopeObject",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "MECollaborationContext"
            ]
          }
        }
      }
    },
    "isValidToCreateReport": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOfTypeProductBop",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isOfTypePlantBop",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isOfTypeProcess",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isOfTypeCC",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isStartEditAllowedBOPLine": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.locationContext['ActiveWorkspace:SubLocation']",
            "$query": {
              "$eq": "showObject"
            }
          },
          {
            "$source": "ctx.editInProgress",
            "$query": {
              "$ne": true
            }
          },
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "ImanItemBOPLine"
              ]
            }
          }
        ]
      }
    },
    "epHasSelection": {
      "expression": "commandContext.selection.length > 0"
    },
    "hasSingleSelection": {
      "expression": "commandContext.selection.length === 1"
    },
    "isChangeOnSingleSelectionAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isDynamicInProcessAssemblySelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isDynamicInProcessAssemblySelected": {
      "expression": {
        "$source": "commandContext.selection[0].type",
        "$query": {
          "$eq": "Mfg0BvrDynamicIPA"
        }
      }
    },
    "isChangeOnSelectionAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epHasSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "enableSetOccTypeCommmand": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSelectedObjectWebLinkType",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "hasSingleInputObject": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.inputObject.uid",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isChangeOnSingleInputObjectAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleInputObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isPasteDocumentItemAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSingleInputObjectAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.hasItemInClipboard",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "hasItemInClipboard": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Item",
                    "ItemRevision"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isPasteResourceAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSingleInputObjectAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.hasItemInClipboard",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isUnassignDocumentItemAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleInputObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "hasSingleSelectionObject": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.selection.uid",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isChangeOnSingleSelectionObjectAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleSelectionObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isInputObject": {
      "expression": "commandContext.inputObject !== undefined && commandContext.inputObject.uid"
    },
    "isStartEditInfoCommandEnabledWithoutReadOnly": {
      "expression": "conditions.isInputObject && (ctx.editInProgress === undefined || !ctx.editInProgress)"
    },
    "isStartEditInformationAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isStartEditInfoCommandEnabledWithoutReadOnly",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epCanSaveOrCancelEdit": {
      "expression": "ctx.editInProgress"
    },
    "isAttachmentSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleSelectionObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selectedAttachment.length",
            "$query": {
              "$gt": "0"
            }
          }
        ]
      }
    },
    "isDeleteOperationAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAttachmentSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isInputObjectSelected": {
      "expression": "commandContext.inputObject.length > 0"
    },
    "isXcLicenseInEpValid": {
      "expression": {
        "$source": "ctx.ep.licenses['xc_teamcenter']",
        "$query": {
          "$eq": true
        }
      }
    },
    "isXcShareFileAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAttachmentSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isXcLicenseInEpValid",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isReplaceFileAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAttachmentSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isXcLicenseInEpValid",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isSelectedObjectWebLinkType": {
      "expression": "commandContext.selection[0].type === 'Web Link'"
    },
    "setOccTypeCommandEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSingleSelectionAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectedObjectWebLinkType",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isAssignInspectionDefinitionPartPasteCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOperationOrExecutionStepSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Aqc0QcElement"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isOperationOrExecutionStepSelected": {
      "expression": {
        "$source": "commandContext.inputObject.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrOperation",
            "Mfg0BvrStep"
          ]
        }
      }
    },
    "isRemoveInspectionPartAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrOperation",
                "Mfg0BvrStep"
              ]
            }
          },
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isWIClassicBopConfig": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isWorkInstructionsSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.hasSingleInputObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.preferences.WI_CLASSIC_BOP_CONFIG",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epIsAttachFilePanelOpenCondition": {
      "expression": "ctx.sidenavCommandId === 'EpAttachFilePanel'"
    },
    "clearImpactIndicationVisibilityCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isRemoveChangeImpactIndicationsPreferenceEnabled",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPageTrackingChanges",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isIndicationToggleOn",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.handleImpact",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRemoveChangeImpactIndicationsPreferenceEnabled": {
      "expression": "ctx.preferences.EPC_RemoveChangeImpactIndications[0] === 'true'"
    },
    "isPageTrackingChanges": {
      "expression": "ctx.state.params.tracking_cn && ctx.state.params.tracking_cn !== '' && ctx.state.params.tracking_cn !== 'undefined'"
    },
    "isIndicationToggleOn": {
      "expression": "ctx.epAssignmentIndication.isIndicationToggleOn === true"
    },
    "epShowCreateOperationUnderProcessCommand": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.inputObject[0]",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess",
                  "Mfg0BvrProcessStation",
                  "Mfg0BvrProcessResource"
                ]
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.inputObject[0]",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$notin": [
                  "Mfg0BvrCompOP"
                ]
              }
            }
          }
        ]
      }
    },
    "showCreateProcessResourceCmd": {
      "expression": "commandContext.selection.length === 1 && commandContext.selection[0].modelType.typeHierarchyArray.includes('Mfg0BvrProcessStation') && ctx.mfgReadOnlyMode.readOnlyMode === false && ctx.preferences.EP_EnableLineBalancing[0] === 'true'"
    },
    "epShowCreateProcessCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.epCanCreateProcessInBTOStructureCmd",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.epCanCreateProcessInETOStructureCmd",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$notin": [
                  "Mfg0BvrCompOP"
                ]
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrCompOP"
              ]
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$ne": "EpPert"
            }
          }
        ]
      }
    },
    "epIsBTOStructureCmd": {
      "expression": "ctx.epTaskPageContext.processStructure && ctx.epTaskPageContext.processStructure.modelType.typeHierarchyArray.includes('Mfg0BvrPlantBOP')"
    },
    "epCanCreateProcessInBTOStructureCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcessStation"
                ]
              }
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCanCreateProcessInETOStructureCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "createContainerCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningProcess",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isHighLevelPlanningProcess": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "commandContext.inputObject[0].props.mbc0BopQualifier",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.inputObject[0].props.mbc0BopQualifier.dbValues.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "showCreateOperationCmd": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcessStation",
                    "Mfg0BvrProcess",
                    "Mfg0BvrProcessResource"
                  ]
                }
              },
              {
                "$source": "commandContext.vmo.modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcessStation",
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            ]
          },
          {
            "$and": [
              {
                "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              },
              {
                "$source": "commandContext.vmo.modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              }
            ]
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$ne": "EpPert"
            }
          },
          {
            "$or": [
              {
                "$source": "commandContext.selection.length",
                "$query": {
                  "$eq": 1
                }
              },
              {
                "$source": "conditions.epCommandContextHasVmo",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "showCreateOperationCmdAndIsNotReadOnlyMode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showCreateOperationCmd",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "showCreateOperationCmdForPERT": {
      "expression": "conditions.noSelectionInCommandContextForPERTCommand && commandContext.tabKey === 'EpPert' && ( commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcessStation') || (commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcess') && ctx.sublocation.nameToken !== 'highLevelPlanning') ) && conditions.isNotReadOnlyMode"
    },
    "showCreateFolderCommandForPert": {
      "expression": "conditions.noSelectionInCommandContextForPERTCommand && commandContext.tabKey === 'EpPert' && commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcess') && ctx.sublocation.nameToken === 'highLevelPlanning' && conditions.isNotReadOnlyMode"
    },
    "showCreateProcessCmdForPERT": {
      "expression": "conditions.noSelectionInCommandContextForPERTCommand && commandContext.tabKey === 'EpPert' && commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcess') && !commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrCompOP') && conditions.isNotReadOnlyMode && !conditions.isHighLevelPlanningSelected"
    },
    "isCommandContextSelectionValidForCreateProcessAreaCommand": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcessLine"
              ]
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessStation",
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$in": [
                "EpHighLevelPlanningProcessTree",
                "ApProcessTree"
              ]
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isContextObjectForPERTValidForCreateProcessAreaCommand": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.contextObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcessLine"
              ]
            }
          },
          {
            "$source": "commandContext.contextObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessStation"
              ]
            }
          },
          {
            "$source": "conditions.noSelectionInCommandContextForPERTCommand",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$eq": "EpPert"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "noSelectionInCommandContextForPERTCommand": {
      "expression": "!commandContext.selection || (commandContext.selection && commandContext.selection.length === 0)"
    },
    "showTargetAssemblyMessage": {
      "expression": {
        "$source": "response.targetAssembly",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isCommandContextCreateTitle": {
      "expression": "commandContext.createTitle"
    },
    "enableConditionCreateCompoundOperationCommand": {
      "expression": {
        "$source": "conditions.enableConditionCreateCompoundOperationCommandForEto",
        "$query": {
          "$eq": true
        }
      }
    },
    "enableConditionCreateCompoundOperationCommandForEto": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrCompOP"
              ]
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$ne": "EpPert"
            }
          }
        ]
      }
    },
    "enableConditionCreateCompoundOperationCmdAndIsNotReadOnlyMode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.enableConditionCreateCompoundOperationCommand",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "enableConditionCreateExecutionStepCommand": {
      "expression": "(commandContext.selection[0].type === 'Mfg0BvrCompOP'|| commandContext.vmo.type === 'Mfg0BvrCompOP') && commandContext.tabKey !== 'EpPert'"
    },
    "enableConditionCreateCompoundOperationProcessSequenceCommand": {
      "expression": "conditions.noSelectionInCommandContextForPERTCommand && commandContext.tabKey === 'EpPert' && commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcess') && ctx.sublocation.nameToken !== 'highLevelPlanning' && !commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrCompOP') && !conditions.epIsBTOStructureCmd"
    },
    "enableConditionCreateExecutionStepForPertCommand": {
      "expression": "conditions.noSelectionInCommandContextForPERTCommand && commandContext.tabKey === 'EpPert' && commandContext.contextObject.modelType.typeHierarchyArray.includes('Mfg0BvrCompOP')"
    },
    "showCreateProcessForProductBOPCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].props.mbc0BopQualifier.dbValue",
            "$query": {
              "$eq": "FunctionalGroup"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "functionalPlan"
              ]
            }
          }
        ]
      }
    },
    "showCreateFunctionalGroupCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrOperation"
              ]
            }
          },
          {
            "$source": "commandContext.selection[0]",
            "$query": {
              "$or": [
                {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "Mfg0BvrProductBOP"
                    ]
                  }
                },
                {
                  "$source": "props.mbc0BopQualifier.dbValue",
                  "$query": {
                    "$eq": "FunctionalGroup"
                  }
                }
              ]
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "functionalPlan"
              ]
            }
          }
        ]
      }
    },
    "isEdgeSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.edgeSelections.length",
            "$query": {
              "$gt": "0"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isTCMajorVersionGreaterThan14": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMajorVersion",
        "$query": {
          "$gte": "14"
        }
      }
    },
    "isTCMinorVersionGreaterThan2": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMinorVersion",
        "$query": {
          "$gte": "2"
        }
      }
    },
    "isTCPlatformVersionGreaterThanOrEqualTo14_2AndhasMoreThanOneChild": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCMajorVersionGreaterThan14",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCMinorVersionGreaterThan2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOneOrMoreChild",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOneOrMoreChild": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isOneOrMoreChildInPert",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOneOrMoreChildInPriLineBalancing",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOneOrMoreChildInPert": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.pertContent.length",
            "$query": {
              "$gt": 1
            }
          },
          {
            "$source": "conditions.isSingleChildWithSubChild",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOneOrMoreChildInPriLineBalancing": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.pageId",
            "$query": {
              "$in": [
                "EpBalancingOperationsSequence",
                "EpPlanningOperationsSequence"
              ]
            }
          },
          {
            "$source": "commandContext.contextObject.props.Mfg0processResources.dbValues.length",
            "$query": {
              "$gte": "1"
            }
          }
        ]
      }
    },
    "isSingleChildWithSubChild": {
      "expression": "(commandContext.pertContent.length ===1 && commandContext.graphModel.dataModel.nodeModels[commandContext.pertContent[0]].modelObject.props.bl_has_children.dbValues[0]==='1')"
    },
    "isEdgeNodeSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.edgeSelections.length",
            "$query": {
              "$gt": "0"
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": "0"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isGraphRendered": {
      "expression": {
        "$source": "commandContext.pertContent.length",
        "$query": {
          "$gt": 0
        }
      }
    },
    "isPertNodeSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epMultiSelectionAndNotReadOnly",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "highLevelPlanning",
                "assemblyPlanning"
              ]
            }
          }
        ]
      }
    },
    "isPredecessorSet": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.ep.isPredecessorSetForPert",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "highLevelPlanning",
                "assemblyPlanning"
              ]
            }
          },
          {
            "$source": "conditions.isCommandContextOrGraphItemProcessAreaAndNotPlantBOP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isContextMenuAllowedForPertNode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "highLevelPlanning",
                "assemblyPlanning"
              ]
            }
          },
          {
            "$source": "conditions.isCommandContextOrGraphItemProcessAreaAndNotPlantBOP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextProcessOrProcessAreaAndNotPlantBOP": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcess",
                "Mfg0BvrOperation"
              ]
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$source": "conditions.isNotScopeObject",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextGraphItemProcessOrProcessAreaAndNotPlantBOP": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.graph.commandContextItem.model.modelObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcess",
                "Mfg0BvrOperation"
              ]
            }
          },
          {
            "$source": "ctx.graph.commandContextItem.model.modelObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "isCommandContextOrGraphItemProcessAreaAndNotPlantBOP": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isCommandContextProcessOrProcessAreaAndNotPlantBOP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCommandContextGraphItemProcessOrProcessAreaAndNotPlantBOP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextNodeAvailableForProcessAreaAndProcess": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isCommandContextNodeProcessAreaOrProcessLineAndIsSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCommandContextNodeProcessOrProcessFolderAndIsSingleSelection",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextNodeProcessOrProcessFolderAndIsSingleSelection": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "conditions.checkTargetAssemblyIfOnHLPPage",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.sharedSelectionData.selected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "conditions.isPertOrPRIModeActive",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isCommandContextNodeProcessAreaOrProcessLineAndIsSingleSelection": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "conditions.isCommandContextValidInputForProcessSequenceView",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.sharedSelectionData.selected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "conditions.isPertOrPRIModeActive",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isCommandContextNodeProcessAreaOrProcessLineAndIsPertModeActive": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessStation"
              ]
            }
          },
          {
            "$source": "conditions.isPertOrPRIModeActive",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextValidInputForProcessSequenceView": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessStation",
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$source": "conditions.isCommandContextProcessStationAndIsHighLevelPlanningNotSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextProcessStationAndIsHighLevelPlanningNotSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.sharedSelectionData.selected[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessStation"
              ]
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isLBNotEnabledAndContainsProcessResource",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isPertOrPRIModeActive": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.sharedSelectionData.isPertModeActive",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.sharedSelectionData.isPRIModeActive",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isNotScopeObject": {
      "expression": "commandContext.vmo.uid !== ctx.ep.scopeObject.uid"
    },
    "isLBNotEnabledAndContainsProcessResource": {
      "expression": "ctx.preferences.EP_EnableLineBalancing[0] === 'false' && commandContext.sharedSelectionData.selected[0].props.Mfg0processResources.dbValues.length > 0"
    },
    "mfeHideColumnConfigCommmands": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'easyplan' && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'multiBOMManager:ebomContextSublocation' && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'multiBOMManager:mbomContextSublocation'"
    },
    "epSingleSelection": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.vmo.uid",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isSelectionOrVmoOfTypeOperationOrProcess": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isSelectionOrVmoOfTypeCompOPOrExecutionStep": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "epShowProcessCloneCommand": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.epShowCloneCommandForETO",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$notin": [
                  "Mfg0BvrCompOP"
                ]
              }
            }
          }
        ]
      }
    },
    "epShowCloneOperationCommand": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionOrVmoOfTypeOperationOrProcess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionOrVmoOfTypeCompOPOrExecutionStep",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.epShowCloneCommandForETO",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epSingleSelectionAndNotReadOnly": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epMultiSelectionAndNotReadOnly": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isEPPages": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'easyplan'"
    },
    "isETOinWI": {
      "expression": "ctx.sublocation.nameToken === 'workInstructions' && conditions.epIsBTOStructureCmd"
    },
    "isAllOperation": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.hideCutCopyCmdInWIForBTO",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "hideCutCopyCmdInWIForBTO": {
      "expression": "commandContext.tabKey === 'WiProcessTree' && conditions.epIsBTOStructureCmd"
    },
    "epCanCutOrCopyProcessInBTOStructureCmd": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$notin": [
                "WiProcessTree"
              ]
            }
          }
        ]
      }
    },
    "epShowCutCopyProcessCmd": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.epCanCutOrCopyProcessInBTOStructureCmd",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAllOperation ",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "showCloneOperationCmd": {
      "expression": {
        "$source": "commandContext.selection.length",
        "$query": {
          "$eq": 1
        }
      }
    },
    "epCmdPasteIntoCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.epCmdIsPasteSupportedForObjectCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epShowCloneCommandForETO": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isNotReadOnlyMode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epCmdPasteIntoEnabledCondition": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "conditions.epCmdPasteIntoProcess",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.epCmdPasteIntoProductBopProcess",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "commandContext.selection",
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Mfg0BvrProcessStation",
                        "Mfg0BvrProcessResource"
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "epCmdPasteIntoProcess": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "epCmdPasteIntoProductBopProcess": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "functionalPlan"
              ]
            }
          }
        ]
      }
    },
    "epCmdPasteBeforeCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.epCmdIsPasteSupportedForObjectCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epIsSelectionNotSameAsScopeCondition": {
      "expression": "commandContext.selection[0].uid !== ctx.epPageContext.loadedObject.uid"
    },
    "epIsOperationUnderProcessResource": {
      "expression": "commandContext.inputObject[0].props.Mfg0processResource !== undefined && commandContext.inputObject[0].props.Mfg0processResource.dbValue !== ''"
    },
    "epIsProcessPasteToOperationUnderProcessForBTO": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.epIsOperationUnderProcess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epIsOperationUnderProcess": {
      "expression": "commandContext.connectToObject.type === 'Mfg0BvrProcess'"
    },
    "epCmdPasteBeforeEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcessResource",
                    "Mfg0BvrProcess",
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.epIsSelectionNotSameAsScopeCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epIsOperationUnderProcessResource",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.epIsProcessPasteToOperationUnderProcessForBTO",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epCmdPasteGroupEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epCmdIsOperationPasteSupportedForObjectCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrCompOP",
                    "Mfg0BvrStep"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "epCmdIsProcessPasteSupportedInBTOstructureCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess",
                    "Mfg0BvrProcessStation",
                    "Mfg0BvrProcessResource"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Mfg0BvrProcess"
                ]
              }
            }
          },
          {
            "$source": "conditions.epIsBTOStructureCmd",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdIsPasteSupportedForObjectCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.epCmdIsOperationPasteSupportedForObjectCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCmdIsProcessPasteSupportedInBTOstructureCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epCmdPackOrUnpackVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].type",
            "$query": {
              "$ne": "Mfg0BvrDynamicIPA"
            }
          }
        ]
      }
    },
    "epCmdPackSelectedConditon ": {
      "expression": {
        "$source": "commandContext.selection[0].props.bl_is_packed.dbValue",
        "$query": {
          "$eq": false
        }
      }
    },
    "epCmdCutCopyCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isEPPages",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProductBOPSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isCopyCmdEnable": {
      "expression": "commandContext.selection && commandContext.selection.length > 0"
    },
    "hasNoDesignItemInClipboard": {
      "expression": {
        "$source": "ctx.awClipBoardProvider",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Awb0Element"
              ]
            }
          }
        }
      }
    },
    "hasNoInspectionElementInClipboard": {
      "expression": {
        "$source": "ctx.awClipBoardProvider",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Aqc0QcElement"
              ]
            }
          }
        }
      }
    },
    "isAssignRefPartPasteCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProcessOrOperationSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.hasNoDesignItemInClipboard",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.hasNoInspectionElementInClipboard",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProcessOrOperationSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "epStructCmdIsLeafNode": {
      "expression": "commandContext.selection[0].isLeaf === true"
    },
    "epCmdRegenerateFindNoEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epStructCmdIsLeafNode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.epEnableRegenerateFindNoCommandIfPertIsActiveOrSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isETOinWI",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrProcessResource"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "epEnableRegenerateFindNoCommandIfPertIsActiveOrSingleSelection": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "conditions.epEnableRegenerateFindNumberForPri",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epEnableRegenerateFindNumberInPERTview",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epEnableRegenerateFindNumberForPri": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.contextObject.uid",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$in": [
                "EpBalancingOperationsSequence",
                "EpPlanningOperationsSequence"
              ]
            }
          }
        ]
      }
    },
    "epEnableRegenerateFindNumberInPERTview": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$lte": 1
            }
          },
          {
            "$source": "commandContext.tabKey",
            "$query": {
              "$in": [
                "EpPert"
              ]
            }
          }
        ]
      }
    },
    "isNoCutOperationPerformed": {
      "expression": "!ctx.cutIntent"
    },
    "isExportImportCommandActiveInEP": {
      "expression": {
        "$source": "ctx.sublocation.nameToken",
        "$query": {
          "$in": [
            "workInstructions",
            "assemblyPlanning",
            "functionalPlan"
          ]
        }
      }
    },
    "isSelectionAvailable": {
      "expression": {
        "$source": "commandContext.selection.length",
        "$query": {
          "$gt": "0"
        }
      }
    },
    "isSubmitToWorkflowCommandEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSelectionAvailable",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "hasValidationInput": {
      "expression": {
        "$source": "ctx.epValidationContext.epValidationInput.inputObject.length",
        "$query": {
          "$gt": 0
        }
      }
    },
    "isOpenValidationsPanel": {
      "expression": {
        "$source": "ctx.epPageContext.showValidationPanel",
        "$query": {
          "$eq": true
        }
      }
    },
    "isOnValidationEnabledPage": {
      "expression": {
        "$source": "ctx.sublocation.nameToken",
        "$query": {
          "$in": [
            "workInstructions",
            "assemblyPlanning",
            "functionalPlan",
            "multiBOMManager:ebomContextSublocation",
            "multiBOMManager:mbomContextSublocation"
          ]
        }
      }
    },
    "isAssemblyPlanningAvailableInWorkspaceAndPlanningForSmallProduct": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAssemblyPlanningAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isAssemblyPlanningAvailableInWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "assemblyPlanning"
          ]
        }
      }
    },
    "isAssemblyPlanningSelected": {
      "expression": "ctx.sublocation.nameToken === 'assemblyPlanning'"
    },
    "isScopeObjectProcessAllowedInProcessPlanning": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isScopeClassicSubProcess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isScopeProcessAreaStationOrLine",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProcessPlanningTaskSwitcherVisibleInLargeProduct": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAssemblyPlanningAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isScopeObjectProcessAllowedInProcessPlanning",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProcessPlanningTaskSwitcherVisibleInSmallProduct": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAssemblyPlanningAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPOrPlantBOPAllowedInWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProcessAndMbomPartOfWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isScopeProcessHasAssignedWorkarea": {
      "expression": "commandContext.vmos.length > 0"
    },
    "isAssignWorkareaToScopeAllowed": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.locationContext['ActiveWorkspace:Location']",
            "$query": {
              "$eq": "easyplan"
            }
          },
          {
            "$source": "conditions.isScopeProcessHasAssignedWorkarea",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isShowFullBOEInResourcesEnabled",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isShowFullBOEInResourcesEnabled": {
      "expression": "ctx.preferences.EP_ShowFullBOEInResources !== undefined && ctx.preferences.EP_ShowFullBOEInResources[0]==='true'"
    },
    "isAssignWorkAreaAllowedOnClassicBopOrProcessArea": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.locationContext['ActiveWorkspace:Location']",
            "$query": {
              "$eq": "easyplan"
            }
          },
          {
            "$source": "conditions.isSelectionOnClassicBopOrProcessArea",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkAreaSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isAssignWorkAreaVisible": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSelectionOnClassicBopOrProcessArea",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkAreaSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSelectionOnClassicBopOrProcessArea": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSingleProcessAreaSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionInClassicBop",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSelectionInClassicBop": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epHasSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPLoaded",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSingleProcessAreaSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.hasSingleSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "isWorkAreaSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.workAreaSelection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.workAreaSelection[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrWorkarea"
              ]
            }
          }
        ]
      }
    },
    "isClassicBOPLoaded": {
      "expression": {
        "$source": "ctx.ep.scopeObject",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          }
        }
      }
    },
    "isBoeSelectionFromRoots": {
      "expression": {
        "$source": "commandContext.selection",
        "$query": {
          "$all": {
            "$source": "levelNdx",
            "$query": {
              "$eq": 0
            }
          }
        }
      }
    },
    "isTwinAssociatedCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.epPageContext.loadedObject.props.Mfg0LinkedBOELine && ctx.epPageContext.loadedObject.props.Mfg0LinkedBOELine.dbValues.length > 0",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRemoveWorkAreaFromScopeAllowedCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTwinAssociatedCondition",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isBoeSelectionFromRoots",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOpenWorkInstructionTaskActiveAndVisibleInLargeProduct": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isWorkInstructionsAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isScopeObjectProcessAllowedInWorkInstructions",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.notOnHLPPage",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isScopeObjectProcessAllowedInWorkInstructions": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "conditions.isScopeProcessStation",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOpenWorkInstructionTaskVisibleInTaskSwitcherForSmallProduct": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isWorkInstructionsAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isScopeObjectProcessAllowedInWorkInstructions",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isWorkInstructionsAvailableInWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "workInstructions"
          ]
        }
      }
    },
    "isWorkInstructionsAvailableInWorkspaceAndPlanningForSmallProductAndClassicBOPAllowedinWP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkInstructionsAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPAllowedInWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isWorkInstructionsSelected": {
      "expression": "ctx.sublocation.nameToken === 'workInstructions'"
    },
    "isSingleObjectSelectedInCmdCtxForWI": {
      "expression": "commandContext.inputObject !== undefined && commandContext.inputObject.uid"
    },
    "wiCmdOpenInEwiCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.preferences.EWI_AllowPreview",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "ctx.preferences.EWI_AllowPreview[0]",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "isMBMAlignmentSelected": {
      "expression": "ctx.sublocation.nameToken === 'multiBOMManager:ebomContextSublocation' || ctx.sublocation.nameToken === 'multiBOMManager:mbomContextSublocation'"
    },
    "epCommandContextVmoIsProcessStationAndNotIsWorkInstructionsSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epCommandContextVmoIsProcessStation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkInstructionsSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "wiAddWorkAreaToSelectedObjCmdCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAssignWorkareaToScopeAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionAvailable",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.preferences.WI_CLASSIC_BOP_CONFIG",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isClassicBOPAllowedInWP": {
      "expression": {
        "$source": "ctx.preferences.EP_WorkPackageContentType",
        "$query": {
          "$in": [
            "BOP:Item",
            "BOP:ItemRevision",
            "BOP:PSBOMView",
            "BOP:PSBOMViewRevision"
          ]
        }
      }
    },
    "epIsLineBalancingSublocation": {
      "expression": "ctx.sublocation.nameToken === 'lineBalancing'"
    },
    "isLBInWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "lineBalancing"
          ]
        }
      }
    },
    "isCommandContextProcessAreaOrProcessLineNode": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessStation",
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "isCommandContextProcessAreaOrProcessLineNodeAndLBInWorkspace": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isLBInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCommandContextProcessAreaOrProcessLineNode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.preferences.EP_EnableLineBalancing[0]",
            "$query": {
              "$eq": "true"
            }
          }
        ]
      }
    },
    "isScopeObjectProcessAreaOrProcessLineNode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isLBInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessStation",
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$source": "ctx.preferences.EP_EnableLineBalancing[0]",
            "$query": {
              "$eq": "true"
            }
          }
        ]
      }
    },
    "showProductBOPToggleCommand": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epIsLineBalancingSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.epPageContext.functionalPlan",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "showProductBOP": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.ep.balancingShowProductBOP",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.ep.balancingShowProductBOP",
            "$query": {
              "$isNull": true
            }
          }
        ]
      }
    },
    "hideProductBOP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epIsLineBalancingSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.ep.balancingShowProductBOP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epBalancingCmdPasteIntoEnabledCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.inputObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessStation",
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "epbalancingIsEditPrEnabled": {
      "expression": "commandContext.vmo.uid === commandContext.balancingData.selectionData.station.uid && commandContext.balancingData.selectionData.processResource"
    },
    "hasProductVariants": {
      "expression": "ctx.epPageContext.hasProductVariants && ctx.epPageContext.hasProductVariants === true"
    },
    "isTimeDistributionEnabled": {
      "expression": "conditions.epIsLineBalancingSublocation && conditions.hasProductVariants"
    },
    "isAssignToProcessResourceEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isChangeOnSelectionAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epBalancingIsExternalOperation",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epBalancingIsExternalOperation": {
      "expression": "commandContext.occContext && commandContext.occContext.areExternal && commandContext.occContext.areExternal === true"
    },
    "stationHasProcessResources": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.inputObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessResource"
              ]
            }
          },
          {
            "$and": [
              {
                "$source": "commandContext.inputObject.modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrProcessStation"
                  ]
                }
              },
              {
                "$source": "commandContext.inputObject.props.Mfg0processResources.dbValues.length",
                "$query": {
                  "$gt": 0
                }
              }
            ]
          }
        ]
      }
    },
    "epBalancingMultiDeleteFlowEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epMultiSelectionAndNotReadOnly",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epBalancingIsExternalOperation",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isCutCopyAndNotExternalOperation": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Mfg0BvrOperation",
                    "Mfg0BvrProcess"
                  ]
                }
              }
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.epBalancingIsExternalOperation",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.epShowCutCopyProcessCmd",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "epViewLineLayout": {
      "expression": "ctx.sublocation.nameToken === 'lineBalancing'"
    },
    "epSelectPartPlanningActivities": {
      "expression": {
        "$source": "ctx.epPageContext.showActivities",
        "$query": {
          "$eq": "part"
        }
      }
    },
    "epPartPlanningActivitiesEnable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPanelActive",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "epPartPlanningActivitieVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAssemblyPlanningSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isActivitiesForPartPlanningEnabled",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isPanelActive": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isValidationMode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isActivitiesMode",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isValidationMode": {
      "expression": {
        "$source": "ctx.epPageContext.showValidationPanel",
        "$query": {
          "$eq": true
        }
      }
    },
    "isActivitiesMode": {
      "expression": {
        "$source": "ctx.epPageContext.showActivities",
        "$query": {
          "$eq": "time"
        }
      }
    },
    "isNotHosted": {
      "expression": {
        "$source": "ctx.aw_host_type",
        "$query": {
          "$isNull": true
        }
      }
    },
    "isHosted": {
      "expression": {
        "$source": "ctx.aw_host_type",
        "$query": {
          "$isNotNull": false
        }
      }
    },
    "isActivitiesForPartPlanningEnabled": {
      "expression": {
        "$source": "ctx.preferences.EP_Enable_PartPlanningActivities[0]",
        "$query": {
          "$eq": "true"
        }
      }
    },
    "isPartPlanningOperation": {
      "expression": "ctx.preferences.AWC_NX_OpenSupportedTypes.indexOf(commandContext.vmo.props.fnd0bl_line_object_type.dbValues[0]) > -1 && ctx.preferences.AWC_NX_OpenUnsupportedTypes.indexOf(commandContext.vmo.props.fnd0bl_line_object_type.dbValues[0]) < 0 "
    },
    "isPartPlanningOperationAndNotHosted": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPartPlanningOperation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNotHosted",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "openInNXHostedCommand": {
      "expression": {
        "$and": [
          {
            "$source": "condition.isPartPlanningOperation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.aw_host_type",
            "$query": {
              "$eq": "NX"
            }
          }
        ]
      }
    },
    "isRemoveScopeValid": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": "0"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isStation": {
      "expression": {
        "$source": "commandContext.vmo.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrProcessStation"
          ]
        }
      }
    },
    "isEnableSelectProductVariantCommand": {
      "expression": "commandContext.productVariantsList.length > 0"
    },
    "isScopeObjectProcessStationAndisAssemblyPlanningOrWorkInstructionsAuthoringSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isScopeObjectProcessStation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAssemblyPlanningOrWorkInstructionsAuthoringSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isScopeObjectProcessStation": {
      "expression": {
        "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrProcessStation"
          ]
        }
      }
    },
    "isAssemblyPlanningOrWorkInstructionsAuthoringSelected": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isAssemblyPlanningSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkInstructionsSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isPmiLicenseValid": {
      "expression": {
        "$source": "ctx.ep.licenses['tcmfg_pmi_ep']",
        "$query": {
          "$eq": true
        }
      }
    },
    "hasSelectionAndValidPmiLicense": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epHasSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPmiLicenseValid",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isMissinginSource": {
      "expression": {
        "$source": "commandContext.vmo.props['mci0MarkedAsDeleted'].uiValue",
        "$query": {
          "$eq": "True"
        }
      }
    },
    "notMissinginSource": {
      "expression": "!commandContext.vmo.props['mci0MarkedAsDeleted'] || commandContext.vmo.props['mci0MarkedAsDeleted'].uiValue==='False'"
    },
    "isPmiUnconfigured": {
      "expression": {
        "$source": "commandContext.vmo.props['is_unconfigured'].dbValue",
        "$query": {
          "$eq": "true"
        }
      }
    },
    "isPmiDetailsLoadable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.notMissinginSource",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPmiUnconfigured",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isPmiUpdateCommandViewable": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.assignmentIndicationToggleStatus",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.hasSelectionAndValidPmiLicense",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isHighLevelPlanningSublocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'highLevelPlanning'"
    },
    "isOccurenceSublocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
    },
    "isPlantAndPlantBOPInCCCondition": {
      "expression": "ctx.epPageContext.rootPlant !== 'undefined'  && ctx.epPageContext.processStructure !== 'undefined'"
    },
    "isPlantBOPAssociatedCondition": {
      "expression": " ctx.epPageContext.rootPlant.props.Mfg0linkedPlantBOPObject !== '' && ctx.epPageContext.rootPlant.props.Mfg0linkedPlantBOPObject !== 'undefined' && ctx.epPageContext.rootPlant.props.Mfg0linkedPlantBOPObject.dbValues[0] !== ''"
    },
    "isPlantAssociatedCondition": {
      "expression": {
        "$source": "commandContext.vmo.props.Mfg0linkedBOEObject.dbValues.length",
        "$query": {
          "$gt": "0"
        }
      }
    },
    "isTwinPlantBOPAssociatedCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlantAndPlantBOPInCCCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPlantBOPAssociatedCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOccurenceSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isTCPlatformValidForSync",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isRootTypePlant",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRootTypePlant": {
      "expression": {
        "$source": "ctx.mselected[0].modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mbc0WorkAreaElement"
          ]
        }
      }
    },
    "isTwinPlantAssociatedCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlantAndPlantBOPInCCCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPlantAssociatedCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningSublocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isTCPlatformValidForSync",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCommandContextNotProcessStation",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextNotProcessStation": {
      "expression": {
        "$source": "commandContext.vmo.modelType.typeHierarchyArray",
        "$query": {
          "$notin": [
            "Mfg0BvrProcessStation"
          ]
        }
      }
    },
    "isTCMajorVersionGreaterThan12": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMajorVersion",
        "$query": {
          "$gt": "12"
        }
      }
    },
    "isTCMajorVersionEqualTo12": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMajorVersion",
        "$query": {
          "$eq": "12"
        }
      }
    },
    "isTCMinorVersionGreaterThan4": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMinorVersion",
        "$query": {
          "$gt": "4"
        }
      }
    },
    "isTCMinorVersionEqualTo4": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMinorVersion",
        "$query": {
          "$eq": "4"
        }
      }
    },
    "isTCQRMNumberGreaterThanOrEqual0": {
      "expression": {
        "$source": "ctx.tcSessionData.tcQRMNumber",
        "$query": {
          "$gte": "0"
        }
      }
    },
    "isTCPhaseVersionGreaterThanOrEqualTo10": {
      "expression": {
        "$source": "ctx.tcSessionData.phaseVersion",
        "$query": {
          "$gte": "10"
        }
      }
    },
    "isTCVersionGreaterThan_12_4": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCMajorVersionEqualTo12",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCMinorVersionGreaterThan4",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTCVersionGreaterThanOrEqualTo_12_4_0_1": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCMajorVersionEqualTo12",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCMinorVersionEqualTo4",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCQRMNumberGreaterThanOrEqual0",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCPhaseVersionGreaterThanOrEqualTo10",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTCPlatformValidForSync": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isTCMajorVersionGreaterThan12",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCVersionGreaterThan_12_4",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCVersionGreaterThanOrEqualTo_12_4_0_1",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isNotReadOnly": {
      "expression": "ctx.mfeReadOnlyMode.readOnlyMode === false || !ctx.mfeReadOnlyMode"
    },
    "isSaveWorkInstrictionsEnabled": {
      "expression": "conditions.isNotReadOnly && ctx.wiEditor && ctx.wiEditor.isSaveWorkInstrictionsEnabled"
    },
    "isRemoveOperationAllowed": {
      "expression": "conditions.isNotReadOnly && commandContext.vmo.modelType.typeHierarchyArray.includes('Mfg0BvrOperation')"
    },
    "isStepHeaderObject": {
      "expression": "commandContext.vmo.wiStepObject"
    },
    "isMultipleObjectSelectedInEP": {
      "expression": {
        "$source": "commandContext.selection.length",
        "$query": {
          "$gt": 1
        }
      }
    },
    "epIsCommandContextSelectedObject": {
      "expression": "commandContext.selectedObjects[0].uid != null"
    },
    "isAutoReviseCheckDone": {
      "expression": "data.autoReviseCheckDone===true"
    },
    "epIsCommandContextSelected": {
      "expression": "commandContext.selection[0].uid != null"
    },
    "epIsCommandContextVmoSelected": {
      "expression": "commandContext.vmo.uid != null"
    },
    "isProductViewSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selectedObjects.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.preferences.EP_ProductViewGraphicalItemType[0]",
            "$query": {
              "$ne": ""
            }
          },
          {
            "$source": "ctx.preferences.EP_ProductViewGraphicalContainerType[0]",
            "$query": {
              "$ne": ""
            }
          },
          {
            "$source": "commandContext.selectedObjects[0]",
            "$query": {
              "$typeOf": "SnapShotViewData"
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isEffectivityStepCommandEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epSingleSelectionAndNotReadOnly",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProductBOP"
              ]
            }
          }
        ]
      }
    },
    "setEffectivityOnMultipleObjectsCommandVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isMultipleObjectSelectedInEP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Mfg0BvrProductBOP"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "hasValidateEffectivityData": {
      "expression": "response.actionData.validateEffectivityData"
    },
    "highLevelPlanningMultipleProcessesSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.epMultiSelectionAndNotReadOnly",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isAssemblySelected": {
      "expression": "commandContext.assemblySelection && commandContext.assemblySelection.uid"
    },
    "isHighLevelPlanningSelected": {
      "expression": "ctx.sublocation.nameToken === 'highLevelPlanning'"
    },
    "isOpenHighLevelPlanningTaskEnableOrVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBackgroundPartsPlanningSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.notPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOpenHighLevelPlanningTaskSwitcherIsVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPOrPlantBOPAllowedInWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningPartOfWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.notPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOpenHighLevelPlanningTaskVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.notPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPOrPlantBOPAllowedInWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningPartOfWorkspace",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isHighLevelPlanningPartOfWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "highLevelPlanning"
          ]
        }
      }
    },
    "isClassicBOPOrPlantBOPAllowedInWP": {
      "expression": {
        "$source": "ctx.preferences.EP_WorkPackageContentType",
        "$query": {
          "$in": [
            "BOP:Item",
            "BOP:ItemRevision",
            "BOP:PSBOMView",
            "BOP:PSBOMViewRevision",
            "PlantBOP:Item",
            "PlantBOP:ItemRevision",
            "PlantBOP:PSBOMView",
            "PlantBOP:PSBOMViewRevision"
          ]
        }
      }
    },
    "isProcessNotFolder": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection[0].props.mbc0BopQualifier",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.selection[0].props.mbc0BopQualifier.dbValues[0]",
            "$query": {
              "$ne": "BOPFolder"
            }
          }
        ]
      }
    },
    "isNotHighLevelProcessTreeRootNode": {
      "expression": "commandContext.selection[0].uid !== ctx.epTaskPageContext.processStructure.uid"
    },
    "epTreeNodeHasParent": {
      "expression": "commandContext.selection[0].props.bl_parent.dbValues[0] !== ''"
    },
    "isSingleProcessSelection": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "conditions.isProcessNotFolder",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSingleProcessAreaSelection": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selection[0].modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          }
        ]
      }
    },
    "isPlantBopSelected": {
      "expression": {
        "$source": "commandContext.selection[0]",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Mfg0BvrPlantBOP"
            ]
          }
        }
      }
    },
    "isCutCmdAvailableForSelectedProcessArea": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlantBopSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isSingleProcessAreaSelection",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isValidForClone": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSingleProcessSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epTreeNodeHasParent",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "highLevelPlanningPasteGroupCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.hasProcessItemInClipboard",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isawClipBoardProviderNodeAndSelectionNodeNotSame",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "hasProcessItemInClipboard": {
      "expression": {
        "$source": "ctx.awClipBoardProvider",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          }
        }
      }
    },
    "hasProcessAreaItemInClipboard": {
      "expression": {
        "$source": "ctx.awClipBoardProvider",
        "$query": {
          "$all": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          }
        }
      }
    },
    "highLevelPlanningPasteBeforeAfterCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.highLevelPlanningPasteGroupCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNotHighLevelProcessTreeRootNode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProcessNotFolder",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isCommandContextProcessAreaOnlyNode": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP"
              ]
            }
          }
        ]
      }
    },
    "isCommandContextGraphItemProcessAreaOnlyNode": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.graph.commandContextItem.model.modelObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea"
              ]
            }
          },
          {
            "$source": "ctx.graph.commandContextItem.model.modelObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP"
              ]
            }
          }
        ]
      }
    },
    "isProcessAreaOnlyNode": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isCommandContextProcessAreaOnlyNode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCommandContextGraphItemProcessAreaOnlyNode",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProcessAreaOnlyNodeAndIsHighLevelPlanningorAssemblyPlanningorWiSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProcessAreaOnlyNode",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isHighLevelPlanningOrAssemblyPlanningorWiSelectedAndNotScopeObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrProcessResource"
              ]
            }
          }
        ]
      }
    },
    "isHighLevelPlanningOrAssemblyPlanningorWiSelectedAndNotScopeObject": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isHighLevelPlanningSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorkInstructionsSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAssemblyPlanningSelectedAndNotScopeObject",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isAssemblyPlanningSelectedAndNotScopeObject": {
      "expression": "ctx.sublocation.nameToken === 'assemblyPlanning' && commandContext.vmo.uid !== ctx.ep.scopeObject.uid"
    },
    "isProcessStationSelectedForPaste": {
      "expression": {
        "$source": "commandContext.selection[0]",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$notin": [
              "Mfg0BvrProcessStation"
            ]
          }
        }
      }
    },
    "highLevelPlanningProcessAreaPasteBeforeAfterCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSingleProcessAreaSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.highLevelPlanningProcessAreaPasteGroupCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "highLevelPlanningProcessAreaPasteBeforeAfterCommandEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSingleProcessAreaSelection",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.highLevelPlanningProcessAreaPasteGroupCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPlantBopSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "highLevelPlanningProcessAreaPasteGroupCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.hasProcessAreaItemInClipboard",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isawClipBoardProviderNodeAndSelectionNodeNotSame",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isawClipBoardProviderNodeAndSelectionNodeNotSame": {
      "expression": "commandContext.selection[0].uid !== ctx.awClipBoardProvider[0].uid"
    },
    "checkTargetAssemblyIfOnHLPPage": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.notOnHLPPage",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOnHLPAndNoTargetAssembly",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "notOnHLPPage": {
      "expression": {
        "$source": "ctx.sublocation.nameToken",
        "$query": {
          "$notin": [
            "highLevelPlanning"
          ]
        }
      }
    },
    "isNoTargetAssemblyOrTargetAssemblyEmpty": {
      "expression": {
        "$or": [
          {
            "$source": "commandContext.sharedSelectionData.targetAssembly[0]",
            "$query": {
              "$eq": ""
            }
          },
          {
            "$source": "commandContext.sharedSelectionData.targetAssembly.length",
            "$query": {
              "$eq": 0
            }
          }
        ]
      }
    },
    "isOnHLPAndNoTargetAssembly": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isNoTargetAssemblyOrTargetAssemblyEmpty",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$eq": [
                "highLevelPlanning"
              ]
            }
          }
        ]
      }
    },
    "isOpenHighLevelPlanningTaskSwitcherVisibleForBackgroundParts": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOpenHighLevelPlanningTaskSwitcherIsVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBackgroundPartsPlanningSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "ishighLevelPlanningProcessAreaCmdCutProcessEnabled": {
      "expression": "conditions.isNotReadOnlyMode && (!ctx.awClipBoardProvider[0].uid || conditions.isawClipBoardProviderNodeAndSelectionNodeNotSame)"
    },
    "epCommandContextHasVmo": {
      "expression": {
        "$source": "commandContext.vmo.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "epCommandContextVmoIsProcessNotAContainer": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.props.mbc0BopQualifier",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.vmo.props.mbc0BopQualifier.dbValues[0]",
            "$query": {
              "$ne": "BOPFolder"
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$notin": [
                "functionalPlan",
                "lineBalancing"
              ]
            }
          }
        ]
      }
    },
    "epCommandContextVmoIsProcessNotPlantBOP": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "commandContext.vmo.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP"
              ]
            }
          }
        ]
      }
    },
    "epCommandContextVmoIsProcessStation": {
      "expression": {
        "$source": "commandContext.vmo.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrProcessStation"
          ]
        }
      }
    },
    "inCaseOfSmallProductGoToCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCommandContextHasVmo",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "inCaseOfBigProductGoToCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.notPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.epCommandContextHasVmo",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isGoToApWiPageAllowed": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.inCaseOfSmallProductGoToCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.inCaseOfBigProductGoToCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isClassicBOPPartOfWP": {
      "expression": {
        "$source": "ctx.epTaskPageContext.processStructure.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrProcess"
          ]
        }
      }
    },
    "isGoToApWiPageAllowedAndIsClassicBOPPartOfWP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isGoToApWiPageAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPPartOfWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "notPlanningForSmallProduct": {
      "expression": {
        "$source": "ctx.preferences.EP_PlanningForSmallProduct[0]",
        "$query": {
          "$eq": "false"
        }
      }
    },
    "isPlanningForSmallProduct": {
      "expression": {
        "$source": "ctx.preferences.EP_PlanningForSmallProduct[0]",
        "$query": {
          "$eq": "true"
        }
      }
    },
    "isProcessPartOfWP": {
      "expression": {
        "$source": "ctx.epTaskPageContext.processStructure.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isMbomPartOfWP": {
      "expression": {
        "$source": "ctx.epTaskPageContext.mbomStructure.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isProcessAndMbomPartOfWP": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMbomPartOfWP",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isScopeProcessAreaStationOrLine": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP"
              ]
            }
          },
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcessLine",
                "Mfg0BvrProcessStation"
              ]
            }
          }
        ]
      }
    },
    "isScopeProcessAreaOrLine": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP",
                "Mfg0BvrProcessStation"
              ]
            }
          },
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessArea",
                "Mfg0BvrProcessLine"
              ]
            }
          }
        ]
      }
    },
    "isScopeProcessStation": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Mfg0BvrPlantBOP"
              ]
            }
          },
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcessStation"
              ]
            }
          }
        ]
      }
    },
    "isScopeNotRootObject": {
      "expression": {
        "$source": "ctx.epPageContext.processStructure.uid",
        "$query": {
          "$ne": "{{ctx.ep.scopeObject.uid}}"
        }
      }
    },
    "isScopeClassicSubProcess": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Mfg0BvrProcess"
              ]
            }
          },
          {
            "$source": "conditions.isScopeNotRootObject",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProcessStationSelectedInScope": {
      "expression": {
        "$source": "ctx.ep.scopeObject.modelType.typeHierarchyArray",
        "$query": {
          "$in": [
            "Mfg0BvrProcessStation"
          ]
        }
      }
    },
    "isBackgroundPartsPlanningSelected": {
      "expression": "ctx.sublocation.nameToken === 'backgroundParts'"
    },
    "isOpenBackgroundPartsAllowedInWorkPackage": {
      "expression": {
        "$source": "ctx.preferences.EP_WorkPackageContentType",
        "$query": {
          "$in": [
            "EBOM:Item",
            "EBOM:ItemRevision",
            "EBOM:PSBOMView",
            "EBOM:PSBOMViewRevision",
            "MBOM:Item",
            "MBOM:ItemRevision",
            "MBOM:PSBOMView",
            "MBOM:PSBOMViewRevision"
          ]
        }
      }
    },
    "isOpenBackgroundPartTaskEnableOrVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isBackgroundPartsAvailableInWorkspace",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isProcessPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isClassicBOPPartOfWP",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$notin": [
                "multiBOMManager:ebomContextSublocation",
                "multiBOMManager:mbomContextSublocation",
                "highLevelPlanning",
                "functionalPlan"
              ]
            }
          },
          {
            "$source": "conditions.isOpenBackgroundPartsAllowedInWorkPackage",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isMultipleEBOMPartsSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.isTopEBOMNotSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isTopEBOMNotSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selection.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "conditions.isTopEBOMSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTopEBOMSelected": {
      "expression": " commandContext.selection[0].uid === ctx.epPageContext.EbomStructure.uid"
    },
    "isBackgroundPartsAvailableInWorkspace": {
      "expression": {
        "$source": "ctx.workspace.availablePages",
        "$query": {
          "$in": [
            "backgroundParts"
          ]
        }
      }
    },
    "isMultipleBackgroundPartsSelected": {
      "expression": "commandContext.selection.length > 0"
    },
    "isEBOMSelectedForRemoveStructureContext": {
      "expression": "ctx.epTaskPageContext.EbomStructureContext"
    },
    "isEpSmallProductEnable": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.objectBaseType",
            "$query": {
              "$eq": "MEProcess"
            }
          },
          {
            "$source": "conditions.isPlanningForSmallProduct",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isPlantBOPAssociatedWithWP": {
      "expression": "!commandContext.createProductBOP && ctx.epTaskPageContext.processStructure.props.Mfg0linkedBOEObject.uiValues[0]===''"
    },
    "isPlantAssociatedWithPlantBOP": {
      "expression": "!commandContext.createProductBOP && ctx.epTaskPageContext.processStructure && ctx.epTaskPageContext.processStructure.props.Mfg0linkedBOEObject.uiValues[0]!=='' && ctx.epTaskPageContext.processStructure.props.Mfg0linkedBOEObject.uiValues[0] !== undefined"
    },
    "isPlantWithNotTwinPresent": {
      "expression": "!commandContext.createProductBOP && ctx.epTaskPageContext.rootPlant.props.Mfg0linkedPlantBOPObject.uiValues[0]==='' && commandContext.objectBaseType == 'Mfg0MEPlantBOP'"
    },
    "isPlantBOPAssociatedWithPlant": {
      "expression": "!commandContext.createProductBOP && ctx.epTaskPageContext.rootPlant.props.Mfg0linkedPlantBOPObject.uiValues[0]!=='' && ctx.epTaskPageContext.rootPlant.props.Mfg0linkedPlantBOPObject.uiValues[0] !== undefined && commandContext.objectBaseType == 'Mfg0MEPlantBOP'"
    },
    "isEpPlantBOPTile": {
      "expression": "commandContext.objectBaseType == 'Mfg0MEPlantBOP'"
    },
    "epRevisionRuleAdminCommandConditionActive": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.locationContext['ActiveWorkspace:Location']",
            "$query": {
              "$eq": "easyplan"
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.context.occContext.topElement"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "ItemRevision",
                  "BOMLine"
                ]
              }
            }
          },
          {
            "$source": "commandContext.context.occContext.supportedFeatures",
            "$query": {
              "$source": "Awb0RevisionRuleInformationFeature",
              "$query": {
                "$eq": true
              }
            }
          }
        ]
      }
    },
    "isEpPlantStructureExist": {
      "expression": {
        "$source": "ctx.epTaskPageContext.rootPlant.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isEpProductBopStructureExist": {
      "expression": {
        "$source": "ctx.epTaskPageContext.functionalPlan.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isEpProcessStructureExist": {
      "expression": {
        "$source": "ctx.epTaskPageContext.processStructure.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isEpMbomStructureExist": {
      "expression": {
        "$source": "ctx.epTaskPageContext.mbomStructure.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isEpEbomStructureExist": {
      "expression": {
        "$source": "ctx.epTaskPageContext.ebomStructure.uid",
        "$query": {
          "$notNull": true
        }
      }
    },
    "isNotEpConfigurationFilterPanelOpen": {
      "expression": "ctx.sidenavCommandId !== 'epEbomConfigurationCommand' && ctx.sidenavCommandId !== 'epProcessConfigurationCommand' && ctx.sidenavCommandId !== 'epMbomConfigurationCommand' && ctx.sidenavCommandId !== 'epPlantConfigurationCommand' && ctx.sidenavCommandId !== 'epProductBopConfigurationCommand'"
    },
    "isEpConfigurationFilterPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epEbomConfigurationCommand' || ctx.sidenavCommandId === 'epProcessConfigurationCommand' || ctx.sidenavCommandId === 'epMbomConfigurationCommand' || ctx.sidenavCommandId === 'epPlantConfigurationCommand' || ctx.sidenavCommandId === 'epProductBopConfigurationCommand'"
    },
    "isEbomConfigPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epEbomConfigurationCommand'"
    },
    "isMbomConfigPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epMbomConfigurationCommand'"
    },
    "isPlantConfigPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epPlantConfigurationCommand'"
    },
    "isProcessConfigPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epProcessConfigurationCommand'"
    },
    "isProductBopConfigPanelOpen": {
      "expression": "ctx.sidenavCommandId === 'epProductBopConfigurationCommand'"
    },
    "isWPHasConfigurationToReset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isEpProcessStructureExist",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isEpMbomStructureExist",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isEpEbomStructureExist",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isEpProductBopStructureExist",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isEpPlantStructureExist",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "viewOtherConfigurationCommandEnabledCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mfgReadOnlyMode.readOnlyMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.sublocation.nameToken",
            "$query": {
              "$in": [
                "workInstructions",
                "assemblyPlanning",
                "highLevelPlanning",
                "functionalPlan"
              ]
            }
          }
        ]
      }
    },
    "isConfigContextNotAssociatedToWP": {
      "expression": "!ctx.epTaskPageContext.configuratorContext"
    },
    "isConfigContextAssociatedToWP": {
      "expression": "ctx.epTaskPageContext.configuratorContext"
    },
    "isProductionProgramNotAssociatedToWP": {
      "expression": "!ctx.epTaskPageContext.productionProgramStructureContext"
    },
    "isProductionProgramAssociatedToWP": {
      "expression": "ctx.epTaskPageContext.productionProgramStructureContext"
    },
    "isProductVariantSelected": {
      "expression": "commandContext.selectedObjects.length > 0"
    },
    "createProductionProgramVisibilityCond": {
      "expression": "conditions.isProductionProgramNotAssociatedToWP && conditions.isConfigContextAssociatedToWP"
    },
    "isPlantBOPScopeAndNoPreviousDIPANode": {
      "expression": "ctx.ep.scopeObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcessArea') && commandContext.sharedSelectionData.isTreeDataLoaded == 'false'"
    },
    "isPlantBOPScopeAndAtleastOneDIPANode": {
      "expression": "ctx.ep.scopeObject.modelType.typeHierarchyArray.includes('Mfg0BvrProcessArea') && commandContext.sharedSelectionData.isTreeDataLoaded == 'true'"
    },
    "isTCMajorVersGreaterThan14": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMajorVersion",
        "$query": {
          "$gt": "14"
        }
      }
    },
    "isTCMajorVersionEqualTo14": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMajorVersion",
        "$query": {
          "$eq": "14"
        }
      }
    },
    "isTCMinorVersGreaterThan2": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMinorVersion",
        "$query": {
          "$gt": "2"
        }
      }
    },
    "isTCMinorVersionEqualTo2": {
      "expression": {
        "$source": "ctx.tcSessionData.tcMinorVersion",
        "$query": {
          "$eq": "2"
        }
      }
    },
    "isTCQRMNumberGreaterThanOrEqual1": {
      "expression": {
        "$source": "ctx.tcSessionData.tcQRMNumber",
        "$query": {
          "$gte": "1"
        }
      }
    },
    "isTCPlatformValidForDIPAAndIsNotReadOnlyMode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCPlatformValidForDIPA",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isReadOnlyMode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isTCPlatformValidForDIPA": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isTCMajorVersGreaterThan14",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCVersionGreaterThan_14_2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCVersionGreaterThanOrEqualTo_14_2_0_1",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTCVersionGreaterThan_14_2": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCMajorVersionEqualTo14",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCMinorVersGreaterThan2",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTCVersionGreaterThanOrEqualTo_14_2_0_1": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTCMajorVersionEqualTo14",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCMinorVersionEqualTo2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTCQRMNumberGreaterThanOrEqual1",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isIntegratedBOMSelectedForRemoveStructureContext": {
      "expression": "ctx.epTaskPageContext.EbomStructureContext"
    },
    "isDeleteFlowEnabled": {
      "expression": "commandContext.arrowIndications && commandContext.arrowIndications.selected"
    }
  },
  "commandPlacements": {
    "epProcessShowActivitiesToggleCommandDisplay": {
      "id": "epShowActivitiesToggleCommand",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 0
    },
    "epAddActivityByCodeCommandDisplay": {
      "id": "epAddActivityByCode",
      "uiAnchor": "EpActivities_uiAnchor",
      "priority": 1
    },
    "epAddActivityFromDataCardCommandDisplay": {
      "id": "epAddActivityFromDataCard",
      "uiAnchor": "EpActivities_uiAnchor",
      "priority": 0
    },
    "epDeleteActivitiesCommandDiaplay": {
      "id": "epDeleteActivitiesCommand",
      "uiAnchor": "EpActivities_uiAnchor",
      "priority": -1
    },
    "epCreateClassicActivityCmdDiaplay": {
      "id": "epCreateClassicActivityCmd",
      "uiAnchor": "EpActivities_uiAnchor",
      "priority": 2
    },
    "openMCNFromEPCommandPlacement": {
      "id": "Awp0ShowObjectCell",
      "uiAnchor": "epMCNToolTipCommandBarSlot",
      "priority": 1000
    },
    "openEpTasksPlacement": {
      "id": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "showGroupSelected": false
    },
    "openAuthorBOETaskSwitcherCommandPlacement": {
      "id": "openAuthorBOETaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 100
    },
    "openAuthorBOETaskForManagePageCommandPlacement": {
      "id": "openAuthorBOETaskForManagePageCommand",
      "uiAnchor": "epTasksForManagePage_uiAnchor",
      "priority": 13
    },
    "EpUpdateRevisionCommand": {
      "id": "updateRevisionCommand",
      "uiAnchor": "EpEBOMTile_uiAnchor",
      "priority": 50
    },
    "createMbomAndPlantBopUsingRuleStreamPlacement": {
      "id": "createMbomAndPlantBopUsingRuleStream",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 309
    },
    "EpManageAddToFavorites": {
      "id": "Awp0AddToFavorites",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 310
    },
    "EpManageRemoveFromFavorites": {
      "id": "Awp0RemoveFromFavorites",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 310
    },
    "epUseExistingStructureForWorkpackageCommand": {
      "id": "epUseExistingStructureForWorkpackageCommand",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 300
    },
    "epCreateNewStructureForWorkpackageCommand": {
      "id": "epCreateStructureForWorkpackageTileCommand",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 200
    },
    "epCreateNewStructureFromTemplateForWorkpackageCommand": {
      "id": "epCreateNewStructureFromTemplateForWorkpackageTileCommand",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 400
    },
    "epCreateStructureFromMirrorCommand": {
      "id": "epCreateStructureFromMirrorTileCommand",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 500
    },
    "openProductBOPTaskPlacement": {
      "id": "openProductBOPTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 80
    },
    "openProductBOPTaskPlacementForManagePage": {
      "id": "openProductBOPTaskCommandForManagePage",
      "uiAnchor": "epTasksForManagePage_uiAnchor",
      "priority": 11
    },
    "backToBalancingDisplay": {
      "id": "backToBalancingCommand",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 1
    },
    "epProductBopHoverMenuOnProcessCommandPlacement": {
      "id": "epNavigationHoverMenuCommand",
      "uiAnchor": "productBOP_onHoverCommand",
      "priority": 0
    },
    "epProductBOPProcessRegenerateFindNumberDisplay": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 1
    },
    "epProductBOPCreateGroupCommandDisplay": {
      "id": "epProductBOPCreateGroupCommand",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 2
    },
    "epProductBOPCreateFunctionalGroupCommandDisplay": {
      "id": "epCreateFunctionalGroup",
      "parentGroupId": "epProductBOPCreateGroupCommand",
      "priority": 1
    },
    "epProductBOPCreateProcessCommandDisplay": {
      "id": "epCreateProcess",
      "parentGroupId": "epProductBOPCreateGroupCommand",
      "priority": 2
    },
    "epProductBOPCreateOperationCommandDisplay": {
      "id": "epCreateOperation",
      "parentGroupId": "epProductBOPCreateGroupCommand",
      "priority": 3
    },
    "epProductBOPCmdCutCommandDisplay": {
      "id": "epCmdCut",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 3
    },
    "epProductBOPCmdPasteGroupDisplay": {
      "id": "epCmdPasteGroup",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 4
    },
    "epProductBOPCmdPasteIntoDisplay": {
      "id": "epCmdPasteInto",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 2,
      "parentGroupId": "epCmdPasteGroup"
    },
    "epProductBOPCmdPasteBeforeDisplay": {
      "id": "epCmdPasteBefore",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 3,
      "parentGroupId": "epCmdPasteGroup"
    },
    "epProductBOPCmdPasteAfterDisplay": {
      "id": "epCmdPasteAfter",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 4,
      "parentGroupId": "epCmdPasteGroup"
    },
    "epProductBOPCmdCopyCommandDisplay": {
      "id": "Awp0Copy",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 6
    },
    "epProductBOPDeleteCommandDisplay": {
      "id": "epCmdMultipleDelete",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 7
    },
    "epProductBOPSubmitToWorkflowCommandDisplay": {
      "id": "submitToWorkflowCommand",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 11
    },
    "epProductBOPShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 0
    },
    "epProductBOPHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 0
    },
    "epMbomCmdPackUnpackDisplay": {
      "id": "epCmdPackOrUnpack",
      "uiAnchor": "EpProductBopMbomTree_uiAnchor",
      "priority": 1
    },
    "epMbomCmdUnpackAllDisplay": {
      "id": "epCmdUnpackAll",
      "uiAnchor": "EpProductBopMbomTree_uiAnchor",
      "priority": 13
    },
    "epMbomCmdPackAllDisplay": {
      "id": "epCmdPackAll",
      "uiAnchor": "EpProductBopMbomTree_uiAnchor",
      "priority": 14
    },
    "epMbomShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "EpProductBopMbomTree_uiAnchor",
      "priority": 0
    },
    "epMbomHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "EpProductBopMbomTree_uiAnchor",
      "priority": 0
    },
    "epProductBOPSetEffectivityCommandDisplay": {
      "id": "setEffectivityStepCommand",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 0
    },
    "productBopProcessExportRoundTripCommandDisplay": {
      "id": "Arm0ExportImport",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 0
    },
    "cmdAlternativeOpenInNewTab": {
      "id": "cmdAlternativeOpenInNewTab",
      "uiAnchor": "alternativeOpen_cellCommands",
      "priority": 300,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "cmdCreateAlternativeDisplay": {
      "id": "cmdCreateAlternative",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 100
    },
    "cmdManageAlternativesGroupDisplay": {
      "id": "cmdManageAlternativesGroup",
      "uiAnchor": "ep_commandBarRightSlot",
      "showGroupSelected": false,
      "priority": 100
    },
    "cmdCreatePartialAlternativeDisplay": {
      "id": "cmdCreatePartialAlternative",
      "uiAnchor": "ep_commandBarRightSlot",
      "parentGroupId": "cmdManageAlternativesGroup",
      "priority": 100
    },
    "cmdSearchPartialAlternativeDisplay": {
      "id": "cmdSearchPartialAlternative",
      "uiAnchor": "ep_commandBarRightSlot",
      "parentGroupId": "cmdManageAlternativesGroup",
      "priority": 100
    },
    "cmdGoToMasterDisplay": {
      "id": "cmdGoToMaster",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 100
    },
    "cmdCloneAlternativeDisplay": {
      "id": "cmdCloneAlternative",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 100
    },
    "epCheckOutDisplay": {
      "id": "epCheckOut",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 1
    },
    "epCheckInDisplay": {
      "id": "epCheckIn",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 1
    },
    "cmdCreateReportDisplay": {
      "id": "cmdCreateReport",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 200
    },
    "epOpenShowObjectFromProcessPlanningDisplay": {
      "id": "EPOpenShowObject",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 15
    },
    "epOpenShowObjectFromWorkInstructionsDisplay": {
      "id": "EPOpenShowObject",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 15
    },
    "epOpenShowObjectFromHighLevelPlanningDisplay": {
      "id": "EPOpenShowObject",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 15
    },
    "epOpenShowObjectFromProductBOPBOPTreeDisplay": {
      "id": "EPOpenShowObject",
      "uiAnchor": "EpProductBopStructureTree_uiAnchor",
      "priority": 2000
    },
    "epOpenShowObjectFromLineBalancingOperationsDisplay": {
      "id": "EPOpenShowObject",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 50
    },
    "epUnassignPartCommandDisplay": {
      "id": "epUnassign",
      "uiAnchor": "EpPartsTable_uiAnchor",
      "priority": 1
    },
    "epSetOccurrenceTypeCommandDisplay": {
      "id": "EpSetOccurrenceType",
      "uiAnchor": "EpPartsTable_uiAnchor",
      "priority": 2
    },
    "epUnassignResourceCommandDisplay": {
      "id": "epUnassignResource",
      "uiAnchor": "EpResourcesTable_uiAnchor",
      "priority": 1
    },
    "epRemoveWorkareaCommandDisplay": {
      "id": "epRemoveWorkarea",
      "uiAnchor": "EpWorkareaTable_uiAnchor",
      "priority": 1
    },
    "epStartEditInformationCommandDisplay": {
      "id": "epStartEditInformation",
      "uiAnchor": "EpInformation_uiAnchor",
      "priority": -3
    },
    "epSaveEditInformationCommandDisplays": {
      "id": "epSaveEditsInformation",
      "uiAnchor": "EpInformation_uiAnchor",
      "priority": -2
    },
    "epCancelEditsInformationCommandDisplay": {
      "id": "epCancelEditsInformation",
      "uiAnchor": "EpInformation_uiAnchor",
      "priority": -1
    },
    "epAttachFileCommandOnDisplay": {
      "id": "epAttachFileLaunchPanelCommand",
      "uiAnchor": "EpFiles_uiAnchor",
      "priority": 1000
    },
    "epDownloadAttachmentCommandDisplay": {
      "id": "epDownloadAttachmentCommand",
      "uiAnchor": "EpFiles_uiAnchor",
      "priority": 1001
    },
    "epXcBrowseReplaceFileLaunchPopupWithReviseCheckCommandOnDisplay": {
      "id": "XcBrowseReplaceFilePopupWithReviseCheckCommand",
      "uiAnchor": "EpFiles_uiAnchor",
      "priority": 1002
    },
    "epDeleteAttachmentCommandDisplay": {
      "id": "epDeleteAttachmentCommand",
      "uiAnchor": "EpFiles_uiAnchor",
      "priority": 1003
    },
    "epUnassignDocumentItemCommandDisplay": {
      "id": "epUnassignDocumentItem",
      "uiAnchor": "EpDocuments_uiAnchor",
      "priority": 1
    },
    "epPasteDocumentItemCommandDisplay": {
      "id": "epPasteDocumentItem",
      "uiAnchor": "EpDocuments_uiAnchor",
      "priority": 1
    },
    "epPasteResourceCommandDisplay": {
      "id": "epPasteResource",
      "uiAnchor": "WiResourcesTable_uiAnchor",
      "priority": 30
    },
    "epAddWebLinkCommandDisplay": {
      "id": "epAddWebLink",
      "uiAnchor": "EpDocuments_uiAnchor",
      "priority": 1
    },
    "epRemoveScopeFlowCommandDisplay": {
      "id": "epRemoveScopeFlow",
      "uiAnchor": "EpExternalFlows_uiAnchor",
      "priority": 1
    },
    "epPasteRefPartsCommandDisplay": {
      "id": "epPasteRefParts",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 3
    },
    "epSetDocumentOccurrenceTypeCommandDisplay": {
      "id": "EpSetOccurrenceType",
      "uiAnchor": "EpDocuments_uiAnchor",
      "priority": 2
    },
    "epPartsClearImpactIndicationCommandDisplay": {
      "id": "epPartsClearImpactIndication",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 9
    },
    "epPartsRestoreImpactIndicationCommandDisplay": {
      "id": "epRestoreImpactIndication",
      "uiAnchor": "EpImpactHandled_uiAnchor",
      "priority": 1
    },
    "XcShareWithXceleratorPopupCommandDisplay": {
      "id": "XcShareWithXceleratorPopupCmd",
      "uiAnchor": "EpFiles_uiAnchor",
      "priority": 1005
    },
    "epPartsCmdPackUnpackDisplay": {
      "id": "epCmdPackOrUnpack",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 4
    },
    "epPartsCmdUnpackAllDisplay": {
      "id": "epCmdUnpackAllPartsTab",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 5
    },
    "epPartsCmdPackAllDisplay": {
      "id": "epCmdPackAllPartsTab",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 6
    },
    "epOpenDocumentCommandDisplay": {
      "id": "epOpenDocument",
      "uiAnchor": "epDocument_cellAnchor",
      "priority": 1,
      "cellDisplay": {
        "position": "TOP_RIGHT",
        "hover": true
      }
    },
    "epCreateDCDCommandDisplay": {
      "id": "epCreateDCDCommand",
      "uiAnchor": "EpDCDsTable_uiAnchor",
      "priority": 3
    },
    "epRemoveDCDCommandDisplay": {
      "id": "epRemoveDCDCommand",
      "uiAnchor": "EpDCDsTable_uiAnchor",
      "priority": 3
    },
    "epPasteInspectionDefinitionPartsCommandDisplay": {
      "id": "epPasteInspectionDefinitionParts",
      "uiAnchor": "EpInspectionDefinitionsTable_uiAnchor",
      "priority": 3
    },
    "epRemoveInspectionDefinitionPartsCommandDisplay": {
      "id": "epRemoveInspectionDefinitionPartsCommand",
      "uiAnchor": "EpInspectionDefinitionsTable_uiAnchor",
      "priority": 3
    },
    "wiAssignWorkAreaToInputObjectCommandDisplay": {
      "id": "epAssignWorkAreaToInputObject",
      "uiAnchor": "WiWorkareaTable_uiAnchor",
      "priority": 2
    },
    "wiRemoveWorkareaCommandDisplay": {
      "id": "epRemoveWorkarea",
      "uiAnchor": "WiWorkareaTable_uiAnchor",
      "priority": 1
    },
    "epAssignWorkAreaToInputObjectCommandDisplay": {
      "id": "epAssignWorkAreaToInputObject",
      "uiAnchor": "EpWorkareaTable_uiAnchor",
      "priority": 2
    },
    "GotoPreviousPageCmdPlacement": {
      "id": "gotoPreviousPage",
      "uiAnchor": "ep_projectSectionBackCommand",
      "priority": 100
    },
    "pertDeleteCommandDisplay": {
      "id": "epCmdDelete",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1003
    },
    "pertUpdateFlowsCommandDisplay": {
      "id": "updateFlowsCommand",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1006
    },
    "assemblyCreateGroupCommandDisplayForPert": {
      "id": "assemblyCreateGroupCommandForPert",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 2
    },
    "assemblyRegenerateFindNumberCommandForPert": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1006
    },
    "assemblyProcessCreateOperationCommandDisplayForPert": {
      "id": "epCreateOperation",
      "parentGroupId": "assemblyCreateGroupCommandForPert",
      "priority": 2
    },
    "assemblyProcessCreateProcessCommandDisplayForPert": {
      "id": "epCreateProcess",
      "parentGroupId": "assemblyCreateGroupCommandForPert",
      "priority": 3
    },
    "assemblyCreateExecutionstepCommandDisplayForPert": {
      "id": "epCreateExecutionStep",
      "parentGroupId": "assemblyCreateGroupCommandForPert",
      "priority": 5
    },
    "epActionsMenuForPERTNodeCommandDisplay": {
      "id": "epActionsMenuForPERTNodeCommand",
      "uiAnchor": "aw_graph_node",
      "priority": 200
    },
    "resetLayoutCommandDisplay": {
      "id": "resetLayoutCommand",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1005
    },
    "submitToWorkflowCommandDisplay": {
      "id": "submitToWorkflowCommand",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1004
    },
    "setAsPredecessorCommandDisplayForPERTNode": {
      "id": "setAsPredecessorCommand",
      "priority": 1,
      "parentGroupId": "epActionsMenuForPERTNodeCommand"
    },
    "setAsSuccessorCommandDisplayForPERTNode": {
      "id": "setAsSuccessorCommand",
      "priority": 2,
      "parentGroupId": "epActionsMenuForPERTNodeCommand"
    },
    "setAsPredecessorCommandDisplayForProcessTree": {
      "id": "setAsPredecessorCommand",
      "priority": 1,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "setAsSuccessorCommandDisplayForProcessTree": {
      "id": "setAsSuccessorCommand",
      "priority": 2,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "selectExternalFlowsTabCommandDisplay": {
      "id": "selectExternalFlowsTabCommand",
      "uiAnchor": "aw_graph_node",
      "priority": 200
    },
    "showInPertDiagramCommandPlacement": {
      "id": "showInPertDiagramCommand",
      "uiAnchor": "processLayoutAreaAnchor",
      "priority": 1
    },
    "showEntireBOPTreeCommandPlacement": {
      "id": "showEntireBOPTreeCommand",
      "uiAnchor": "processLayoutAreaAnchor",
      "priority": 1
    },
    "assemblyCreateCompoundOperationForPertCommandPlacement": {
      "id": "epCreateCompoundOperation",
      "parentGroupId": "assemblyCreateGroupCommandForPert",
      "priority": 3
    },
    "epCloneOperationCommandDisplay": {
      "id": "cloneOperationCommand",
      "priority": 1,
      "parentGroupId": "epCloneOperationOrProcessGroup"
    },
    "epCloneProcessCommandDisplay": {
      "id": "cloneProcessCommand",
      "priority": 2,
      "parentGroupId": "epCloneOperationOrProcessGroup"
    },
    "epValidationRunCommandPlacement": {
      "id": "epValidationRunCommand",
      "uiAnchor": "EpValidationMessage_uiAnchor",
      "priority": 100
    },
    "epValidationRunCommandPlacement1": {
      "id": "epValidationRunCommand",
      "uiAnchor": "EpValidationResultTable_uiAnchor",
      "priority": 50
    },
    "epValidationOpenValidationsPanelCommandPlacement": {
      "id": "epValidationOpenValidationsPanelCommand",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 10
    },
    "assemblyCreateGroupCommandDisplay": {
      "id": "assemblyCreateGroupCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 2
    },
    "assemblyProcessCreateOperationCommandDisplay": {
      "id": "epCreateOperation",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 1
    },
    "assemblyProcessCreateProcessResourceCommandDisplay": {
      "id": "epCreateProcessResource",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 3
    },
    "assemblyProcessCreateProcessCommandDisplay": {
      "id": "epCreateProcess",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 4
    },
    "assemblyProcessCreateProcessAreaCommandDisplay": {
      "id": "epCreateProcessArea",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 3
    },
    "assemblyCmdCutCommandDisplay": {
      "id": "epCmdCut",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 3
    },
    "assemblyCmdPasteGroupDisplay": {
      "id": "epCmdPasteGroup",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 4
    },
    "assemblyCmdPasteIntoDisplay": {
      "id": "epCmdPasteInto",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 2,
      "parentGroupId": "epCmdPasteGroup"
    },
    "assemblyCmdPasteBeforeDisplay": {
      "id": "epCmdPasteBefore",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 3,
      "parentGroupId": "epCmdPasteGroup"
    },
    "assemblyCmdPasteAfterDisplay": {
      "id": "epCmdPasteAfter",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 4,
      "parentGroupId": "epCmdPasteGroup"
    },
    "epCloneOperationOrProcessGroupCommandDisplay": {
      "id": "epCloneOperationOrProcessGroup",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 5
    },
    "assemblyCmdCopyCommandDisplay": {
      "id": "Awp0Copy",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 6
    },
    "assemblyProcessDeleteCommandDisplay": {
      "id": "epCmdMultipleDelete",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 7
    },
    "assemblyCmdSetEffectivityDisplay": {
      "id": "setEffectivityStepCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 8
    },
    "assemblyCmdValidateOccEffectivityDisplay": {
      "id": "WIValidateOccEffectivityCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 9
    },
    "assemblyCmdOpenInEwiDisplay": {
      "id": "wiCmdOpenInEwi",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 10
    },
    "assemblyProcessSubmitToWorkflowCommandDisplay": {
      "id": "submitToWorkflowCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 11
    },
    "assemblyAssignWorkAreaToToBopLineCommandDisplay": {
      "id": "epAssignWorkAreaToBopLine",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 12
    },
    "openAssemblyPlanningPlacement": {
      "id": "openAssemblyPlanningTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 30
    },
    "assemblyCmdPackUnpackDisplay": {
      "id": "epCmdPackOrUnpack",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 1
    },
    "assemblyCmdUnpackAllDisplay": {
      "id": "epCmdUnpackAll",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 13
    },
    "assemblyCmdPackAllDisplay": {
      "id": "epCmdPackAll",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 14
    },
    "assemblyProcessRegenerateFindNumberDisplay": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 1
    },
    "openAssemblyPlanningTaskPlacementForManagePage": {
      "id": "openAssemblyPlanningTaskCommandForManagePage",
      "uiAnchor": "epTasksForManagePage_uiAnchor",
      "priority": 4
    },
    "assemblyShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 0
    },
    "assemblyHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 0
    },
    "assemblyProcessShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 0
    },
    "assemblyProcessHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 0
    },
    "assemblyManageConsumptionCommandDisplay": {
      "id": "epManageConsumptionCommand",
      "uiAnchor": "EpAssemblyTree_uiAnchor",
      "priority": 0
    },
    "epProcessPlanningHoverMenuOnProcessCommandPlacement": {
      "id": "epNavigationHoverMenuCommand",
      "uiAnchor": "apProcessTree_OnHoverCommand",
      "priority": 0
    },
    "assemblyCreateCompoundOperationCommandPlacement": {
      "id": "epCreateCompoundOperation",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 5
    },
    "assemblyCreateExecutionstepCommandPlacement": {
      "id": "epCreateExecutionStep",
      "parentGroupId": "assemblyCreateGroupCommand",
      "priority": 6
    },
    "assemblyProcessExportRoundTripCommandDisplay": {
      "id": "Arm0ExportImport",
      "uiAnchor": "ApProcessTree_uiAnchor",
      "priority": 0
    },
    "epPlanningUpdateFlowsInPRIViewCommandDisplay": {
      "id": "updateFlowsCommand",
      "uiAnchor": "EpPlanningOperationsSequence_uiAnchor",
      "priority": 1006
    },
    "epPlanningEpRegenerateFindNumberCommandForPRIView": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "EpPlanningOperationsSequence_uiAnchor",
      "priority": 1007
    },
    "epPlanningDeletePriFlowCommandPlacement": {
      "id": "deletePriFlow",
      "uiAnchor": "EpPlanningOperationsSequence_uiAnchor",
      "priority": 1005
    },
    "epAssignWorkAreaToScopeCommandDisplay": {
      "id": "epAssignWorkAreaToScope",
      "uiAnchor": "AssemblyPlanningBoeTree_uiAnchor",
      "priority": 1
    },
    "epRemoveWorkareaFromScopeCommandDisplay": {
      "id": "epRemoveWorkareaFromScope",
      "uiAnchor": "AssemblyPlanningBoeTree_uiAnchor",
      "priority": 1
    },
    "wiUnassignPartCommandDisplay": {
      "id": "epUnassignPart",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 3
    },
    "wiSetOccurrenceTypeCommandDisplay": {
      "id": "EpSetOccurrenceType",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 3
    },
    "wiUnassignResourceCommandDisplay": {
      "id": "epUnassignResource",
      "uiAnchor": "WiResourcesTable_uiAnchor",
      "priority": 3
    },
    "epCmdCopyCommandDisplay": {
      "id": "Awp0Copy",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 1
    },
    "wiCmdCutCommandDisplay": {
      "id": "epCmdCut",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 1
    },
    "wiCmdPasteIntoDisplay": {
      "id": "epCmdPasteInto",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 3,
      "parentGroupId": "epCmdPasteGroup"
    },
    "wiCmdPasteGroupDisplay": {
      "id": "epCmdPasteGroup",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 3
    },
    "wiCmdPasteBeforeDisplay": {
      "id": "epCmdPasteBefore",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 3,
      "parentGroupId": "epCmdPasteGroup"
    },
    "wiCmdPasteAfterDisplay": {
      "id": "epCmdPasteAfter",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 4,
      "parentGroupId": "epCmdPasteGroup"
    },
    "openWorkInstructionsPlacement": {
      "id": "openWorkInstructionsTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 60
    },
    "openWorkInstructionsTaskPlacementForManagePage": {
      "id": "openWorkInstructionsTaskCommandForManagePage",
      "uiAnchor": "epTasksForManagePage_uiAnchor",
      "priority": 5
    },
    "wiCmdSubmitToWorkflowDisplay": {
      "id": "submitToWorkflowCommand",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 1
    },
    "wiCmdOpenInEwiDisplay": {
      "id": "wiCmdOpenInEwi",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 2
    },
    "wiProcessRegenerateFindNumberCommandDisplay": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 1
    },
    "wiPartsShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 0
    },
    "wiPartsHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 0
    },
    "wiProcessShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 0
    },
    "wiProcessHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 0
    },
    "wiResourcesShowSelectedNodesCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "WiResourcesTable_uiAnchor",
      "priority": 0
    },
    "wiResourcesHideSelectedNodesCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "WiResourcesTable_uiAnchor",
      "priority": 0
    },
    "epWorkInstructionsAuthoringHoverMenuOnProcessCommandPlacement": {
      "id": "epNavigationHoverMenuCommand",
      "uiAnchor": "WiProcessTree_OnHoverCommand",
      "priority": 1
    },
    "wiAssignWorkAreaToSelectedObjCommandDisplay": {
      "id": "wiAssignWorkAreaToSelectedObj",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 5
    },
    "wiSetEffectivityCommandDisplay": {
      "id": "setEffectivityStepCommand",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": -2
    },
    "wiProcessExportRoundTripCommandDisplay": {
      "id": "Arm0ExportImport",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": 0
    },
    "epAssignToProcessResource": {
      "id": "epAssignToProcessResource",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 7
    },
    "epOpenTimeDistribution": {
      "id": "epOpenTimeDistribution",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 20
    },
    "epBalancingToggleProductBOP": {
      "id": "epBalancingToggleProductBOP",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 30
    },
    "openLineBalancingTaskPlacement": {
      "id": "openLineBalancingTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 40
    },
    "epBalancingCmdCutCommandDisplay": {
      "id": "epBalancingCutCommand",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 10
    },
    "epBalancingCmdCopyCommandDisplay": {
      "id": "epBalancingCopyCommand",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 20
    },
    "balancingCmdPasteGroupDisplay": {
      "id": "epBalancingPasteContextMenuCommand",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 30
    },
    "balancingDeleteCommandDisplay": {
      "id": "epBalancingMultipleDeleteCommand",
      "uiAnchor": "EpBalancingOperationsTable_uiAnchor",
      "priority": 40
    },
    "balancingMaximizeVerticallyCommandDisplay": {
      "id": "mfeMaximizeVerticallyCommand",
      "uiAnchor": "commandBalancingTabAnchor",
      "priority": 60
    },
    "balancingRestoreVerticallyCommandDisplay": {
      "id": "mfeRestoreVerticallyCommand",
      "uiAnchor": "commandBalancingTabAnchor",
      "priority": 60
    },
    "balancingStationTileGroupCommandsDisplay": {
      "id": "balancingStationTileGroupCommands",
      "uiAnchor": "LB_StationTile",
      "priority": 100,
      "cellDisplay": {
        "hover": false,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "openProcessPlanningTaskFromStationCommandDisplay": {
      "id": "openProcessPlanningTaskFromStationCommand",
      "priority": 50,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "openWorkInstructionsTaskFromStationCommandDisplay": {
      "id": "goToWorkInstructionsFromProcessStationCommand",
      "priority": 60,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "openOperationPlanningTaskFromStationCommandDisplay": {
      "id": "openOperationPlanningCommand",
      "priority": 60,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "addNewOperatorCommandDisplay": {
      "id": "epCreateOperatorInLB",
      "priority": 100,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "epBalancingDeleteOperatorCommandDisplay": {
      "id": "epBalancingCmdDeleteOperator",
      "priority": 200,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "epBalancingPrCapacityCommandDisplay": {
      "id": "epBalancingPrCapacityCommand",
      "priority": 300,
      "parentGroupId": "balancingStationTileGroupCommands"
    },
    "epBalancingUpdateFlowsInPRIViewCommandDisplay": {
      "id": "updateFlowsCommand",
      "uiAnchor": "EpBalancingOperationsSequence_uiAnchor",
      "priority": 1006
    },
    "epBalancingEpRegenerateFindNumberCommandForPRIView": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "EpBalancingOperationsSequence_uiAnchor",
      "priority": 1007
    },
    "epBalancingDeletePriFlowCommandPlacement": {
      "id": "deletePriFlow",
      "uiAnchor": "EpBalancingOperationsSequence_uiAnchor",
      "priority": 1005
    },
    "epBalancingTableHoverMenuCommandPlacement": {
      "id": "epNavigationHoverMenuCommand",
      "uiAnchor": "balancingOperations_onHoverUiAnchor",
      "priority": 0
    },
    "epOpenLineLayoutInNewTabDisplay": {
      "id": "epOpenLineLayoutInNewTab",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 30
    },
    "epShowPartPlanningActivitiesToggleCommandDisplay": {
      "id": "epShowPartPlanningActivitiesToggleCommand",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 0
    },
    "openNxTcXmlPlacementEasyPlan": {
      "id": "openInNxTcXmlEP",
      "priority": 2,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openNxHostedPlacementEasyPlan": {
      "id": "openInNxHostedCellCommand",
      "priority": 2,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "epCreateFolderCommandForPertDisplay": {
      "id": "epCreateFolder",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1001
    },
    "CreateProcessCommandDisplay": {
      "id": "epCreateProcessArea",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 1002
    },
    "CreateProcessCommandDisplayForProcessSequence": {
      "id": "epCreateProcessArea",
      "uiAnchor": "EpPert_uiAnchor",
      "priority": 1002
    },
    "AssignProjectCmdPlacement": {
      "id": "epAssignProject",
      "uiAnchor": "ep_projectSectionCommands",
      "priority": 100
    },
    "epRemoveScopeCommandDisplay": {
      "id": "epRemoveScope",
      "uiAnchor": "EpScoping_uiAnchor",
      "priority": 1
    },
    "openOperationPlanningCommandPlacement": {
      "id": "openOperationPlanningCommand",
      "priority": 10,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openOperationPlanningTaskSwitcherCommandPlacement": {
      "id": "openOperationPlanningTaskSwitcherCommand",
      "priority": 50,
      "parentGroupId": "openEpTasksCommand"
    },
    "epSelectProductVariantPopupCommandPlacement": {
      "id": "epSelectProductVariantPopupCommand",
      "uiAnchor": "EpOperationPlanningOperationsTable_uiAnchor",
      "priority": 1000
    },
    "pmiMoreCommandPlacement": {
      "id": "pmiMoreCommand",
      "uiAnchor": "pmiTable_tableRow_uiAnchor",
      "priority": 1
    },
    "pmiRemoveInspectionCommandDisplay": {
      "id": "pmiRemoveInspection",
      "uiAnchor": "WiAssignedPmiTable_uiAnchor",
      "priority": 1
    },
    "showSelectedAssignedPmisCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "WiAssignedPmiTable_uiAnchor",
      "priority": 1
    },
    "hideSelectedAssignedPmisCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "WiAssignedPmiTable_uiAnchor",
      "priority": 1
    },
    "showSelectedAssemblyPmisCommandDisplay": {
      "id": "epGraphicsShowSelectedNodesCommand",
      "uiAnchor": "WiAssemblyPmiTable_uiAnchor",
      "priority": 1
    },
    "hideSelectedAssemblyPmisCommandDisplay": {
      "id": "epGraphicsHideSelectedNodesCommand",
      "uiAnchor": "WiAssemblyPmiTable_uiAnchor",
      "priority": 1
    },
    "updatePmiCommandPlacement": {
      "id": "updatePmiCommand",
      "uiAnchor": "WiAssignedPmiTable_uiAnchor",
      "priority": 1
    },
    "syncCommandPlacement": {
      "id": "syncPlantToBOPCommand",
      "uiAnchor": "aw_workArea_right",
      "priority": 95
    },
    "syncBOPtoPlantCommandPlacement": {
      "id": "syncBOPtoPlantCommand",
      "priority": 3,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "WISaveInstructionsCommandDisplay": {
      "id": "WISaveInstructionsCommand",
      "uiAnchor": "WiEditor_uiAnchor",
      "priority": -1
    },
    "WIShowTipsCommandDisplay": {
      "id": "WIShowTipsCommand",
      "uiAnchor": "WiEditor_uiAnchor",
      "priority": -2
    },
    "showStepCommands": {
      "id": "stepGroupCommands",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "cellDisplay": {
        "position": "TOP_RIGHT",
        "hover": true
      }
    },
    "addNewStepCommandDisplay": {
      "id": "epCreateOperation",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "parentGroupId": "stepGroupCommands"
    },
    "epDeleteCommandDisplay": {
      "id": "epCmdDelete",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "parentGroupId": "stepGroupCommands"
    },
    "cloneOperationCommandDisplay": {
      "id": "cloneOperationCommand",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "parentGroupId": "stepGroupCommands"
    },
    "wiCreateExecutionstepCommandDisplay": {
      "id": "epCreateExecutionStep",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "parentGroupId": "stepGroupCommands"
    },
    "wiValidateOccEffectivityCommandDisplay": {
      "id": "WIValidateOccEffectivityCommand",
      "uiAnchor": "WiProcessTree_uiAnchor",
      "priority": -1
    },
    "validateEffectivityPopupCloseCommandPlacement": {
      "id": "WICloseValidateEffectivityPopupCommand",
      "uiAnchor": "closeValidateEffectivityPopupAnchor",
      "priority": 300
    },
    "setEffectivityStepCommandDisplay": {
      "id": "setEffectivityStepCommand",
      "uiAnchor": "WI_StepHeader",
      "priority": -1,
      "parentGroupId": "stepGroupCommands"
    },
    "removeEffectivityCommandPlacement": {
      "id": "removeEffectivityCommand",
      "uiAnchor": "setEffectivity",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "addEffectivityCommandPlacement": {
      "id": "addEffectivityCommand",
      "uiAnchor": "addEffectivity",
      "priority": 1
    },
    "editEffectivityCommandPlacement": {
      "id": "editEffectivityCommand",
      "uiAnchor": "setEffectivity",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "epSetPartsEffectivityCommandDisplay": {
      "id": "epSetPartsEffectivityCommand",
      "uiAnchor": "WiPartsTable_uiAnchor",
      "priority": 7
    },
    "epSetProductViewEffectivityCommandDisplay": {
      "id": "epSetProductViewEffectivityCommand",
      "uiAnchor": "EpVisualsGallery_uiAnchor",
      "priority": 100
    },
    "highLevelPlanningCloneProcessWithSelectedAssemblyPlacement": {
      "id": "highLevelPlanningCloneProcessWithSelectedAssembly",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 5,
      "parentGroupId": "highLevelPlanningCloneProcessGroupCmd"
    },
    "highLevelPlanningCloneProcessWithSameAssemblyPlacement": {
      "id": "highLevelPlanningCloneProcessWithSameAssembly",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 4,
      "parentGroupId": "highLevelPlanningCloneProcessGroupCmd"
    },
    "highLevelPlanningCloneProcessGroupCmdPlacement": {
      "id": "highLevelPlanningCloneProcessGroupCmd",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 2
    },
    "highLevelPlanningPasteIntoCommandDisplay": {
      "id": "highLevelPlanningCmdPasteIntoContainer",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningCmdPasteGroup"
    },
    "highLevelPlanningPasteBeforeDisplay": {
      "id": "highLevelPlanningCmdPasteBefore",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningCmdPasteGroup"
    },
    "highLevelPlanningPasteAfterDisplay": {
      "id": "highLevelPlanningCmdPasteAfter",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningCmdPasteGroup"
    },
    "highLevelPlanningCutCommandDisplay": {
      "id": "highLevelPlanningCmdCutProcess",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 6
    },
    "highLevelPlanningPasteGroupDisplay": {
      "id": "highLevelPlanningCmdPasteGroup",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 7
    },
    "highLevelPlanningProcessAreaCutCommandDisplay": {
      "id": "highLevelPlanningProcessAreaCmdCutProcess",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 6
    },
    "highLevelPlanningProcessAreaPasteGroupDisplay": {
      "id": "highLevelPlanningProcessAreaCmdPasteGroup",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 7
    },
    "highLevelPlanningProcessAreaPasteBeforeDisplay": {
      "id": "highLevelPlanningProcessAreaCmdPasteBefore",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningProcessAreaCmdPasteGroup"
    },
    "highLevelPlanningProcessAreaPasteIntoCommandDisplay": {
      "id": "highLevelPlanningProcessAreaCmdPasteIntoContainer",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningProcessAreaCmdPasteGroup"
    },
    "highLevelPlanningProcessAreaPasteAfterDisplay": {
      "id": "highLevelPlanningProcessAreaCmdPasteAfter",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 9,
      "parentGroupId": "highLevelPlanningProcessAreaCmdPasteGroup"
    },
    "highLevelPlanningDeleteCommandDisplay": {
      "id": "highLevelPlanningCmdDeleteProcess",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 8
    },
    "createProcessCommandDisplay": {
      "id": "epCreateFolder",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 2
    },
    "HighLevelPlanningSubmitToWorkflowCommandDisplay": {
      "id": "submitToWorkflowCommand",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 1
    },
    "openHighLevelPlanningTaskPlacement": {
      "id": "openHighLevelPlanningTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 20
    },
    "openHighLevelPlanningTaskPlacementForManagePage": {
      "id": "openHighLevelPlanningTaskSwitcherCommandForManagePage",
      "uiAnchor": "epTasksForManagePage_uiAnchor",
      "priority": 5
    },
    "epHighLevelPlanningHoverMenuOnAssemblyCommandPlacement": {
      "id": "epNavigationHoverMenuWithAssociatedProcessCheckCommand",
      "uiAnchor": "assemblyTree_onHoverCommand",
      "priority": 1
    },
    "epHighLevelPlanningHoverMenuOnProcessCommandPlacement": {
      "id": "epNavigationHoverMenuCommand",
      "uiAnchor": "processTree_OnHoverCommand",
      "priority": 1,
      "cellDisplay": {
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "epProcessRegenerateFindNumberCommandDisplay": {
      "id": "epProcessRegenerateFindNumber",
      "uiAnchor": "EpHighLevelPlanningProcessTree_uiAnchor",
      "priority": 1
    },
    "openAssemblyPlanningTaskCommandPlacement": {
      "id": "goToProcessPlanningFromProcessCommand",
      "priority": 6,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openAssemblyPlanningWithAssociatedProcessCheckCommandPlacement": {
      "id": "openAssemblyPlanningWithAssociatedProcessCheckCommand",
      "priority": 6,
      "parentGroupId": "epNavigationHoverMenuWithAssociatedProcessCheckCommand"
    },
    "openWorkInstructionsCommandPlacement": {
      "id": "goToWorkInstructionsFromProcessCommand",
      "priority": 9,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openWorkInstructionsWithAssociatedProcessCheckCommandPlacement": {
      "id": "openWorkInstructionsWithAssociatedProcessCheckCommand",
      "priority": 9,
      "parentGroupId": "epNavigationHoverMenuWithAssociatedProcessCheckCommand"
    },
    "openProcessPlanningTaskFromHighLevelPlanningProcessTreePlacement": {
      "id": "openProcessPlanningTaskFromHighLevelPlanningProcessTree",
      "priority": 6,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openWorkInstructionsForProcessStationCommandPlacement": {
      "id": "goToWorkInstructionsFromProcessStationCommand",
      "priority": 9,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openTimeAnalysisTaskForOperationCommandPlacement": {
      "id": "openTimeAnalysisTaskForOperationCommand",
      "priority": 10,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openLineBalancingTaskFromGoToPlacement": {
      "id": "openLineBalancingTaskFromGoToCommand",
      "priority": 7,
      "parentGroupId": "epNavigationHoverMenuCommand"
    },
    "openBackgroundPartsTaskPlacement": {
      "id": "openBackgroundPartsTaskSwitcherCommand",
      "parentGroupId": "openEpTasksCommand",
      "uiAnchor": "epTasks_uiAnchor",
      "priority": 90
    },
    "assignBackgroundPartsCommandPlacement": {
      "id": "assignBackgroundPartsCommand",
      "uiAnchor": "EpBackgroundPartsEbomTree_uiAnchor",
      "priority": 1
    },
    "removeBackgroundPartsCommandPlacement": {
      "id": "removeBackgroundPartsCommand",
      "uiAnchor": "EpBackgroundPartsTable_uiAnchor",
      "priority": 1
    },
    "showMatchingEBOMLineCommandPlacement": {
      "id": "showMatchingEBOMLineCommand",
      "uiAnchor": "backgroundParts_onHoverUiAnchor",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT"
      }
    },
    "EpAddEBOMFromWorkpackageCommand": {
      "id": "epAddStructureToWorkpackageTileCommand",
      "uiAnchor": "EpEBOM_tileAnchor",
      "priority": 100
    },
    "EpRemoveEBOMFromWorkpackageCommand": {
      "id": "removeEBOMFromWorkpackageCommand",
      "uiAnchor": "EpEBOMTile_uiAnchor",
      "priority": 100
    },
    "epAddMBOMToWorkpackageCommand": {
      "id": "epGroupAddToWorkpackage",
      "uiAnchor": "EpMBOM_tileAnchor",
      "priority": 100
    },
    "EpRemoveMBOMFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpMBOMTile_uiAnchor",
      "priority": 100
    },
    "epAddBOPToWorkpackageCommand": {
      "id": "epGroupAddToWorkpackage",
      "uiAnchor": "EpBOP_tileAnchor",
      "priority": 100
    },
    "EpRemoveBOPFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpBOPTile_uiAnchor",
      "priority": 100
    },
    "epAddPlantToWorkpackageCommand": {
      "id": "epGroupAddToWorkpackage",
      "uiAnchor": "EpPlant_tileAnchor",
      "priority": 100
    },
    "EpRemovePlantFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpPlantTile_uiAnchor",
      "priority": 100
    },
    "epGeneratePlantFromPlantBOPCommand": {
      "id": "epGeneratePlantFromPlantBOPCommand",
      "uiAnchor": "EpPlant_tileAnchor",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 301
    },
    "epAddAssociatedPlantCommand": {
      "id": "epAddAssociatedPlantCommand",
      "uiAnchor": "EpPlant_tileAnchor",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 302
    },
    "EpRemovePlantBOPFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpPlantBOPTile_uiAnchor",
      "priority": 100
    },
    "epAddPlantBOPToWorkpackageCommand": {
      "id": "epGroupAddToWorkpackage",
      "uiAnchor": "EpPlantBOP_tileAnchor",
      "priority": 100
    },
    "epGeneratePlantBOPFromPlantCommand": {
      "id": "epGeneratePlantBOPFromPlantCommand",
      "uiAnchor": "EpPlantBOP_tileAnchor",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 301
    },
    "epAddAssociatedPlantBOPCommand": {
      "id": "epAddAssociatedPlantBOPCommand",
      "uiAnchor": "EpPlantBOP_tileAnchor",
      "parentGroupId": "epGroupAddToWorkpackage",
      "priority": 302
    },
    "EpRemoveProductBOPFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpProductBOPTile_uiAnchor",
      "priority": 100
    },
    "epAddProductBOPToWorkpackageCommand": {
      "id": "epGroupAddToWorkpackage",
      "uiAnchor": "EpProductBOP_tileAnchor",
      "priority": 100
    },
    "EpRemoveProductFromWorkpackageCommand": {
      "id": "removeStructureFromWorkpackageCommand",
      "uiAnchor": "EpProductTile_uiAnchor",
      "priority": 100
    },
    "epAddProductToWorkpackageCommand": {
      "id": "epAddStructureToWorkpackageTileCommand",
      "uiAnchor": "EpProduct_tileAnchor",
      "priority": 100
    },
    "epConfigurationFilterCommandDisplay": {
      "id": "epConfigurationFilter",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 200
    },
    "epResetAllConfigurationCommandDisplay": {
      "id": "epResetAllConfiguration",
      "parentGroupId": "epConfigurationFilter",
      "priority": 60
    },
    "epProductBopConfigurationFilterCommandDisplay": {
      "id": "epProductBopConfigurationFilter",
      "parentGroupId": "epConfigurationFilter",
      "priority": 50
    },
    "epPlantConfigurationFilterCommandDisplay": {
      "id": "epPlantConfigurationFilter",
      "parentGroupId": "epConfigurationFilter",
      "priority": 40
    },
    "epProcessConfigurationFilterCommandDisplay": {
      "id": "epProcessConfigurationFilter",
      "parentGroupId": "epConfigurationFilter",
      "priority": 30
    },
    "epMbomConfigurationFilterCommandDisplay": {
      "id": "epMbomConfigurationFilter",
      "parentGroupId": "epConfigurationFilter",
      "priority": 20
    },
    "epEbomConfigurationFilterCommandDisplay": {
      "id": "epEbomConfigurationFilter",
      "parentGroupId": "epConfigurationFilter",
      "priority": 10
    },
    "viewOtherConfigurationCommandDisplay": {
      "id": "viewOtherConfigurationCommand",
      "uiAnchor": "ep_commandBarRightSlot",
      "priority": 201
    },
    "epConfigContextGroupCommandPlacement": {
      "id": "epConfigContextGroupCommand",
      "uiAnchor": "EpConfiguratorContextTile_uiAnchor",
      "priority": 1
    },
    "epSetConfigContextToWorkpackageCommandPlacement": {
      "id": "epSetConfigContextToWorkpackageCommand",
      "priority": 1,
      "parentGroupId": "epConfigContextGroupCommand"
    },
    "epRemoveConfigContextFromWorkpackageCommandPlacement": {
      "id": "epRemoveConfigContextFromWorkpackageCommand",
      "priority": 2,
      "parentGroupId": "epConfigContextGroupCommand"
    },
    "epOpenConfigContextFromWorkpackageCommandPlacement": {
      "id": "epOpenConfigContextFromWorkpackageCommand",
      "priority": 3,
      "parentGroupId": "epConfigContextGroupCommand"
    },
    "epProductionProgramGroupCommandPlacement": {
      "id": "epProductionProgramGroupCommand",
      "uiAnchor": "EpProductionProgramTile_uiAnchor",
      "priority": 1
    },
    "epCreateProductionProgramFromWorkpackageCommandPlacement": {
      "id": "epCreateProductionProgramFromWorkpackageCommand",
      "priority": 1,
      "parentGroupId": "epProductionProgramGroupCommand"
    },
    "epUseExistingProductionProgramFromWorkpackageCommandPlacement": {
      "id": "epUseExistingProductionProgramFromWorkpackageCommand",
      "priority": 2,
      "parentGroupId": "epProductionProgramGroupCommand"
    },
    "epEditProductionProgramFromWorkpackageCommandPlacement": {
      "id": "epEditProductionProgramFromWorkpackageCommand",
      "priority": 3,
      "parentGroupId": "epProductionProgramGroupCommand"
    },
    "epRemoveProductionProgramFromWorkpackageCommandPlacement": {
      "id": "epRemoveProductionProgramFromWorkpackageCommand",
      "priority": 4,
      "parentGroupId": "epProductionProgramGroupCommand"
    },
    "epRemoveProductVariantFromProductionProgramCommandPlacement": {
      "id": "epRemoveProductVariantFromProductionProgramCommand",
      "uiAnchor": "EpProductVariants_uiAnchor",
      "priority": 1
    },
    "createDynamicInProcessAssemblyCommandPlacement": {
      "id": "createDynamicInProcessAssemblyCommand",
      "uiAnchor": "EpDynamicInProcessAssemblyTree_uiAnchor",
      "priority": 1
    },
    "updateDynamicInProcessAssemblyCommandPlacement": {
      "id": "updateDynamicInProcessAssemblyCommand",
      "uiAnchor": "EpDynamicInProcessAssemblyTree_uiAnchor",
      "priority": 2
    },
    "EpAddIntegratedBOMFromWorkpackageCommand": {
      "id": "epAddStructureToWorkpackageTileCommand",
      "uiAnchor": "EpIntegratedBOM_tileAnchor",
      "priority": 100
    },
    "EpremoveIntegratedFromWorkpackageCommand": {
      "id": "removeIntegratedFromWorkpackageCommand",
      "uiAnchor": "EpIntegratedBOMTile_uiAnchor",
      "priority": 100
    }
  },
  "actions": {
    "epShowActivitiesToggleCommandAction": {
      "actionType": "JSFunction",
      "method": "toggleActivitiesTable",
      "inputData": {
        "activityType": "time"
      },
      "deps": "js/epActivitiesService"
    },
    "epAddActivityByCodeAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAddActivityFromDataCard",
          "caption": "{{i18n.searchActivity}}",
          "height": "560",
          "width": "770",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "inputObject": "{{commandContext.inputObject}}",
            "selectedObjects": "{{commandContext.selectedObjects}}"
          }
        }
      }
    },
    "epAddActivityFromDataCardAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpDataCardPopup",
          "caption": "{{i18n.createActivityFromDataCard}}",
          "height": "600",
          "width": "900",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "inputObject": "{{commandContext.inputObject}}",
            "selectedObjects": "{{commandContext.selectedObjects}}"
          }
        }
      }
    },
    "epActivitiesDeleteAction": {
      "actionType": "JSFunction",
      "method": "deleteActivities",
      "inputData": {
        "objectsToDelete": "{{commandContext.selectedObjects}}",
        "connectToObject": "{{commandContext.inputObject}}"
      },
      "deps": "js/epActivitiesService"
    },
    "epCreateClassicActivityCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "createClassicActivity",
      "inputData": {
        "inputObject": "{{commandContext.inputObject}}"
      },
      "deps": "js/epActivitiesService"
    },
    "pinCCObjectAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2018-05-DataManagement",
      "method": "pinObjects",
      "inputData": {
        "input": [
          {
            "uid": "{{ctx.selected.uid}}",
            "actionParams": "?uid={{ctx.selected.uid}}",
            "templateId": "Mbc0PinnedObjectTemplate"
          }
        ]
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": [
                "{{data.pinInput[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "pinFailure"
          }
        ]
      }
    },
    "tools_info_OpenInEasyPlanAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      }
    },
    "openInNewWindowInEasyPlanAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newWindow"
    },
    "openInNewTabInEasyPlanAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newTab"
    },
    "openManageWorkPackagePage": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      }
    },
    "openInEPWithMCNAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{commandContext.vmo.props.object_type.intermediateObjectUids[0]}}"
      }
    },
    "tools_info_OpenInEasyPlanWithMCNAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      }
    },
    "openInNewWindowInEasyPlanWithMCNAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newWindow"
    },
    "openInNewTabInEasyPlanWithMCNAction": {
      "actionType": "Navigate",
      "navigateTo": "manageWorkPackageNew",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newTab"
    },
    "openAuthorBOETaskPageAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openAuthorBOETaskPage"
        }
      ]
    },
    "openAuthorBOETaskPage": {
      "actionType": "JSFunction",
      "method": "navigateToAuthorBOETask",
      "inputData": {
        "objectToNavigate": "{{ctx.epTaskPageContext.rootPlant}}"
      },
      "deps": "js/epNavigationService"
    },
    "addElementsAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateParentContext"
        },
        {
          "action": "addElements"
        }
      ]
    },
    "updateParentContext": {
      "actionType": "JSFunction",
      "method": "updateParentElementOnCtx",
      "deps": "js/epAuthorPlantService"
    },
    "addElements": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "addObject2",
      "inputData": {
        "input": {
          "objectsToBeAdded": "{{ctx.resourceContext.selectedNodes}}",
          "parentElement": "{{ctx.occmgmtContext.selectedModelObjects[0]}}",
          "siblingElement": "{{ctx.occmgmtContext.addElement.siblingElement}}",
          "inputCtxt": {
            "productContext": "{{ctx.occmgmtContext.productContextInfo}}"
          },
          "sortCriteria": {
            "propertyName": "{{ctx.occmgmtContext.sortCriteria[0].fieldName}}",
            "sortingOrder": "{{ctx.occmgmtContext.sortCriteria[0].sortDirection}}"
          },
          "addObjectIntent": "{{ctx.occmgmtContext.addElement.addObjectIntent}}",
          "fetchPagedOccurrences": "{{ctx.occmgmtContext.addElement.fetchPagedOccurrences}}",
          "requestPref": {
            "displayMode": [
              "{{function:getDisplayMode}}"
            ]
          },
          "numberOfElements": 1
        }
      },
      "outputData": {
        "addElementResponse": "{{function:getAddElementResponse}}",
        "totalObjectsAdded": "{{function:getTotalNumberOfChildrenAdded}}"
      },
      "events": {
        "success": [
          {
            "name": "mfeLargePopup.closeRequest"
          },
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}"
            }
          },
          {
            "name": "aceElementsSelectionUpdatedEvent",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}"
            }
          },
          {
            "name": "aceElementsSelectionUpdatedEvent",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}"
            }
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "closePopupWindow": {
      "actionType": "JSFunction",
      "method": "close",
      "inputData": {
        "popupId": "{{data.popupId}}"
      },
      "events": {
        "success": [
          {
            "name": "addElement.updateSelectionInPWA",
            "eventData": {
              "objectToSelect": "{{ctx.occmgmtContext.selectedModelObjects[0].uid}}"
            }
          }
        ]
      },
      "deps": "js/declpopupService"
    },
    "openUpdateRevisionPopupBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "mfeGetColumnNamesToDisplay",
          "outputArg": [
            "columnsToDisplay"
          ]
        },
        {
          "action": "epUpdateRevisionRegisterPolicy",
          "inputArg": {
            "columnsToDisplay": "{{actionData.columnsToDisplay}}"
          }
        },
        {
          "action": "loadEBOMRevisions"
        },
        {
          "action": "mfeClosePopupAction",
          "condition": "!conditions.isEBOMRevisionAvailable"
        },
        {
          "action": "updatePopupTitle",
          "condition": "conditions.isEBOMRevisionAvailable"
        },
        {
          "action": "updateDataHeaderinPopup",
          "condition": "conditions.isEBOMRevisionAvailable"
        },
        {
          "action": "openUpdateRevisionPopup",
          "condition": "conditions.isEBOMRevisionAvailable"
        }
      ]
    },
    "epUpdateRevisionRegisterPolicy": {
      "actionType": "JSFunction",
      "method": "register",
      "parameters": {
        "columnsToDisplay": "{{actionData.columnsToDisplay}}"
      },
      "inputData": {
        "name": "availableRevisionTable",
        "policyObjects": {
          "types": [
            {
              "name": "ItemRevision",
              "properties": "{{parameters.columnsToDisplay}}"
            }
          ]
        }
      },
      "deps": "js/mfePolicyService"
    },
    "mfeGetColumnNamesToDisplay": {
      "actionType": "JSFunctionAsync",
      "method": "mfeGetColumnNamesToDisplay",
      "inputData": {
        "columnConfigPreferenceName": "MBMUpdateEBOMRevisionPopupColumnConfiguration",
        "defaultColumns": [
          "ItemRevision.object_string"
        ]
      },
      "outputData": {
        "columnsToDisplay": ""
      },
      "deps": "js/mfeColumnService"
    },
    "mfeClosePopupAction": {
      "actionType": "JSFunction",
      "method": "hide",
      "deps": "js/popupService"
    },
    "loadEBOMRevisions": {
      "actionType": "JSFunctionAsync",
      "method": "loadEBOMRevisions",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.ebomStructure}}"
      },
      "outputData": {
        "ebomRevisions": ""
      },
      "actionMessages": {
        "success": [
          {
            "message": "noEbomNotification",
            "condition": "!conditions.isEBOMRevisionAvailable"
          }
        ]
      },
      "deps": "js/epAddObjectService"
    },
    "updatePopupTitle": {
      "actionType": "JSFunction",
      "method": "loadTitleofUpdatePopup",
      "inputData": {
        "contextObject": "EBOM"
      },
      "outputData": {
        "popupTitle": ""
      },
      "deps": "js/manageWorkPackageService"
    },
    "updateDataHeaderinPopup": {
      "actionType": "JSFunction",
      "method": "loadDataHeaderinPopup",
      "inputData": {
        "contextObject": "EBOM"
      },
      "outputData": {
        "availableRevisionTableTitle": ""
      },
      "deps": "js/manageWorkPackageService"
    },
    "openUpdateRevisionPopup": {
      "actionType": "JSFunctionAsync",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpUpdateRevisionPopup",
          "caption": "{{data.popupTitle}}",
          "height": "350",
          "width": "680",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "resizable": true,
          "subPanelContext": {
            "availableRevisionTableTitle": "{{data.availableRevisionTableTitle}}",
            "columnConfigPreferenceName": "MBMUpdateEBOMRevisionPopupColumnConfiguration",
            "defaultColumns": [
              "ItemRevision.object_string"
            ],
            "ebomRevisions": "{{data.ebomRevisions}}"
          }
        }
      },
      "outputData": {
        "popupObj": ""
      },
      "deps": "js/popupService"
    },
    "generateStructureCmdActionPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpGenerateStructure",
          "caption": "{{i18n.autoGenerateStructureCmdTitle}}",
          "height": "250",
          "width": "400",
          "draggable": true,
          "independent": true,
          "preset": "modal"
        }
      }
    },
    "OpenCreateWorkPackagePopup": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "initiateWorkPackagePopup"
        },
        {
          "action": "OpenCreateWorkPackage"
        }
      ]
    },
    "initiateWorkPackagePopup": {
      "actionType": "JSFunction",
      "method": "initiateWorkPackagePopup",
      "inputData": {},
      "deps": "js/createWorkPackagePopupUtils"
    },
    "OpenCreateWorkPackage": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "preset": "modal",
          "caption": "{{i18n.createWorkPackageHeaderTitle}}",
          "height": "500",
          "width": "450",
          "independent": true,
          "subPanelContext": {
            "objectBaseType": "MECollaborationContext",
            "subTypeExclusionList": [],
            "hideCreateAndAddMoreButton": true
          }
        }
      },
      "outputData": {
        "popupId": ""
      }
    },
    "removeStructureFromWorkpackage": {
      "actionType": "JSFunctionAsync",
      "method": "removeObject",
      "inputData": {
        "selectedObject": "{{commandContext.selection}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "displayCreatePopup": {
      "actionType": "JSFunctionAsync",
      "method": "showCreateProductPopup",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "locals": {
            "caption": "{{commandContext.createProductLabelCaption}}"
          },
          "options": {
            "height": "500",
            "width": "450",
            "preset": "modal",
            "independent": true,
            "draggable": true
          },
          "subPanelContext": {
            "objectBaseType": "{{commandContext.objectBaseType}}",
            "subTypeExclusionList": [],
            "hideCreateAndAddMoreButton": true,
            "workPackage": "{{ctx.epPageContext.collaborationContext.uid}}",
            "preferenceName": "{{commandContext.preferenceName}}"
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/createAndAddProductToWPUtils"
    },
    "displayAddObjectPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAddObject",
          "caption": "{{commandContext.addProductLabelCaption}}",
          "height": "560",
          "width": "680",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "boTypeName": "{{commandContext.boTypeName}}",
            "exclusionBOTypeNames": "{{commandContext.exclusionBOTypeNames}}",
            "objectTypesToSearch": "{{commandContext.objectTypesToSearch}}",
            "preferenceSuffixForTypesToSearch": "{{commandContext.preferenceSuffixForTypesToSearch}}",
            "buttonName": "{{commandContext.buttonName}}",
            "placeHolderForSearch": "{{commandContext.placeHolderForSearch}}"
          }
        }
      }
    },
    "createMbomFromMirrorAction": {
      "actionType": "JSFunction",
      "method": "addMbomUsingMirror",
      "inputData": {
        "Object": {
          "cloneFrom": [
            "{{ctx.epTaskPageContext.EbomStructureContext.uid}}"
          ],
          "revisionRule": [
            "{{ctx.epTaskPageContext.EbomStructureContext.revisionRule}}"
          ],
          "createMirror": [
            "true"
          ]
        }
      },
      "deps": "js/epAddObjectService"
    },
    "openProductBOPTaskSwitcherCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "functionalPlan",
      "navigationParams": {
        "uid": "{{ctx.epTaskPageContext.functionalPlan.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openProductBOPTaskCommandForManagePageBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openProductBOPTaskCommandForManagePageAction"
        },
        {
          "action": "publishOpenAssociateCnWpPopupEvent",
          "condition": "data.workPackageInfo.associatedCnObjects.length > 0"
        },
        {
          "action": "openProductBOPTaskSwitcherCommandAction",
          "condition": "data.workPackageInfo.associatedCnObjects.length === 0"
        }
      ]
    },
    "openProductBOPTaskCommandForManagePageAction": {
      "actionType": "JSFunction",
      "method": "evaluateToOpenWorkpackage",
      "inputData": {
        "modelObject": "{{ctx.epTaskPageContext.collaborationContext}}"
      },
      "outputData": {
        "workPackageInfo": ""
      },
      "deps": "js/epNavigationService"
    },
    "publishOpenAssociateCnWpPopupEvent": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openAssociateCnWpPopupEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "associatedCnObjects": "{{data.workPackageInfo.associatedCnObjects}}",
              "navigationType": "_self",
              "navigateTo": "functionalPlan"
            }
          }
        ]
      }
    },
    "goBackToBalancingAction": {
      "actionType": "Navigate",
      "navigateTo": "lineBalancing",
      "navigationParams": {
        "uid": "{{ctx.ep.backToBalancing.uid}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}"
      }
    },
    "showClassificationPopupAction": {
      "actionType": "JSFunction",
      "method": "showLargePopup",
      "inputData": {
        "params": {
          "declView": "OperationClassificationPopUp",
          "subPanelContext": {
            "inputObject": "{{commandContext.commandArgs[0]}}"
          }
        }
      },
      "deps": "js/mfeLargePopupUtils"
    },
    "epProductBOPPasteOperationCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epProductBOPGetLastRowInOperationsTable"
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "epProductBOPPasteOperationAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "removeExistingCutIndication",
          "condition": "!conditions.isNoCutOperationPerformed"
        }
      ]
    },
    "epProductBOPGetLastRowInOperationsTable": {
      "actionType": "JSFunction",
      "method": "getLastRowInTable",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      },
      "outputData": {
        "lastRowInTable": ""
      },
      "deps": "js/mfeTableService"
    },
    "epProductBOPPasteOperationAction": {
      "actionType": "JSFunction",
      "method": "pasteAfter",
      "inputData": {
        "selectedVmo": "{{data.lastRowInTable}}",
        "newObjectID": "",
        "copiedObjects": "{{parameters.copiedObjects}}",
        "tableId": "{{commandContext.tableId}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "openAltCCInNewTab": {
      "actionType": "JSFunction",
      "method": "openAltInNewTab",
      "inputData": {
        "uid": "{{commandContext.vmo.uid}}"
      },
      "deps": "js/searchPartialAlternativeService"
    },
    "createAlternativeCommandAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "Alternative",
          "height": "439",
          "width": "410",
          "draggable": true,
          "preset": "modal",
          "caption": "{{ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0] ? i18n.cloneAlternativeTitle : i18n.createAlternativeTitle}}",
          "subPanelContext": {
            "workflowCandidates": "{{ctx.ep.scopeObject}}"
          }
        }
      }
    },
    "createPartialAlternativeCommandAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "Alternative",
          "height": "439",
          "width": "410",
          "draggable": true,
          "preset": "modal",
          "caption": "{{ctx.epTaskPageContext.collaborationContext.props.mbc0masterCC.dbValues[0] ? i18n.cloneAlternativeTitle : i18n.createPartialAlternativeTitle}}",
          "subPanelContext": {
            "workflowCandidates": "{{ctx.ep.scopeObject}}"
          }
        }
      }
    },
    "goToMasterCommandAction": {
      "actionType": "JSFunction",
      "method": "goToMaster",
      "deps": "js/mfeAlternativeService"
    },
    "searchPartialAlternativeCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getListOfAlternatives"
        },
        {
          "action": "showSearch",
          "condition": "conditions.isPartialAlternativeExist"
        }
      ]
    },
    "getListOfAlternatives": {
      "actionType": "JSFunction",
      "method": "searchPartialAlternative",
      "deps": "js/mfeAlternativeService"
    },
    "showSearch": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "SearchAlternatives",
          "height": "420",
          "width": "410",
          "draggable": true,
          "caption": "{{i18n.searchPartialAlternatives}}",
          "anchor": "closePopupAnchor",
          "preset": "modal",
          "hasCloseButton": true,
          "subPanelContext": {
            "workflowCandidates": "{{ctx.ep.scopeObject}}"
          }
        }
      }
    },
    "epCheckOutCommandAction": {
      "actionType": "JSFunction",
      "method": "checkInOut",
      "inputData": {
        "objToCheckOut": "{{ctx.epPageContext.loadedObject}}",
        "objectsToModifyEntry": {
          "Object": {
            "nameToValuesMap": {
              "id": [
                "{{ctx.epPageContext.loadedObject.uid}}"
              ]
            }
          },
          "CICO": {
            "nameToValuesMap": {
              "Type": [
                "CheckOut"
              ]
            }
          }
        }
      },
      "deps": "js/epCheckInOutService"
    },
    "epPopulateCheckInConfirmationMsgInput": {
      "actionType": "JSFunction",
      "method": "getParentOfCheckedOutObject",
      "inputData": {
        "checkedOutObjectUid": "{{ctx.epPageContext.loadedObject}}"
      },
      "outputData": {
        "checkedOutParent": ""
      },
      "deps": "js/epCheckInOutService",
      "actionMessages": {
        "success": [
          {
            "message": "epCheckInConfirmationMessage"
          }
        ]
      }
    },
    "epCheckInCommandAction": {
      "actionType": "JSFunction",
      "method": "checkInOut",
      "inputData": {
        "objToCheckOut": "{{ctx.epPageContext.loadedObject}}",
        "objectsToModifyEntry": {
          "Object": {
            "nameToValuesMap": {
              "id": [
                "{{ctx.epPageContext.loadedObject.uid}}"
              ]
            }
          },
          "CICO": {
            "nameToValuesMap": {
              "Type": [
                "CheckIn"
              ]
            }
          }
        }
      },
      "deps": "js/epCheckInOutService"
    },
    "createReportCommandAction": {
      "actionType": "popup",
      "method": "showCreateReportPopup",
      "inputData": {
        "options": {
          "height": "auto",
          "width": 300,
          "view": "CreateReport",
          "caption": "{{i18n.createReportPopupTitle}}"
        }
      },
      "deps": "js/epBvrReportsService"
    },
    "epOpenShowObjectAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.selection[0].uid}}"
      }
    },
    "epBOPLineStartEditSummary": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/epStartEditCommandService",
      "inputData": {
        "handleContext": "NONE",
        "object": "{{ctx.selected}}",
        "view": "{{ctx.ViewModeContext.ViewModeContext}}"
      }
    },
    "epUnassignPartBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epUnassignPartAction"
        },
        {
          "action": "updateChangeIndicationObjectPropertyCache",
          "condition": "ctx.epAssignmentIndication.isIndicationToggleOn === true && ctx.state.params.tracking_cn !== null && ctx.state.params.tracking_cn !== undefined"
        },
        {
          "action": "publishDetailsModelObjectsUpdatedEvent",
          "condition": "ctx.epAssignmentIndication.isIndicationToggleOn === true && ctx.state.params.tracking_cn !== null && ctx.state.params.tracking_cn !== undefined"
        }
      ]
    },
    "updateChangeIndicationObjectPropertyCache": {
      "actionType": "JSFunction",
      "method": "updateChangeIndicationObjectPropertyCache",
      "inputData": {
        "inputObjectUid": "{{commandContext.inputObject.uid}}",
        "impactClearedFor": "part"
      },
      "deps": "js/epChangeIndicationService"
    },
    "publishDetailsModelObjectsUpdatedEvent": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "epDetailsTableDataProvider.modelObjectsUpdated"
          }
        ]
      }
    },
    "epUnassignPartAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Remove",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}",
        "entryName": "AssignedParts",
        "relationType": "MEConsumed"
      },
      "deps": "js/epTableService"
    },
    "epUnassignResourceAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Remove",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}",
        "entryName": "AssignedTools"
      },
      "deps": "js/epTableService"
    },
    "epSetOccurrenceTypeAction": {
      "actionType": "JSFunction",
      "method": "openSetOccurrenceTypePopup",
      "inputData": {
        "selectedObjects": "{{commandContext.selection}}",
        "parentObject": "{{commandContext.inputObject}}"
      },
      "deps": "js/epSetOccurrenceTypeService"
    },
    "epRemoveWorkareaAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Remove",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}",
        "entryName": "AssignedTools",
        "relationType": "MEWorkArea"
      },
      "deps": "js/epTableService"
    },
    "epStartEditInformation": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/epStartEditCommandService",
      "inputData": {
        "handleContext": "{{commandContext.handleContext}}",
        "object": "{{commandContext.inputObject}}"
      }
    },
    "launchAttachFilePanelAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "EpAttachFilePanel",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext.selection}}"
      }
    },
    "downloadAttachment": {
      "actionType": "JSFunction",
      "method": "downloadAttachment",
      "inputData": {
        "files": "{{commandContext.selectedAttachment}}"
      },
      "deps": "js/epFileAttachmentService"
    },
    "deleteAttachment": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selectedAttachment[0].datasetRelation}}",
        "connectToObject": "{{commandContext.selection}}",
        "relatedDataset": "{{commandContext.selectedAttachment[0]}}"
      }
    },
    "epUnassignDocumentItemCommandAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.inputObject}}"
      }
    },
    "epPasteDocumentItemCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Add",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{ctx.awClipBoardProvider}}",
        "entryName": "AssignedParts"
      },
      "deps": "js/epTableService"
    },
    "epPasteResourceCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Add",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{ctx.awClipBoardProvider}}",
        "entryName": "AssignedTools",
        "relationType": "MEResource"
      },
      "deps": "js/epTableService"
    },
    "launchCreateWebLinkPopupAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAddWebLinkPopup",
          "caption": "{{i18n.createWebLink}}",
          "width": "400",
          "draggable": true,
          "preset": "modal",
          "clickOutsideToClose": false,
          "subPanelContext": {
            "scopeObject": "{{commandContext.inputObject}}"
          }
        }
      }
    },
    "epOpenDocumentAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.type === 'Web Link' ? commandContext.vmo.uid : commandContext.vmo.props.bl_revision.dbValue}}"
      },
      "navigateIn": "newTab"
    },
    "epRemoveScopeFlowAction": {
      "actionType": "JSFunction",
      "method": "removeScopeFlows",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.inputObject}}"
      },
      "deps": "js/epPertEditService"
    },
    "launchReplaceXCFilePopupWithReviseCheckAction": {
      "actionType": "JSFunctionAsync",
      "method": "launchReplaceXCFilePopupWithReviseCheck",
      "deps": "js/epAttachFilePanelService",
      "inputData": {
        "selectionContext": "{{commandContext}}"
      }
    },
    "epCallBrowseXceleratorAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "XcFileUpload.browseXceleratorShare",
            "eventData": {
              "datasetFileName": "{{commandContext.selectedAttachment[0]}}"
            }
          }
        ]
      }
    },
    "createDcdCommandAction": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "caption": "{{i18n.epCreateDCDTitle}}",
          "options": {
            "view": "EpCreateObject",
            "height": "500",
            "width": "450",
            "preset": "modal",
            "independent": true,
            "draggable": true
          },
          "subPanelContext": {
            "objectBaseType": "Mes0MEDCDBaseForm",
            "subTypeExclusionList": [],
            "scopeObject": "{{commandContext.inputObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "epRemoveDCDAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.inputObject}}"
      }
    },
    "pasteInspectionDefinitionPartsAction": {
      "actionType": "JSFunctionAsync",
      "method": "pasteAssignInspectionParts",
      "inputData": {
        "selectedVmo": "{{commandContext.inputObject}}",
        "newObjectID": "{{data.newObjectID}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "epPasteInspectionDefinitionPartsCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "generateObjectID"
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "pasteInspectionDefinitionPartsAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        }
      ]
    },
    "epRemoveInspectionDefinitionPartsCommandAction": {
      "actionType": "JSFunction",
      "method": "deleteObjectsAndRemovePropertyFromObjectPropertyCache",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.inputObject}}",
        "propertyKey": "InspectionDefinitions"
      },
      "deps": "js/epDeleteService"
    },
    "epAssignWorkAreaToInputObjectAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openAssignWorkareaPopupFromWorkAreaTable",
            "condition": "ctx.epPageContext.rootPlant"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "!ctx.epPageContext.rootPlant",
            "message": "noPlantStructureAvailableErrorMessage"
          }
        ]
      }
    },
    "openAssignWorkareaPopupFromWorkAreaTable": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpAssignWorkareaPopup",
          "locals": {
            "caption": "{{i18n.openWorkInstructionsCommandTitle}}"
          },
          "options": {
            "height": "500",
            "width": "700",
            "draggable": true
          },
          "subPanelContext": {
            "inputObject": "{{commandContext.inputObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "epCloseAttachFilePanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awsidenav.openClose",
            "eventData": {
              "id": "toolAndInfoPanel"
            }
          }
        ]
      }
    },
    "epClearImpactIndicationEvent": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "clearImpactIndicationConfirmation"
          }
        ]
      }
    },
    "epClearImpactIndicationAction": {
      "actionType": "JSFunctionAsync",
      "method": "clearImpactIndication",
      "inputData": {
        "inputObject": "{{commandContext.inputObject}}",
        "impactedObjects": "{{commandContext.selection}}",
        "impactClearedFor": "part"
      },
      "outputData": {
        "affectedUIds": ""
      },
      "deps": "js/epChangeIndicationService"
    },
    "epRestoreImpactIndicationEvent": {
      "actionType": "JSFunctionAsync",
      "method": "restoreImpactIndication",
      "inputData": {
        "impactedObjects": "{{commandContext.selection}}"
      },
      "outputData": {
        "affectedUIds": ""
      },
      "deps": "js/epChangeIndicationService"
    },
    "epCmdPackAllPartsTabAction": {
      "actionType": "JSFunction",
      "method": "packOrUnpackAll",
      "inputData": {
        "selectedObject": "{{commandContext.inputObject}}",
        "flag": "2"
      },
      "deps": "js/epPackUnpackService"
    },
    "epCmdUnpackAllPartsTabAction": {
      "actionType": "JSFunction",
      "method": "packOrUnpackAll",
      "inputData": {
        "selectedObject": "{{commandContext.inputObject}}",
        "flag": "3"
      },
      "deps": "js/epPackUnpackService"
    },
    "gotoPreviousPageAction": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "inputData": {
        "name": "showAddProjectSection",
        "value": false
      },
      "deps": "js/appCtxService"
    },
    "openProjectSection": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openProjectSectionUpdateAtomic"
        },
        {
          "action": "openProjectSectionUpdateCtx"
        }
      ]
    },
    "openProjectSectionUpdateAtomic": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AssignProjectSub"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "openProjectSectionUpdateCtx": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "inputData": {
        "name": "showAddProjectSection",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "createOperationCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "showCreateOperationPopup"
        }
      ]
    },
    "showCreateOperationPopup": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showCreateOperationPopupForVmo",
          "condition": "commandContext.vmo"
        },
        {
          "action": "showCreateOperationPopupForSelection",
          "condition": "!commandContext.vmo && ctx.sublocation.nameToken !== 'functionalPlan'"
        },
        {
          "action": "showCreateOperationPopupForSelection",
          "inputArg": {
            "preferenceName": "EP_CreateSubtypesForType_MEOP_InProductBop"
          },
          "condition": "!commandContext.vmo && ctx.sublocation.nameToken === 'functionalPlan'"
        }
      ]
    },
    "createOperationCommandActionForPERT": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createOperationCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "MEOP",
            "subTypeExclusionList": [],
            "scopeObject": "{{commandContext.contextObject}}",
            "selectedObject": "{{commandContext.contextObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "getOperationParent": {
      "actionType": "JSFunction",
      "method": "getOperationParent",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "scopeObjectForCreatePopup": "modelObject",
        "targetAssembly": "targetAssembly",
        "reloadType": "reloadType",
        "isResequenceNeeded": "isResequenceNeeded"
      },
      "deps": "js/epTableService"
    },
    "showCreateOperationPopupForVmo": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createOperationCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "MEOP",
            "subTypeExclusionList": [],
            "scopeObject": "{{data.scopeObjectForCreatePopup}}",
            "reloadType": "{{data.reloadType}}",
            "selectedObject": "{{commandContext.vmo}}",
            "isResequenceNeeded": "{{data.isResequenceNeeded}}",
            "hideCreateAndAddMoreButton": "{{commandContext.context.occContext.hideCreateAndAddMoreButton}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "showCreateOperationPopupForSelection": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createOperationCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "MEOP",
            "subTypeExclusionList": [],
            "scopeObject": "{{data.scopeObjectForCreatePopup}}",
            "reloadType": "{{data.reloadType}}",
            "selectedObject": "{{data.scopeObjectForCreatePopup}}",
            "isResequenceNeeded": "{{data.isResequenceNeeded}}",
            "preferenceName": "{{parameters.preferenceName}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "getTabKeyForCreateProcessAreaCommand": {
      "actionType": "JSFunction",
      "method": "getValueInViewModel",
      "inputData": {
        "value": "{{commandContext.tabKey}}"
      },
      "outputData": {
        "tabKey": ""
      },
      "deps": "js/mfeViewModelUtils"
    },
    "getcontextObjectForCreateProcessAreaCommand": {
      "actionType": "JSFunction",
      "method": "getValueInViewModel",
      "inputData": {
        "value": "{{commandContext.contextObject}}"
      },
      "outputData": {
        "contextObject": ""
      },
      "deps": "js/mfeViewModelUtils"
    },
    "createProcessAreaCommandActionForProcessTree": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createProcessAreaCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "Mfg0MEProcArea",
            "subTypeExclusionList": [
              "Mfg0ProcResource",
              "Mfg0MEPlantBOP"
            ],
            "scopeObject": "{{commandContext.selection[0]}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "{{ctx.sublocation.nameToken === 'highLevelPlanning' ? 'ExpandProcessHighLevelPlanning' : 'ExpandProcessDetailedPlanning'}}"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{commandContext.selection[0]}}"
              }
            }
          }
        }
      },
      "deps": "js/popupService"
    },
    "createProcessAreaCommandActionForProcessSequence": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createProcessAreaCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "Mfg0MEProcArea",
            "subTypeExclusionList": [
              "Mfg0ProcResource",
              "Mfg0MEPlantBOP"
            ],
            "scopeObject": "{{commandContext.contextObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "createProcessCommandActionForProcessSequence": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "locals": {
            "caption": "{{i18n.createProcessCmdTitle}}"
          },
          "options": {
            "height": "500",
            "width": "450"
          },
          "subPanelContext": {
            "objectBaseType": "MEProcess",
            "subTypeExclusionList": [
              "Mfg0ProcResource",
              "Mfg0MEPlantBOP"
            ],
            "scopeObject": "{{commandContext.contextObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "createProcessResourceCommandAction": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createProcessResourceCmdTitle}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "Mfg0ProcResource",
            "scopeObject": "{{commandContext.selection[0]}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "ExpandProcessDetailedPlanning"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{commandContext.selection[0]}}"
              }
            }
          }
        }
      },
      "deps": "js/popupService"
    },
    "createProcessFolderCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "checkTargetAssembly"
        },
        {
          "action": "showCreateProcessPopup",
          "inputArg": {
            "preferenceName": "EP_CreateSubtypesForType_BOPFolder"
          },
          "condition": "data.targetAssembly.length < 1"
        }
      ]
    },
    "checkTargetAssembly": {
      "actionType": "JSFunctionAsync",
      "method": "getTargetAssemblies",
      "deps": "js/associatedProcessesForMbomNodeService",
      "inputData": {
        "selectedProcessNode": "{{commandContext.inputObject[0]}}",
        "shouldHaveAssembly": false,
        "errorMessage": {
          "objectType": "plan",
          "commandName": "createFolderTitle"
        }
      },
      "outputData": {
        "targetAssembly": ""
      }
    },
    "createProcessCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "getTargetAssemblyMessage",
          "condition": "conditions.showTargetAssemblyMessage"
        },
        {
          "action": "showCreateProcessPopup",
          "condition": "!conditions.isCommandContextCreateTitle"
        },
        {
          "action": "showCreateProcessPopupWithCustomTitle",
          "condition": "conditions.isCommandContextCreateTitle"
        }
      ]
    },
    "showCreateFolderPopup": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{i18n.createFolderCmdTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "MEProcess",
            "preferenceName": "EP_CreateSubtypesForType_BOPFolder",
            "subTypeExclusionList": [
              "Mfg0MEProcArea",
              "Mbc0FuncGroup"
            ],
            "scopeObject": "{{commandContext.contextObject}}",
            "hideCreateAndAddMoreButton": false,
            "createObjectHeaderMessage": "{{data.messages[0].text}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "ExpandProcessHighLevelPlanning"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{commandContext.contextObject}}"
              }
            }
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "showCreateProcessPopup": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{parameters.preferenceName === 'EP_CreateSubtypesForType_BOPFolder' ? i18n.createFolderCmdTitle : i18n.createProcessCmdTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "MEProcess",
            "preferenceName": "{{parameters.preferenceName}}",
            "subTypeExclusionList": [
              "Mfg0MEProcArea",
              "Mbc0FuncGroup"
            ],
            "scopeObject": "{{data.scopeObjectForCreatePopup}}",
            "hideCreateAndAddMoreButton": "{{commandContext.hideCreateAndAddMoreButton ? commandContext.hideCreateAndAddMoreButton : parameters.hideCreateAndAddMoreButton}}",
            "targetAssembly": "{{commandContext.targetAssembly}}",
            "createObjectHeaderMessage": "{{data.messages[0].text}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "{{ctx.sublocation.nameToken === 'highLevelPlanning' ? 'ExpandProcessHighLevelPlanning' : 'ExpandProcessDetailedPlanning'}}"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{data.scopeObjectForCreatePopup}}"
              }
            }
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "showCreateProcessPopupWithCustomTitle": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{commandContext.createTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "MEProcess",
            "preferenceName": "{{parameters.preferenceName}}",
            "subTypeExclusionList": [
              "Mfg0MEProcArea",
              "Mbc0FuncGroup"
            ],
            "scopeObject": "{{data.scopeObjectForCreatePopup}}",
            "targetAssembly": "{{commandContext.targetAssembly}}",
            "createObjectHeaderMessage": "{{data.messages[0].text}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "ExpandProcessDetailedPlanning"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{data.scopeObjectForCreatePopup}}"
              }
            }
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "getTargetAssemblyMessage": {
      "actionType": "JSFunction",
      "method": "applyMessagesParams",
      "inputData": {
        "messagesData": [
          {
            "text": "{{i18n.createProcessTargetLabel}}",
            "textParams": [
              "{{commandContext.targetAssembly.props.object_string.uiValues[0]}}"
            ]
          }
        ]
      },
      "outputData": {
        "messages": ""
      },
      "deps": "js/mfeMessagesService"
    },
    "createCompoundOperationCommandAction": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{i18n.createCompoundOperationTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "Mfg0MECompOP",
            "preferenceName": "EP_CreateSubtypesForType_Mfg0MECompOP",
            "scopeObject": "{{commandContext.selection[0]}}",
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "ExpandProcessDetailedPlanning"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{commandContext.selection[0]}}"
              }
            }
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "showcreateExecutionStepPopup": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{i18n.createExecutionStepTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "Mfg0MEStep",
            "preferenceName": "EP_CreateSubtypesForType_Mfg0MEStep",
            "scopeObject": "{{data.scopeObjectForCreatePopup}}",
            "selectedObject": "{{data.scopeObjectForCreatePopup}}",
            "reloadType": "{{data.reloadType}}"
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "createExecutionStepCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "showcreateExecutionStepPopup"
        }
      ]
    },
    "createCompoundOperationProcessSequenceCommandAction": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "locals": {
            "caption": "{{i18n.createCompoundOperationTitle}}"
          },
          "options": {
            "height": "500",
            "width": "450"
          },
          "subPanelContext": {
            "objectBaseType": "Mfg0MECompOP",
            "preferenceName": "EP_CreateSubtypesForType_Mfg0MECompOP",
            "scopeObject": "{{commandContext.contextObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "createExecutionStepForPertCommandAction": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "locals": {
            "caption": "{{i18n.createExecutionStepTitle}}"
          },
          "options": {
            "height": "500",
            "width": "450"
          },
          "subPanelContext": {
            "objectBaseType": "Mfg0MEStep",
            "preferenceName": "EP_CreateSubtypesForType_Mfg0MEStep",
            "scopeObject": "{{commandContext.contextObject}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "createFunctionalGroupCommandAction": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "caption": "{{i18n.createFunctionalGroupTitle}}",
          "height": "500",
          "width": "450",
          "draggable": true,
          "independent": true,
          "preset": "modal",
          "subPanelContext": {
            "objectBaseType": "Mbc0FuncGroup",
            "preferenceName": "EP_CreateSubtypesForType_MEProcess_InProductBop",
            "scopeObject": "{{commandContext.selection[0]}}",
            "subTypeExclusionList": [
              "Mfg0MEProcArea",
              "Mfg0MEProcess"
            ],
            "reloadType": {
              "epCreate": {
                "reloadTypeName": "CommonExpand",
                "additionalLoadParams": [
                  {
                    "tagName": "expandType",
                    "attributeName": "type",
                    "attributeValue": "ExpandProcessDetailedPlanning"
                  },
                  {
                    "tagName": "expandInfo",
                    "attributeName": "level",
                    "attributeValue": "CHILDREN"
                  }
                ],
                "object": "{{commandContext.selection[0]}}"
              }
            }
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/popupService"
    },
    "epUpdateFlowsCommandAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpUpdateFlowsPopup",
          "preset": "modal",
          "caption": "{{i18n.updateFlowsTitle}}",
          "height": "270",
          "width": "400",
          "draggable": true,
          "subPanelContext": {
            "loadedObj": "{{commandContext.contextObject}}"
          }
        }
      }
    },
    "deletePertEdgeAction": {
      "actionType": "JSFunction",
      "method": "removeEdge",
      "inputData": {
        "edgesToDelete": "{{commandContext.edgeSelections}}",
        "graphModel": "{{commandContext.graphModel}}",
        "tabContext": "{{commandContext}}"
      },
      "deps": "js/epPertEditService"
    },
    "deletePertEdgeNodeAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}"
      }
    },
    "resetLayout": {
      "actionType": "JSFunction",
      "method": "resetLayout",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}"
      },
      "deps": "js/epPertEditService"
    },
    "deletePertNodeAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.contextObject}}"
      }
    },
    "setSelectionAsPredecessor": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "setPertNodeAsPredecessor",
          "condition": "(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        },
        {
          "action": "setProcessTreeNodeAsPredecessor",
          "condition": "!(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        }
      ]
    },
    "setPertNodeAsPredecessor": {
      "actionType": "JSFunction",
      "method": "setPertNodeAsPredecessor",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "predecessorNodes": "{{ctx.graph.commandContextItem.model.modelObject}}"
      },
      "deps": "js/epPertEditService"
    },
    "setProcessTreeNodeAsPredecessor": {
      "actionType": "JSFunction",
      "method": "setPredecessorNodesInStorageAndDisplayMessage",
      "inputData": {
        "predecessorNodes": "{{commandContext.vmo.uid}}"
      },
      "deps": "js/epPertEditService"
    },
    "setSelectionAsSuccessor": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "selectExternalFlowsTabAction"
        },
        {
          "action": "setAsSuccessorAndCreateFlow",
          "condition": "(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        },
        {
          "action": "setAsSuccessorAndCreateFlowForProcessTree",
          "condition": "!(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        }
      ]
    },
    "setAsSuccessorAndCreateFlow": {
      "actionType": "JSFunction",
      "method": "setAsSuccessorAndCreateFlow",
      "inputData": {
        "successorNodes": "{{ctx.graph.commandContextItem.model.modelObject}}"
      },
      "deps": "js/epPertEditService"
    },
    "setAsSuccessorAndCreateFlowForProcessTree": {
      "actionType": "JSFunction",
      "method": "setAsSuccessorAndCreateFlow",
      "inputData": {
        "successorNodes": "{{commandContext.vmo}}"
      },
      "deps": "js/epPertEditService"
    },
    "selectExternalFlowsTabAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "changeToExternalFlowsTab"
        },
        {
          "action": "selectPertNodeAndLoadExternalFlowDetails",
          "condition": "(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        }
      ]
    },
    "selectPertNodeAndLoadExternalFlowDetails": {
      "actionType": "JSFunction",
      "method": "selectPertNodeAndLoadExternalFlowsTab",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "objectToSelect": "{{ctx.graph.commandContextItem.model}}"
      },
      "deps": "js/epPertEditService"
    },
    "changeToExternalFlowsTab": {
      "actionType": "JSFunctionAsync",
      "method": "changeTab",
      "inputData": {
        "0": "EpDetailsAreaTabSet",
        "1": "EpExternalFlows"
      },
      "deps": "js/tabRegistry.service"
    },
    "setPertModeActiveAndUpdateContextObjectForPert": {
      "actionType": "JSFunction",
      "method": "setPertModeAndUpdateCommandContext",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "sharedSelectionData": "{{commandContext.sharedSelectionData}}"
      },
      "deps": "js/epPertGraphDataProviderService"
    },
    "epActivateExportToRoundTripExcelPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epSetPanelContext"
        },
        {
          "action": "Arm0ActivateExportToRoundTripExcelPanel"
        }
      ]
    },
    "epSetPanelContext": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "panelContext",
        "value": [
          "{{ctx.epPageContext.loadedObject}}"
        ]
      }
    },
    "epCmdMultipleDeleteCommandAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "reloadType": "{{commandContext.reloadType.epTreeTable}}",
        "reloadProperties": "{{commandContext.propertiesToLoad}}",
        "additionalLoadParams": "{{commandContext.additionalLoadParams}}"
      }
    },
    "epCmdCopyCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epCmdCopyAction"
        },
        {
          "action": "epRefreshTableAction"
        }
      ]
    },
    "epCmdCopyAction": {
      "actionType": "epCopyAction",
      "inputData": {
        "objectsToCopy": "{{commandContext.selection}}"
      }
    },
    "epCmdCutCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epCutAction"
        },
        {
          "action": "epRefreshTableAction"
        }
      ]
    },
    "epCutAction": {
      "actionType": "epCutAction",
      "inputData": {
        "objectsToCopy": "{{commandContext.selection}}"
      }
    },
    "epRefreshTableAction": {
      "actionType": "JSFunction",
      "method": "refreshTable",
      "inputData": {
        "tableId": "{{commandContext.tableId}}"
      },
      "deps": "js/mfeTableService"
    },
    "epCloneOperationAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "getSelectedObjectFromCommandContext"
        },
        {
          "action": "epOpenCloneOperationPopup"
        }
      ]
    },
    "getSelectedObjectFromCommandContext": {
      "actionType": "JSFunction",
      "method": "getInputObject",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "selectedObject": ""
      },
      "deps": "js/epTableService"
    },
    "epOpenCloneOperationPopup": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "CloneObjectPopup",
          "locals": {
            "caption": "{{i18n.cloneOperation}}"
          },
          "options": {
            "height": "500",
            "width": "450",
            "clickOutsideToClose": false,
            "draggable": true,
            "independent": true
          },
          "subPanelContext": {
            "selectedObject": "{{data.selectedObject}}",
            "boTypeWithExclusionTypeNames": [
              {
                "boTypeName": "MEOP",
                "exclusionBOTypeNames": [
                  "Mfg0BvrStep"
                ]
              },
              {
                "boTypeName": "MEOPRevision",
                "exclusionBOTypeNames": [
                  "Mfg0MEStepRevision"
                ]
              }
            ],
            "reloadType": "{{data.reloadType}}",
            "searchPlaceHolder": "{{i18n.cloneOperationSearchPlaceHolder}}",
            "objectTypesToSearch": []
          }
        }
      },
      "deps": "js/popupService"
    },
    "epCloneProcessAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getOperationParent"
        },
        {
          "action": "getSelectedObjectFromCommandContext"
        },
        {
          "action": "epOpenCloneProcessPopup"
        }
      ]
    },
    "epOpenCloneProcessPopup": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "CloneObjectPopup",
          "locals": {
            "caption": "{{i18n.cloneProcess}}"
          },
          "options": {
            "height": "500",
            "width": "450",
            "clickOutsideToClose": false,
            "draggable": true,
            "independent": true
          },
          "subPanelContext": {
            "selectedObject": "{{data.selectedObject}}",
            "cloneType": "ProcessDetailPlanning",
            "boTypeWithExclusionTypeNames": [
              {
                "boTypeName": "MEProcess",
                "exclusionBOTypeNames": [
                  "Mfg0MEProcArea",
                  "Mbc0MEBGCollectr",
                  "Mbc0MEBOPFolder",
                  "Mbc0FuncGroup"
                ]
              },
              {
                "boTypeName": "MEProcessRevision",
                "exclusionBOTypeNames": [
                  "Mfg0MEProcAreaRevision",
                  "Mbc0MEBGCollectrRevision",
                  "Mbc0MEBOPFolderRevision",
                  "Mbc0FuncGroupRevision"
                ]
              }
            ],
            "reloadType": "{{data.reloadType}}",
            "searchPlaceHolder": "{{i18n.cloneProcessSearchPlaceHolder}}",
            "objectTypesToSearch": []
          }
        }
      },
      "deps": "js/popupService"
    },
    "removeExistingCutIndication": {
      "actionType": "JSFunction",
      "method": "removeExistingCutIndication",
      "deps": "js/epCutCopyService"
    },
    "epCmdPasteIntoAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "createAndRegisterReloadInputForPasteInto",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "pasteIntoAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "removeExistingCutIndication",
          "condition": "!conditions.isNoCutOperationPerformed"
        }
      ]
    },
    "pasteIntoAction": {
      "actionType": "JSFunctionAsync",
      "method": "pasteInto",
      "inputData": {
        "selectedVmo": "{{commandContext.selection[0]}}",
        "newObjectID": "{{data.newObjectIDs}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "epCmdPasteBeforeAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "createAndRegisterReloadInputForPasteBeforeAfter",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "pasteBeforeAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "removeExistingCutIndication",
          "condition": "!conditions.isNoCutOperationPerformed"
        }
      ]
    },
    "epCmdPasteAfterAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "createAndRegisterReloadInputForPasteBeforeAfter",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "pasteAfterAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "removeExistingCutIndication",
          "condition": "!conditions.isNoCutOperationPerformed"
        }
      ]
    },
    "pasteAfterAction": {
      "actionType": "JSFunctionAsync",
      "method": "pasteAfter",
      "inputData": {
        "selectedVmo": "{{commandContext.selection[0]}}",
        "newObjectIDs": "{{data.newObjectIDs}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "pasteBeforeAction": {
      "actionType": "JSFunctionAsync",
      "method": "pasteBefore",
      "inputData": {
        "selectedVmo": "{{commandContext.selection[0]}}",
        "newObjectIDs": "{{data.newObjectIDs}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "generateObjectID": {
      "actionType": "JSFunction",
      "method": "generateUniqueId",
      "inputData": {
        "id": "new_object_id"
      },
      "outputData": {
        "newObjectID": ""
      },
      "deps": "js/mfeViewModelUtils"
    },
    "getClipBoardContents": {
      "actionType": "JSFunction",
      "method": "getContents",
      "deps": "js/tcClipboardService",
      "outputData": {
        "copiedObjects": ""
      }
    },
    "createAndRegisterReloadInputForPasteInto": {
      "actionType": "JSFunction",
      "method": "createAndRegisterReloadInputForPasteInto",
      "inputData": {
        "selectedObject": "{{commandContext.selection[0]}}",
        "copiedObjects": "{{parameters.copiedObjects}}",
        "reloadType": "{{commandContext.reloadType}}"
      },
      "outputData": {
        "newObjectIDs": ""
      },
      "deps": "js/epBOPClonePasteService"
    },
    "createAndRegisterReloadInputForPasteBeforeAfter": {
      "actionType": "JSFunction",
      "method": "createAndRegisterReloadInputForPasteBeforeAfter",
      "inputData": {
        "selectedObject": "{{commandContext.selection[0]}}",
        "copiedObjects": "{{parameters.copiedObjects}}",
        "reloadType": "{{commandContext.reloadType}}"
      },
      "outputData": {
        "newObjectIDs": ""
      },
      "deps": "js/epBOPClonePasteService"
    },
    "pasteRefPartsAction": {
      "actionType": "JSFunction",
      "method": "pasteAssignParts",
      "inputData": {
        "selectedVmo": "{{commandContext.inputObject}}",
        "newObjectID": "{{data.newObjectID}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "epPasteRefPartsCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "generateObjectID"
        },
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "pasteRefPartsAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        }
      ]
    },
    "epCmdUpdateOnPackOrUnpack": {
      "actionType": "JSFunction",
      "method": "updateOnPackOrUnpack",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      },
      "deps": "js/epPackUnpackService"
    },
    "epCmdPackOrUnpackActionAndUpdate": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epCmdPackOrUnpackAction"
        },
        {
          "action": "epCmdUpdateOnPackOrUnpack"
        }
      ]
    },
    "epCmdPackOrUnpackAction": {
      "actionType": "JSFunction",
      "method": "packOrUnpack",
      "inputData": {
        "selectedObject": "{{commandContext.selection[0]}}",
        "flag": "{{commandContext.selection[0].props.bl_is_packed.dbValues[0]}}"
      },
      "deps": "js/epPackUnpackService"
    },
    "epCmdUnpackAllActionAndUpdate": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epCmdUnpackAllAction"
        },
        {
          "action": "epCmdUpdateOnPackOrUnpack"
        }
      ]
    },
    "epCmdUnpackAllAction": {
      "actionType": "JSFunctionAsync",
      "method": "packOrUnpackAll",
      "inputData": {
        "selectedObject": "{{commandContext.selection[0]}}",
        "flag": "3"
      },
      "deps": "js/epPackUnpackService"
    },
    "epCmdPackAllActionAndUpdate": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epCmdPackAllAction"
        },
        {
          "action": "epCmdUpdateOnPackOrUnpack"
        }
      ]
    },
    "epCmdPackAllAction": {
      "actionType": "JSFunctionAsync",
      "method": "packOrUnpackAll",
      "inputData": {
        "selectedObject": "{{commandContext.selection[0]}}",
        "flag": "2"
      },
      "deps": "js/epPackUnpackService"
    },
    "epProcessRegenerateFindNumberCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epProcessRegenerateFindNumberIfSelection",
          "condition": "commandContext.selection[0]"
        },
        {
          "action": "epProcessRegenerateFindNumberIfNoSelection",
          "condition": "(commandContext.tabKey === 'EpPert' || commandContext.tabKey === 'EpBalancingOperationsSequence' )&& !commandContext.selection[0]"
        }
      ]
    },
    "epProcessRegenerateFindNumberIfNoSelection": {
      "actionType": "JSFunction",
      "method": "show",
      "deps": "js/popupService",
      "inputData": {
        "options": {
          "view": "EpRegenerateFindNumberPopup",
          "caption": "{{i18n.regenerateFindNumberTitle}}",
          "height": "300",
          "width": "400",
          "draggable": true,
          "subPanelContext": {
            "loadedObj": "{{commandContext.contextObject}}"
          }
        }
      }
    },
    "epProcessRegenerateFindNumberIfSelection": {
      "actionType": "JSFunction",
      "method": "show",
      "deps": "js/popupService",
      "inputData": {
        "options": {
          "view": "EpRegenerateFindNumberPopup",
          "caption": "{{i18n.regenerateFindNumberTitle}}",
          "height": "300",
          "width": "400",
          "draggable": true,
          "subPanelContext": {
            "loadedObj": "{{commandContext.selection[0]}}"
          }
        }
      }
    },
    "showSubmitToWorkflowPopup": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpSubmitToWorkflow",
          "caption": "{{i18n.submitToWorkflowTitle}}",
          "preset": "modal",
          "height": "450",
          "width": "360",
          "independent": true,
          "forceCloseOthers": false,
          "draggable": true,
          "subPanelContext": "{{commandContext}}"
        }
      },
      "outputData": {
        "popupId": "submitToWorkflow"
      },
      "deps": "js/popupService"
    },
    "epValidationRunCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "runValidationChecks",
      "inputData": {
        "loadParams": [
          {
            "tagName": "mfgValidationClientIdentifier",
            "attributeName": "value",
            "attributeValue": "EP"
          }
        ]
      },
      "deps": "js/epValidationTableService"
    },
    "epValidationOpenValidationsPanelCommandAction": {
      "actionType": "JSFunction",
      "method": "toggleValidationMode",
      "deps": "js/epValidationModeUtil"
    },
    "getParentOnProcessStation": {
      "actionType": "JSFunction",
      "method": "getParent",
      "deps": "js/epBvrObjectService",
      "inputData": {
        "navigationObject": "{{ctx.ep.scopeObject}}"
      },
      "outputData": {
        "parentObject": ""
      }
    },
    "openAssemblyPlanningWithParent": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{data.parentObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openAssemblyPlanningTaskCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{conditions.isPlanningForSmallProduct ? ctx.epTaskPageContext.processStructure.uid : ctx.ep.scopeObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid ? ctx.epPageContext.ebomPCI.uid : ctx.state.params.ebomPCI}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid ? ctx.epPageContext.mbomPCI.uid : ctx.state.params.mbomPCI}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openAssemblyPlanningPage": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openAssemblyPlanningTaskCommandAction",
          "condition": "!conditions.isProcessStationSelectedInScope"
        },
        {
          "action": "getParentOnProcessStation",
          "condition": "conditions.isProcessStationSelectedInScope"
        },
        {
          "action": "openAssemblyPlanningWithParent",
          "condition": "conditions.isProcessStationSelectedInScope"
        }
      ]
    },
    "bomBopOnPreferenceGoToAssemblyPlanning": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openAssemblyPlanningPageWithProcessTopNode",
          "condition": "conditions.isPlanningForSmallProduct"
        },
        {
          "action": "loadAssociatedProcessesInAssemblyPlanning",
          "outputArg": [
            "popupData"
          ],
          "condition": "conditions.notPlanningForSmallProduct"
        },
        {
          "action": "loadProcessesForOpenInAssemblyPlanningPopup",
          "inputArg": {
            "associatedProcessData": "{{actionData.popupData}}"
          }
        }
      ]
    },
    "loadAssociatedProcessesInAssemblyPlanning": {
      "actionType": "JSFunctionAsync",
      "method": "loadAssociatedProcesses",
      "deps": "js/associatedProcessesForMbomNodeService",
      "inputData": {
        "selectedMBOMNode": "{{commandContext.vmo}}",
        "columnConfigValues": "{{ctx.preferences.EP_OpenInDetailedPlanningPageProcessTableColumnConfiguration}}",
        "navigatePageToSelectedProcess": "assemblyPlanning"
      },
      "outputData": {
        "popupData": ""
      }
    },
    "loadProcessesForOpenInAssemblyPlanningPopup": {
      "parameters": {
        "processData": "{{result.associatedProcessData}}"
      },
      "actionType": "JSFunction",
      "method": "show",
      "deps": "js/popupService",
      "inputData": {
        "options": {
          "view": "EpAssociatedProcessesForMbomNodePopup",
          "caption": "{{i18n.openProcessInProcessPlanningPopupTitle}}",
          "draggable": true,
          "resizable": true,
          "clickOutsideToClose": false,
          "innerClassName": "aw-navigation-openAssociatedProcessPopup",
          "subPanelContext": {
            "associatedProcessData": "{{parameters.associatedProcessData}}",
            "informationMessage": "{{ctx.locationContext['ActiveWorkspace:SubLocation'] === 'highLevelPlanning' ? i18n.inHLPselectProcessToOpenInAssemblyPlanningMessage : i18n.selectProcessToOpenInAssemblyPlanningMessage}}"
          },
          "width": "600"
        }
      }
    },
    "openAssemblyPlanningPageWithTarget": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getTargetAssemblyProp"
        },
        {
          "action": "navigateToAssemblyPlanningPage",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "navigateToAssemblyPlanningPage": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openAssemblyPlanningTaskActionForManagePage": {
      "actionType": "JSFunction",
      "method": "evaluateToOpenWorkpackage",
      "inputData": {
        "modelObject": "{{ctx.epTaskPageContext.collaborationContext}}"
      },
      "outputData": {
        "workPackageInfo": ""
      },
      "events": {
        "success": [
          {
            "name": "openAssociateCnWpPopupEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "associatedCnObjects": "{{data.workPackageInfo.associatedCnObjects}}",
              "navigationType": "_self",
              "navigateTo": "assemblyPlanning"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length>0"
          },
          {
            "name": "openAssemblyPlanningPageEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "navigationType": "{{data.mbmOpenWPContext.navigationType}}"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length===0"
          }
        ]
      },
      "deps": "js/epNavigationService"
    },
    "openAssemblyPlanningPageWithProcessTopNode": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{ctx.epPageContext.processStructure.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "epAssignWorkAreaToScopeAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "epOpenAssignWorkareaPopup",
            "condition": "ctx.epPageContext.rootPlant"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "!ctx.epPageContext.rootPlant",
            "message": "noPlantStructureAvailableErrorMessage"
          }
        ]
      }
    },
    "epOpenAssignWorkareaPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAssignWorkareaPopup",
          "height": "500",
          "width": "700",
          "draggable": true,
          "caption": "{{i18n.addWorkArea}}",
          "preset": "modal",
          "subPanelContext": {
            "inputObject": "{{ctx.epPageContext.loadedObject}}"
          }
        }
      }
    },
    "epAssignWorkAreaToBopLineAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Add",
        "inputObj": "{{commandContext.selection}}",
        "selectedObjects": "{{commandContext.workAreaSelection}}",
        "entryName": "AssignedTools",
        "relationType": "MEWorkArea"
      },
      "deps": "js/epTableService"
    },
    "epRemoveWorkareaFromScopeAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Remove",
        "inputObj": "{{ctx.epPageContext.loadedObject}}",
        "selectedObjects": "{{commandContext.selection}}",
        "entryName": "AssignedTools",
        "relationType": "MEWorkArea"
      },
      "deps": "js/epTableService"
    },
    "openWorkInstructionsCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "workInstructions",
      "navigationParams": {
        "uid": "{{ctx.ep.scopeObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "wiCmdOpenInEwiAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.epPageContext.collaborationContext.uid}}",
        "stepUid": "{{commandContext.selection[0].uid}}",
        "preview": "true"
      },
      "navigateIn": "newTab"
    },
    "bomBopOnPreferenceGoToWorkInstructions": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openWorkInstructionsPageWithProcessTopNode",
          "condition": "conditions.isPlanningForSmallProduct"
        },
        {
          "action": "loadAssociatedProcesses",
          "outputArg": [
            "popupData"
          ],
          "condition": "conditions.notPlanningForSmallProduct"
        },
        {
          "action": "loadProcessesForOpenInWIAuthoringPopup",
          "inputArg": {
            "associatedProcessData": "{{actionData.popupData}}"
          }
        }
      ]
    },
    "loadAssociatedProcesses": {
      "actionType": "JSFunctionAsync",
      "method": "loadAssociatedProcesses",
      "deps": "js/associatedProcessesForMbomNodeService",
      "inputData": {
        "selectedMBOMNode": "{{commandContext.vmo}}",
        "columnConfigValues": "{{ctx.preferences.EP_OpenInDetailedPlanningPageProcessTableColumnConfiguration}}",
        "navigatePageToSelectedProcess": "workInstructions"
      },
      "outputData": {
        "popupData": ""
      }
    },
    "loadProcessesForOpenInWIAuthoringPopup": {
      "parameters": {
        "processData": "{{result.associatedProcessData}}"
      },
      "actionType": "JSFunction",
      "method": "show",
      "deps": "js/popupService",
      "inputData": {
        "options": {
          "view": "EpAssociatedProcessesForMbomNodePopup",
          "caption": "{{i18n.openProcessInWIAuthoringPopupTitle}}",
          "draggable": true,
          "resizable": true,
          "clickOutsideToClose": false,
          "innerClassName": "aw-navigation-openAssociatedProcessPopup",
          "subPanelContext": {
            "associatedProcessData": "{{parameters.associatedProcessData}}",
            "informationMessage": "{{ctx.locationContext['ActiveWorkspace:SubLocation'] === 'highLevelPlanning' ? i18n.inHLPselectProcessToOpenInWIAuthorMessage : i18n.selectProcessToOpenInWIAuthorMessage}}"
          },
          "width": "600"
        }
      },
      "outputData": {
        "associatedProcessesForMbomNodeResponse": ""
      }
    },
    "openWIPageWithTarget": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getTargetAssemblyProp"
        },
        {
          "action": "navigateToWorkInstructionPage",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "launchOpenProcessInWIAuthoringPopup": {
      "actionType": "JSFunctionAsync",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "AssociatedProcessesForMbomNodePopup",
          "locals": {
            "caption": "{{i18n.openProcessInWIAuthoringPopupTitle}}",
            "anchor": "closePopupAnchor"
          },
          "options": {
            "height": "400",
            "width": "580",
            "forceCloseOthers": false,
            "draggable": true
          },
          "subPanelContext": {
            "contextObject": "{{data.associatedProcessesForMbomNodeResponse.mbomNode}}",
            "processes": "{{data.associatedProcessesForMbomNodeResponse.processes}}",
            "navigatePageSelProcess": "workInstructions"
          }
        }
      },
      "outputData": {
        "associatedProcessesForMbomNodePopupId": ""
      },
      "deps": "js/popupService"
    },
    "navigateToWorkInstructionPage": {
      "actionType": "Navigate",
      "navigateTo": "workInstructions",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openWorkInstructionsPageWithProcessTopNode": {
      "actionType": "Navigate",
      "navigateTo": "workInstructions",
      "navigationParams": {
        "uid": "{{ctx.epPageContext.processStructure.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openWorkInstructionsTaskActionForManagePage": {
      "actionType": "JSFunction",
      "method": "evaluateToOpenWorkpackage",
      "inputData": {
        "modelObject": "{{ctx.epTaskPageContext.collaborationContext}}"
      },
      "outputData": {
        "workPackageInfo": ""
      },
      "events": {
        "success": [
          {
            "name": "openAssociateCnWpPopupEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "associatedCnObjects": "{{data.workPackageInfo.associatedCnObjects}}",
              "navigationType": "_self",
              "navigateTo": "workInstructions"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length>0"
          },
          {
            "name": "openWorkInstructionsPageEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "navigationType": "{{data.mbmOpenWPContext.navigationType}}"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length===0"
          }
        ]
      },
      "deps": "js/epNavigationService"
    },
    "wiAssignWorkAreaToSelectedObjAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openAssignWorkareaPopupFromProcessTree",
            "condition": "ctx.epPageContext.rootPlant"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "!ctx.epPageContext.rootPlant",
            "message": "noPlantStructureAvailableErrorMessage"
          }
        ]
      }
    },
    "openAssignWorkareaPopupFromProcessTree": {
      "actionType": "JSFunction",
      "method": "show",
      "inputData": {
        "data": {
          "declView": "EpAssignWorkareaPopup",
          "locals": {
            "caption": "{{i18n.openWorkInstructionsCommandTitle}}"
          },
          "options": {
            "height": "500",
            "width": "700",
            "draggable": true
          },
          "subPanelContext": {
            "inputObject": "{{commandContext.selection}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "epOpenProcessResourceList": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpProcessResourceListForAssignPopup",
          "isModal": false,
          "draggable": false,
          "placement": "bottom-start",
          "hasArrow": false,
          "whenParentScrolls": "close",
          "subPanelContext": {
            "inputObj": "{{commandContext.inputObject}}",
            "operations": "{{commandContext.selection}}",
            "balancingData": "{{commandContext.balancingData}}"
          }
        }
      }
    },
    "epOpenTimeDistributionAction": {
      "actionType": "JSFunction",
      "method": "showLargePopup",
      "inputData": {
        "params": {
          "declView": "EpBalancingTimeDistributionPopup"
        }
      },
      "deps": "js/mfeLargePopupUtils"
    },
    "openLineBalancingTaskFromGoToAction": {
      "actionType": "Navigate",
      "navigateTo": "lineBalancing",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid ? ctx.epPageContext.ebomPCI.uid : ctx.state.params.ebomPCI}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid ? ctx.epPageContext.mbomPCI.uid : ctx.state.params.mbomPCI}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openLineBalancingTaskActionForTaskSwitcher": {
      "actionType": "Navigate",
      "navigateTo": "lineBalancing",
      "navigationParams": {
        "uid": "{{ctx.state.params.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid ? ctx.epPageContext.ebomPCI.uid : ctx.state.params.ebomPCI}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid ? ctx.epPageContext.mbomPCI.uid : ctx.state.params.mbomPCI}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "epBalancingShowProductBOPAction": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "inputData": {
        "name": "ep.balancingShowProductBOP",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "epBalancingHideProductBOPAction": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "inputData": {
        "name": "ep.balancingShowProductBOP",
        "value": false
      },
      "deps": "js/appCtxService"
    },
    "epCmdBalancingPasteIntoAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getClipBoardContents",
          "outputArg": [
            "copiedObjects"
          ]
        },
        {
          "action": "epBalancingPasteIntoAction",
          "inputArg": {
            "copiedObjects": "{{actionData.copiedObjects}}"
          }
        },
        {
          "action": "removeExistingCutIndication"
        }
      ]
    },
    "epBalancingPasteIntoAction": {
      "actionType": "JSFunctionAsync",
      "method": "pasteIntoParent",
      "inputData": {
        "selectedVmo": "{{commandContext.inputObject}}",
        "copiedObjects": "{{parameters.copiedObjects}}"
      },
      "deps": "js/epBalancingPasteService"
    },
    "epBalancingMultipleDeleteCommandAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.selection}}",
        "connectToObject": "{{commandContext.balancingData.selectionData.station}}",
        "reloadType": "{{commandContext.reloadType.epTreeTable}}",
        "reloadProperties": "{{commandContext.propertiesToLoad}}"
      }
    },
    "createOperatorInLBCommandAction": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpCreateObject",
          "height": "500",
          "width": "450",
          "caption": "{{i18n.createOperator}}",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "objectBaseType": "Mfg0ProcResource",
            "subTypeExclusionList": [],
            "scopeObject": "{{commandContext.vmo}}",
            "reloadType": "",
            "selectedObject": [],
            "isResequenceNeeded": false
          }
        }
      },
      "deps": "js/popupService"
    },
    "epBalancingCmdDeleteOperatorCommandAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.balancingData.selectionData.processResource}}",
        "connectToObject": "{{commandContext.vmo}}"
      }
    },
    "launchPrCapacityPopupAction": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpBalancingProcessResourceCapacityPanel",
          "caption": "{{i18n.epBalancingEditPrCapacityPopupTitle}}",
          "width": "400",
          "height": "300",
          "draggable": true,
          "preset": "modal",
          "clickOutsideToClose": true,
          "subPanelContext": {
            "scopeObject": "{{commandContext.balancingData.selectionData.processResource}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "epOpenLineLayoutAction": {
      "actionType": "Navigate",
      "navigateTo": "lineLayoutPage",
      "navigationParams": {
        "uid": "{{ctx.epPageContext.loadedObject.uid}}"
      },
      "navigateIn": "newTab"
    },
    "epShowPartPlanningActivitiesToggleCommandAction": {
      "actionType": "JSFunction",
      "method": "toggleActivitiesTable",
      "inputData": {
        "activityType": "part"
      },
      "deps": "js/epActivitiesService"
    },
    "openInNXEP": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getItemRevisionFromCommandConext"
        },
        {
          "action": "nxtcxmlOpenEventFromContextMenuActionTrigger",
          "condition": "conditions.isNotHosted"
        },
        {
          "action": "nxHostedOpenEventFromContextMenuActionTrigger",
          "condition": "conditions.isHosted"
        }
      ]
    },
    "getItemRevisionFromCommandConext": {
      "actionType": "JSFunction",
      "method": "createViewModelObject",
      "inputData": {
        "uid": "{{commandContext.vmo.props.bl_revision.dbValue}}"
      },
      "outputData": {
        "targetObject": ""
      },
      "deps": "js/viewModelObjectService"
    },
    "nxtcxmlOpenEventFromContextMenuActionTrigger": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "nxtcxmlOpenEventSelectionEvent",
            "eventData": {
              "dataSource": "{{data.targetObject}}"
            }
          }
        ]
      }
    },
    "nxHostedOpenEventFromContextMenuActionTrigger": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "NxOpenEventSelectionEvent",
            "eventData": {
              "dataSource": "{{data.targetObject}}"
            }
          }
        ]
      }
    },
    "epRemoveScopeAction": {
      "actionType": "JSFunction",
      "method": "removeOrAddObjects",
      "inputData": {
        "actionType": "Remove",
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}",
        "entryName": "ProductScopes"
      },
      "deps": "js/epTableService"
    },
    "openOperationPlanningPage": {
      "actionType": "Navigate",
      "navigateTo": "operationPlanning",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.impacting_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openOperationPlanningTaskSwitcherCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "operationPlanning",
      "navigationParams": {
        "uid": "{{ctx.ep.scopeObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "selectProductVariantPopupAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpSelectProductVariantsPopup",
          "height": "628",
          "width": "1032",
          "draggable": true,
          "preset": "modal",
          "caption": "{{i18n.selectProductVariantsPopupTitle}}",
          "subPanelContext": {
            "productVariantsList": "{{commandContext.productVariantsList}}",
            "availableListTitle": "{{i18n.availableProductVariantsTitle}}",
            "selectedListTitle": "{{i18n.selectedProductVariantsTitle}}",
            "occContext": "{{commandContext.occContext}}"
          }
        }
      }
    },
    "pmiMoreCommandAction": {
      "actionType": "JSFunction",
      "method": "showPmiInformationPopup",
      "inputData": {
        "popupTitle": "{{commandContext.vmo.props['mci0PmiDescription'].uiValue}}",
        "pmiContextObject": "{{commandContext.vmo}}"
      },
      "deps": "js/wiPmiInfoService"
    },
    "pmiRemoveInspectionCommandAction": {
      "actionType": "JSFunction",
      "method": "removeInspectionRevision",
      "inputData": {
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}"
      },
      "deps": "js/wiPmiService"
    },
    "missingInSourcePmiMoreCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "missingInSourcePmiMoreCommand.clicked"
          }
        ]
      }
    },
    "updatePmiCommandAction": {
      "actionType": "JSFunction",
      "method": "updateInspectionRevision",
      "inputData": {
        "inputObj": "{{commandContext.inputObject}}",
        "selectedObjects": "{{commandContext.selection}}"
      },
      "deps": "js/wiPmiService"
    },
    "syncBOPToPlantCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "syncBOPToPlant",
      "deps": "js/syncOperationService",
      "inputData": {
        "objToSync": "{{commandContext.vmo}}",
        "isRemoveObsoleteTwin": "{{ctx.preferences.EP_RemoveObsoleteOnSyncTwin}}"
      }
    },
    "syncPlantToBOPCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "syncPlantToBOP",
      "deps": "js/syncOperationService",
      "inputData": {
        "objToSync": "{{ctx.mselected}}",
        "isRemoveObsoleteTwin": "{{ctx.preferences.EP_RemoveObsoleteOnSyncTwin}}"
      }
    },
    "epCmdDeleteCommandAction": {
      "actionType": "epDeleteAction",
      "inputData": {
        "objectsToDelete": "{{commandContext.vmo}}",
        "connectToObject": "{{commandContext.vmo.parentObject}}",
        "reloadType": "CommonExpand",
        "reloadProperties": "",
        "additionalLoadParams": [
          {
            "tagName": "expandType",
            "attributeName": "type",
            "attributeValue": "ExpandProcessDetailedPlanning"
          },
          {
            "tagName": "expandInfo",
            "attributeName": "level",
            "attributeValue": "CHILDREN"
          }
        ]
      }
    },
    "WISaveWorkInstructions": {
      "actionType": "JSFunction",
      "method": "saveWorkInstructions",
      "deps": "js/wiEditor.service"
    },
    "WIShowTipsCommandAction": {
      "actionType": "JSFunction",
      "method": "showHideTipsPopup",
      "deps": "js/wiEditor.service"
    },
    "setEffectivityCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performAutoReviseCheck",
          "condition": "!commandContext.vmo"
        },
        {
          "action": "performAutoReviseCheckForEditor",
          "condition": "commandContext.vmo"
        },
        {
          "action": "initOccContext",
          "condition": "commandContext.occContext && conditions.isAutoReviseCheckDone"
        },
        {
          "action": "initOccContextforWI",
          "condition": "!commandContext.occContext && conditions.isAutoReviseCheckDone"
        },
        {
          "action": "updateSelectedDesignElementInCtx",
          "condition": "conditions.isAutoReviseCheckDone"
        },
        {
          "action": "launchOccEffectivityPanel",
          "condition": "conditions.isAutoReviseCheckDone"
        }
      ]
    },
    "updateSelectedDesignElementInCtx": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "selected",
        "value": "{{data.designElementToselect[0]}}"
      }
    },
    "setEffectivityOnMultipleObjectsCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performAutoReviseCheck"
        },
        {
          "action": "getUpdatedOccContext",
          "condition": "commandContext.occContext && conditions.isAutoReviseCheckDone"
        },
        {
          "action": "updateSelectedDesignElementInCtx",
          "condition": "conditions.isAutoReviseCheckDone"
        },
        {
          "action": "launchOccEffectivityPanel",
          "condition": "conditions.isAutoReviseCheckDone"
        }
      ]
    },
    "initOccContextforWI": {
      "actionType": "JSFunctionAsync",
      "method": "initOccContext",
      "inputData": {
        "occContext": "{{commandContext.vmo.occContext}}",
        "value": "{{commandContext.vmo.uid}}"
      },
      "outputData": {
        "designElementToselect": ""
      },
      "deps": "js/epSetEffectivityService"
    },
    "openValidateOccEffectivityPopup": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "initializeValidateEffectivityPopup",
          "outputArg": [
            "validateEffectivityData"
          ]
        },
        {
          "action": "epShowValidateEffectivityPopup",
          "inputArg": {
            "validateEffectivityData": "{{actionData.validateEffectivityData}}"
          },
          "condition": "conditions.hasValidateEffectivityData"
        }
      ]
    },
    "initializeValidateEffectivityPopup": {
      "actionType": "JSFunctionAsync",
      "method": "initializeValidateEffectivityPopup",
      "inputData": {
        "inputObj": "{{commandContext.selection}}",
        "loadType": "getProperties"
      },
      "outputData": {
        "validateEffectivityData": ""
      },
      "deps": "js/epValidateEffectivityService"
    },
    "epShowValidateEffectivityPopup": {
      "actionType": "JSFunction",
      "method": "showLargePopup",
      "inputData": {
        "params": {
          "options": {
            "view": "EpValidateEffectivityPopup",
            "clickOutsideToClose": false,
            "innerClassName": "aw-epInstructionsEffectivity-wiValidateEffectivityPopup",
            "subPanelContext": {
              "validateEffectivityData": "{{parameters.validateEffectivityData}}"
            }
          }
        }
      },
      "deps": "js/mfeLargePopupUtils"
    },
    "validateEffectivityPopupCloseAction": {
      "actionType": "JSFunction",
      "method": "closePopup",
      "inputData": {
        "popupId": "{{data.popupId}}"
      },
      "deps": "js/epValidateEffectivityService"
    },
    "removeEffectivityCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "wi.handleRemoveEffectivity",
            "eventData": {
              "effectivityObj": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "addEffectivityCommandAction": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "inputData": {
        "name": "showOccurrenceEffectivityPanel",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "editEffectivityCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "wi.addOrEditEffectivity",
            "eventData": {
              "effectivityObj": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "setEffectivityForPartsCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performAutoReviseCheck"
        },
        {
          "action": "initOccContext",
          "condition": "conditions.isAutoReviseCheckDone"
        },
        {
          "action": "updateSelectedDesignElementInCtx",
          "condition": "conditions.isAutoReviseCheckDone"
        },
        {
          "action": "launchOccEffectivityPanel",
          "condition": "conditions.isAutoReviseCheckDone"
        }
      ]
    },
    "initOccContext": {
      "actionType": "JSFunctionAsync",
      "method": "initOccContext",
      "inputData": {
        "occContext": "{{commandContext.occContext}}",
        "value": "{{commandContext.selection[0].uid}}"
      },
      "outputData": {
        "designElementToselect": ""
      },
      "deps": "js/epSetEffectivityService"
    },
    "getUpdatedOccContext": {
      "actionType": "JSFunctionAsync",
      "method": "getUpdatedOccContext",
      "inputData": {
        "occContext": "{{commandContext.occContext}}",
        "objectArray": "{{commandContext.selection}}"
      },
      "deps": "js/epSetEffectivityService"
    },
    "performAutoReviseCheck": {
      "actionType": "JSFunctionAsync",
      "method": "performAutoReviseCheck",
      "inputData": {
        "selection": "{{commandContext.inputObject}}"
      },
      "outputData": {
        "autoReviseCheckDone": ""
      },
      "deps": "js/epSetEffectivityService"
    },
    "performAutoReviseCheckForEditor": {
      "actionType": "JSFunctionAsync",
      "method": "performAutoReviseCheck",
      "inputData": {
        "selection": "{{commandContext.vmo}}"
      },
      "outputData": {
        "autoReviseCheckDone": ""
      },
      "deps": "js/epSetEffectivityService"
    },
    "setProductViewEffectivityCommandAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performAutoReviseCheck"
        },
        {
          "action": "initOccContextforPV",
          "condition": "conditions.isAutoReviseCheckDone"
        },
        {
          "action": "updateSelectedDesignElementInCtx"
        },
        {
          "action": "launchOccEffectivityPanel",
          "condition": "conditions.isAutoReviseCheckDone"
        }
      ]
    },
    "initOccContextforPV": {
      "actionType": "JSFunctionAsync",
      "method": "initOccContext",
      "inputData": {
        "occContext": "{{commandContext.occContext}}",
        "value": "{{commandContext.inputObject.uid}}"
      },
      "deps": "js/epSetEffectivityService"
    },
    "addEffectivityCommandBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "addEffectivityCommandAction"
        },
        {
          "action": "createEffectivityCommandAction"
        }
      ]
    },
    "createEffectivityCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "wi.addOrEditEffectivity",
            "eventData": {
              "effectivityObj": ""
            }
          }
        ]
      }
    },
    "openHighLevelPlanningTaskActionForManagePage": {
      "actionType": "JSFunction",
      "method": "evaluateToOpenWorkpackage",
      "inputData": {
        "modelObject": "{{ctx.epTaskPageContext.collaborationContext}}"
      },
      "outputData": {
        "workPackageInfo": ""
      },
      "events": {
        "success": [
          {
            "name": "openAssociateCnWpPopupEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "associatedCnObjects": "{{data.workPackageInfo.associatedCnObjects}}",
              "navigationType": "_self",
              "navigateTo": "highLevelPlanning"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length>0"
          },
          {
            "name": "openProcessPageEvent",
            "eventData": {
              "workPackage": "{{data.workPackageInfo.workPackage}}",
              "navigationType": "{{data.mbmOpenWPContext.navigationType}}"
            },
            "condition": "data.workPackageInfo.associatedCnObjects.length===0"
          }
        ]
      },
      "deps": "js/epNavigationService"
    },
    "ShowAssociateCnWorkpackagePopup": {
      "actionType": "popup",
      "method": "show",
      "inputData": {
        "options": {
          "view": "EpShowAssociateCnWorkpackagePopup",
          "caption": "{{i18n.mbmAssociateCnWpPopupTitle}}",
          "preset": "modal",
          "draggable": true,
          "subPanelContext": {
            "workPackage": "{{parameters.eventData.workPackage}}",
            "associatedCnObjects": "{{parameters.eventData.associatedCnObjects}}",
            "navigationType": "{{parameters.eventData.navigationType}}",
            "navigateTo": "{{parameters.eventData.navigateTo}}",
            "processUid": "{{ctx.epTaskPageContext.processStructure.uid}}"
          }
        }
      },
      "deps": "js/popupService"
    },
    "openHighLevelPlanningTaskSwitcherCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "highLevelPlanning",
      "navigationParams": {
        "uid": "{{ctx.epTaskPageContext.processStructure.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "CloneAndAssociateProcessWithSelectedAssemblyCmdAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": true,
            "errorMessage": {
              "objectType": "folder",
              "commandName": "highLevelPlanningCloneProcessGroupCmdTitle"
            }
          }
        },
        {
          "action": "generateCloneOperationInput",
          "condition": "data.targetAssembly.length > 0"
        },
        {
          "action": "CloneAndAssociateProcessWithSelectedAssembly",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "CloneAndAssociateProcessWithSameAssemblyCmdAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": true,
            "errorMessage": {
              "objectType": "folder",
              "commandName": "highLevelPlanningCloneProcessGroupCmdTitle"
            }
          }
        },
        {
          "action": "generateCloneOperationInput",
          "condition": "data.targetAssembly.length > 0"
        },
        {
          "action": "CloneAndAssociateProcessWithSameAssembly",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "generateCloneOperationInput": {
      "actionType": "JSFunction",
      "method": "generateUniqueId",
      "inputData": {
        "id": "new_object_id"
      },
      "outputData": {
        "newObjectID": ""
      },
      "deps": "js/mfeViewModelUtils"
    },
    "CloneAndAssociateProcessWithSelectedAssembly": {
      "actionType": "JSFunction",
      "method": "cloneAndAssociateProcessConfirmation",
      "inputData": {
        "objectToClone": "{{commandContext.selection[0]}}",
        "newObjectID": "{{data.newObjectID}}",
        "targetAssembly": "{{commandContext.assemblySelection.uid}}",
        "revRule": "Latest Working"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "getAssociatedTargetAssembly": {
      "actionType": "JSFunctionAsync",
      "method": "getTargetAssemblies",
      "deps": "js/associatedProcessesForMbomNodeService",
      "inputData": {
        "selectedProcessNode": "{{commandContext.selection[0]}}",
        "shouldHaveAssembly": "{{parameters.shouldHaveAssembly}}",
        "errorMessage": "{{parameters.errorMessage}}"
      },
      "outputData": {
        "targetAssembly": ""
      }
    },
    "CloneAndAssociateProcessWithSameAssembly": {
      "actionType": "JSFunction",
      "method": "cloneAndAssociateProcessConfirmation",
      "inputData": {
        "objectToClone": "{{commandContext.selection[0]}}",
        "newObjectID": "{{data.newObjectID}}",
        "targetAssembly": "{{commandContext.selection[0].props.mbc0TargetAssemblies.dbValues[0]}}",
        "revRule": "Latest Working"
      },
      "deps": "js/epBOPClonePasteService"
    },
    "performCutIfProcess": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": true,
            "errorMessage": {
              "objectType": "folder",
              "commandName": "highLevelPlanningCmdCutTitle"
            }
          }
        },
        {
          "action": "epCmdCutCommandAction",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "highLevelPlanningPasteInto": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": false,
            "errorMessage": {
              "objectType": "plan",
              "commandName": "pasteInto"
            }
          }
        },
        {
          "action": "epCmdPasteIntoAction",
          "condition": "data.targetAssembly.length < 1"
        }
      ]
    },
    "highLevelPlanningPasteBefore": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": true,
            "errorMessage": {
              "objectType": "folder",
              "commandName": "pasteBeforeAfter"
            }
          }
        },
        {
          "action": "epCmdPasteBeforeAction",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "highLevelPlanningPasteAfter": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAssociatedTargetAssembly",
          "inputArg": {
            "shouldHaveAssembly": true,
            "errorMessage": {
              "objectType": "folder",
              "commandName": "pasteBeforeAfter"
            }
          }
        },
        {
          "action": "epCmdPasteAfterAction",
          "condition": "data.targetAssembly.length > 0"
        }
      ]
    },
    "openProcessPlanningTask": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "openProcessPlanningTaskFromProcessTree",
          "condition": "!(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        },
        {
          "action": "openProcessPlanningTaskFromPertNode",
          "condition": "(ctx.graph && ctx.graph.graphModel && ctx.graph.commandContextItem.model.modelObject)"
        }
      ]
    },
    "openProcessPlanningTaskFromProcessTree": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "openProcessPlanningTaskFromPertNode": {
      "actionType": "Navigate",
      "navigateTo": "assemblyPlanning",
      "navigationParams": {
        "uid": "{{ctx.graph.commandContextItem.model.modelObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "getTargetAssemblyProp": {
      "actionType": "JSFunctionAsync",
      "method": "getTargetAssemblies",
      "deps": "js/associatedProcessesForMbomNodeService",
      "inputData": {
        "selectedProcessNode": "{{commandContext.vmo}}",
        "shouldHaveAssembly": true,
        "errorMessage": "{{i18n.errorMessageForProcessGoTo}}"
      },
      "outputData": {
        "targetAssembly": ""
      }
    },
    "openBackgroundPartsTaskSwitcherCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "backgroundParts",
      "navigationParams": {
        "uid": "{{ctx.ep.scopeObject.uid}}",
        "tracking_cn": "{{ctx.state.params.tracking_cn}}",
        "impacting_cn": "{{ctx.state.params.tracking_cn}}",
        "ebomPCI": "{{ctx.epPageContext.ebomPCI.uid}}",
        "mbomPCI": "{{ctx.epPageContext.mbomPCI.uid}}",
        "processPCI": "{{ctx.epPageContext.processPCI.uid}}",
        "productPCI": "{{ctx.epPageContext.productPCI.uid}}",
        "productionProgramPCI": "{{ctx.epPageContext.productionProgramPCI.uid}}",
        "plantPCI": "{{ctx.epPageContext.plantPCI.uid}}",
        "functionalPlanPCI": "{{ctx.epPageContext.functionalPlanPCI.uid}}"
      }
    },
    "assignBackgroundPartsCommandAction": {
      "actionType": "JSFunction",
      "method": "assignBackgroundParts",
      "inputData": {
        "targetObject": "{{ctx.epPageContext.loadedObject}}",
        "partsToAssign": "{{commandContext.selection}}"
      },
      "deps": "js/epBackgroundPartService"
    },
    "removeBackgroundPartsCommandAction": {
      "actionType": "JSFunction",
      "method": "removeBackgroundParts",
      "inputData": {
        "targetObject": "{{ctx.epPageContext.loadedObject}}",
        "partsToRemove": "{{commandContext.selection}}"
      },
      "deps": "js/epBackgroundPartService"
    },
    "showMatchingEBOMLineCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "showMatchingEBOMLine",
      "inputData": {
        "commandContext": "{{commandContext.vmo}}"
      },
      "deps": "js/epBackgroundPartService"
    },
    "removeEBOMFromWorkpackage": {
      "actionType": "JSFunctionAsync",
      "method": "removeEBOM",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.EbomStructureContext}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "displayCreateProcessFromTemplatePopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpCreateObjectFromTemplate",
          "caption": "{{commandContext.createProductFromTemplateCaption}}",
          "height": "500",
          "width": "450",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "boTypeName": "{{commandContext.boTypeName}}",
            "exclusionBOTypeNames": "{{commandContext.exclusionBOTypeNames}}",
            "objectTypesToSearch": "{{commandContext.objectTypesToSearch}}",
            "preferenceSuffixForTypesToSearch": "{{commandContext.preferenceSuffixForTypesToSearch}}",
            "buttonName": "{{i18n.createProcess}}",
            "placeHolderForSearch": "{{i18n.processSearchPlaceHolder}}",
            "guidanceMessage": "{{commandContext.guidanceMessageNote}}"
          }
        }
      }
    },
    "generatePlantFromPlantBOPBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "generatePlantFromPlantBOP"
        },
        {
          "action": "closeCommandPopup"
        }
      ]
    },
    "generatePlantFromPlantBOP": {
      "actionType": "JSFunctionAsync",
      "method": "addPlantFromPlantBOP",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.loadedObject}}"
      },
      "deps": "js/epAddObjectService"
    },
    "epAddAssociatedPlantCommandBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "findAssociatedPlantAction"
        },
        {
          "action": "displayAddPlantPopup"
        }
      ]
    },
    "findAssociatedPlantAction": {
      "actionType": "JSFunctionAsync",
      "method": "findAssociatedTwin",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.processStructure}}"
      },
      "outputData": {
        "associatedPlant": {}
      },
      "deps": "js/epAddObjectService"
    },
    "displayAddPlantPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAddObject",
          "caption": "{{i18n.epAddAssociatedPlantPopupTitle}}",
          "height": "560",
          "width": "680",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "buttonName": "{{i18n.epAddAssociatedPlantTitle}}",
            "noSearchBox": true,
            "objectToShowOnLoad": "{{data.associatedPlant}}"
          }
        }
      }
    },
    "closeCommandPopup": {
      "actionType": "JSFunction",
      "method": "hide",
      "inputData": {
        "popupId": "{{data.popupId}}"
      },
      "deps": "js/popupService"
    },
    "displayAddObjectFromTemplatePopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpCreateObjectFromTemplate",
          "caption": "{{commandContext.createProductFromTemplateCaption}}",
          "height": "500",
          "width": "450",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "boTypeName": "{{commandContext.boTypeName}}",
            "exclusionBOTypeNames": "{{commandContext.exclusionBOTypeNames}}",
            "objectTypesToSearch": "{{commandContext.objectTypesToSearch}}",
            "preferenceSuffixForTypesToSearch": "{{commandContext.preferenceSuffixForTypesToSearch}}",
            "buttonName": "{{commandContext.buttonName}}",
            "placeHolderForSearch": "{{commandContext.placeHolderForSearch}}",
            "guidanceMessage": "{{commandContext.guidanceMessageNote}}"
          }
        }
      }
    },
    "generatePlantBOPFromPlantBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "generatePlantBOPFromPlant"
        },
        {
          "action": "closeCommandPopupWindow"
        }
      ]
    },
    "generatePlantBOPFromPlant": {
      "actionType": "JSFunctionAsync",
      "method": "addPlantFromPlantBOP",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.rootPlant}}"
      },
      "deps": "js/epAddObjectService"
    },
    "epAddAssociatedPlantBOPCommandBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "findAssociatedPlantBOPAction"
        },
        {
          "action": "displayAddPlantBOPPopup"
        }
      ]
    },
    "findAssociatedPlantBOPAction": {
      "actionType": "JSFunctionAsync",
      "method": "findAssociatedTwin",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.rootPlant}}"
      },
      "outputData": {
        "associatedPlantBOP": {}
      },
      "deps": "js/epAddObjectService"
    },
    "displayAddPlantBOPPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpAddObject",
          "caption": "{{i18n.epAddAssociatedPlantBOPPopupTitle}}",
          "height": "560",
          "width": "680",
          "preset": "modal",
          "independent": true,
          "draggable": true,
          "subPanelContext": {
            "buttonName": "{{i18n.epAddAssociatedPlantBOPTitle}}",
            "noSearchBox": true,
            "objectToShowOnLoad": "{{data.associatedPlantBOP}}"
          }
        }
      }
    },
    "closeCommandPopupWindow": {
      "actionType": "JSFunction",
      "method": "hide",
      "inputData": {
        "popupId": "{{data.popupId}}"
      },
      "deps": "js/popupService"
    },
    "epResetAllStructureConfigurationAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "epResetAllStructureConfigurationMessage"
          }
        ]
      }
    },
    "epResetAllConfigurationAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "epStoreSelectionBeforeConfiguration"
        },
        {
          "action": "epResetAllStructureConfiguration"
        }
      ]
    },
    "epStoreSelectionBeforeConfiguration": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ep.preSaveConfigurationEvent"
          }
        ]
      }
    },
    "epResetAllStructureConfiguration": {
      "actionType": "JSFunctionAsync",
      "method": "saveConfigurationFlags",
      "inputData": {
        "topObject": "{{ctx.epPageContext.collaborationContext}}",
        "configurationFlag": "restoreConfiguration",
        "isManageWorkPackagePage": "{{ctx.locationContext['ActiveWorkspace:SubLocation'] === 'manageWorkPackageNewSubLocation'}}"
      },
      "deps": "js/epStructureConfigurationService"
    },
    "epLaunchProductBopConfigurationPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": false
          }
        },
        {
          "action": "evaluateStructureScope",
          "inputArg": {
            "structureType": "functionalPlan"
          },
          "outputArg": [
            "scope"
          ]
        },
        {
          "action": "activateProductBopStructureContext",
          "inputArg": {
            "scopeKey": "{{actionData.scope}}"
          }
        },
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": true
          },
          "condition": "data.structureContextActivated !== true"
        },
        {
          "action": "openEpConfigurationPanel",
          "inputArg": {
            "commandId": "epProductBopConfigurationCommand"
          },
          "condition": "data.structureContextActivated === true"
        }
      ]
    },
    "activateProductBopStructureContext": {
      "actionType": "JSFunctionAsync",
      "method": "activateStructureContext",
      "inputData": {
        "pciUid": "{{ctx.state.params.functionalPlanPCI ? ctx.state.params.functionalPlanPCI : ctx.epTaskPageContext.functionalPlanPCI.uid}}",
        "contextKey": "functionalPlanContext",
        "structureKey": "epTaskPageContext.functionalPlan",
        "configFilterPanelTitle": "{{i18n.productBopConfiguration}}",
        "configFlagContextName": "functionalPlanConfigFlags",
        "scopeKey": "{{parameters.scopeKey}}",
        "topElement": "{{ctx.epTaskPageContext.functionalPlan}}"
      },
      "outputData": {
        "structureContextActivated": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "epLaunchPlantConfigurationPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": false
          }
        },
        {
          "action": "activatePlantStructureContext"
        },
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": true
          },
          "condition": "data.structureContextActivated !== true"
        },
        {
          "action": "openEpConfigurationPanel",
          "inputArg": {
            "commandId": "epPlantConfigurationCommand"
          },
          "condition": "data.structureContextActivated === true"
        }
      ]
    },
    "activatePlantStructureContext": {
      "actionType": "JSFunctionAsync",
      "method": "activateStructureContext",
      "inputData": {
        "pciUid": "{{ctx.state.params.plantPCI ? ctx.state.params.plantPCI : ctx.epTaskPageContext.plantPCI.uid}}",
        "contextKey": "plantContext",
        "structureKey": "epTaskPageContext.rootPlant",
        "configFilterPanelTitle": "{{i18n.plantConfiguration}}",
        "configFlagContextName": "rootPlantConfigFlags",
        "scopeKey": null,
        "topElement": "{{ctx.epTaskPageContext.rootPlant}}"
      },
      "outputData": {
        "structureContextActivated": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "epProcessLaunchConfigurationPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": false
          }
        },
        {
          "action": "evaluateStructureScope",
          "inputArg": {
            "structureType": "processStructure"
          },
          "outputArg": [
            "scope"
          ]
        },
        {
          "action": "activateProcessStructureContext",
          "inputArg": {
            "scopeKey": "{{actionData.scope}}"
          }
        },
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": true
          },
          "condition": "data.structureContextActivated !== true"
        },
        {
          "action": "openEpConfigurationPanel",
          "inputArg": {
            "commandId": "epProcessConfigurationCommand"
          },
          "condition": "data.structureContextActivated === true"
        }
      ]
    },
    "evaluateStructureScope": {
      "actionType": "JSFunction",
      "method": "evaluateStructureScope",
      "inputData": {
        "sublocation": "{{ctx.locationContext['ActiveWorkspace:SubLocation']}}",
        "structureType": "{{parameters.structureType}}"
      },
      "outputData": {
        "scope": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "activateProcessStructureContext": {
      "actionType": "JSFunctionAsync",
      "method": "activateStructureContext",
      "inputData": {
        "pciUid": "{{ctx.state.params.processPCI ? ctx.state.params.processPCI : ctx.epTaskPageContext.processPCI.uid}}",
        "contextKey": "processContext",
        "structureKey": "epTaskPageContext.processStructure",
        "configFilterPanelTitle": "{{i18n.bopConfiguration}}",
        "configFlagContextName": "processStructureConfigFlags",
        "scopeKey": "{{parameters.scopeKey}}",
        "topElement": "{{ctx.epTaskPageContext.processStructure}}",
        "excludeFeatures": "{{ctx.ep.excludeVariantFeature}}"
      },
      "outputData": {
        "structureContextActivated": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "epMbomLaunchConfigurationPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": false
          }
        },
        {
          "action": "activateMbomStructureContext"
        },
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": true
          },
          "condition": "data.structureContextActivated !== true"
        },
        {
          "action": "openEpConfigurationPanel",
          "inputArg": {
            "commandId": "epMbomConfigurationCommand"
          },
          "condition": "data.structureContextActivated === true"
        }
      ]
    },
    "activateMbomStructureContext": {
      "actionType": "JSFunctionAsync",
      "method": "activateStructureContext",
      "inputData": {
        "pciUid": "{{ctx.state.params.mbomPCI ? ctx.state.params.mbomPCI :ctx.epTaskPageContext.mbomPCI.uid}}",
        "contextKey": "mbomContext",
        "structureKey": "epTaskPageContext.mbomStructure",
        "configFilterPanelTitle": "{{i18n.mbomStructureConfigurationPanelTitle}}",
        "configFlagContextName": "mbomStructureConfigFlags",
        "scopeKey": null,
        "topElement": "{{ctx.epTaskPageContext.mbomStructure}}"
      },
      "outputData": {
        "structureContextActivated": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "epEbomLaunchConfigurationPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": false
          }
        },
        {
          "action": "activateEbomStructureContext",
          "inputArg": {
            "stateParamName": "ebomPCI",
            "contextKey": "epTaskPageContext.ebomStructureContext",
            "structureKey": "epTaskPageContext.ebomStructure"
          }
        },
        {
          "action": "resetSkipReloadOnConfigParamChange",
          "inputArg": {
            "skipReloadOnConfigParamChange": true
          },
          "condition": "data.structureContextActivated !== true"
        },
        {
          "action": "openEpConfigurationPanel",
          "inputArg": {
            "commandId": "epEbomConfigurationCommand"
          },
          "condition": "data.structureContextActivated === true"
        }
      ]
    },
    "activateEbomStructureContext": {
      "actionType": "JSFunctionAsync",
      "method": "activateStructureContext",
      "inputData": {
        "pciUid": "{{ctx.state.params.ebomPCI ? ctx.state.params.ebomPCI : ctx.epTaskPageContext.ebomPCI.uid}}",
        "contextKey": "ebomContext",
        "structureKey": "epTaskPageContext.ebomStructure",
        "configFilterPanelTitle": "{{i18n.ebomStructureConfigurationPanelTitle}}",
        "configFlagContextName": "ebomStructureConfigFlags",
        "scopeKey": null,
        "topElement": "{{ctx.epTaskPageContext.ebomStructure}}"
      },
      "outputData": {
        "structureContextActivated": ""
      },
      "deps": "js/epStructureConfigurationService"
    },
    "resetSkipReloadOnConfigParamChange": {
      "actionType": "Event",
      "method": "Event",
      "parameters": {
        "skipReloadOnConfigParamChange": "{{actionData.skipReloadOnConfigParamChange}}"
      },
      "inputData": {
        "events": [
          {
            "name": "epConfigPanel.resetConfigContext",
            "eventData": {
              "skipReloadOnConfigParamChange": "{{parameters.skipReloadOnConfigParamChange}}"
            }
          }
        ]
      }
    },
    "openEpConfigurationPanel": {
      "actionType": "Event",
      "method": "Event",
      "parameters": {
        "commandId": "{{actionData.commandId}}"
      },
      "inputData": {
        "events": [
          {
            "name": "awsidenav.openClose",
            "eventData": {
              "id": "aw_navigation",
              "includeView": "EpStructureConfigurationFilterNav",
              "commandId": "{{parameters.commandId}}"
            }
          }
        ]
      }
    },
    "viewOtherConfigurationBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "viewOtherConfigurationAction"
        },
        {
          "action": "viewOtherConfigurationNavigationAction"
        }
      ]
    },
    "viewOtherConfigurationAction": {
      "actionType": "JSFunctionAsync",
      "method": "viewOtherConfiguration",
      "inputData": {
        "data": "{{ctx.epPageContext.loadedObject.uid}}"
      },
      "outputData": {
        "objectData": ""
      },
      "deps": "js/epViewOtherConfigurationService"
    },
    "viewOtherConfigurationNavigationAction": {
      "actionType": "Navigate",
      "navigateTo": "{{ctx.locationContext['ActiveWorkspace:SubLocation']}}",
      "navigationParams": {
        "uid": "{{data.objectData.uid}}",
        "ebomPCI": "{{data.objectData.ebomPCI}}",
        "mbomPCI": "{{data.objectData.mbomPCI}}",
        "processPCI": "{{data.objectData.processPCI}}",
        "productPCI": "{{data.objectData.productPCI}}",
        "plantPCI": "{{data.objectData.plantPCI}}",
        "functionalPlanPCI": "{{data.objectData.functionalPlanPCI}}"
      },
      "navigateIn": "newTab"
    },
    "removeConfigContextFromWorkpackage": {
      "actionType": "JSFunctionAsync",
      "method": "removeConfigContextFromWorkpackage",
      "inputData": {
        "selectedObject": "{{commandContext.selection}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "openConfigContextAction": {
      "actionType": "Navigate",
      "navigateIn": "newTab",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.selection}}",
          "path": "uid"
        }
      }
    },
    "removeProductionProgramFromWorkpackage": {
      "actionType": "JSFunctionAsync",
      "method": "removeObject",
      "inputData": {
        "selectedObject": "{{commandContext.selection}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "editProductionProgramPopup": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "EpEditProductionProgramPopup",
          "caption": "{{i18n.editProductionProgramPopupTitle}}",
          "height": "560",
          "width": "770",
          "preset": "modal",
          "independent": true,
          "draggable": true
        }
      }
    },
    "removeProductVariantFromProductionProgramCommandAction": {
      "actionType": "JSFunction",
      "method": "removeProductVariantFromProductionProgram",
      "inputData": {
        "selectedObject": "{{commandContext.selectedObjects}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "openCreateProductionProgramPopup": {
      "actionType": "JSFunctionAsync",
      "method": "showCreateProductPopup",
      "inputData": {
        "data": {
          "declView": "EpCreateObject",
          "locals": {
            "caption": "{{i18n.addProductionProgramCaption}}"
          },
          "options": {
            "height": "500",
            "width": "450",
            "preset": "modal",
            "independent": true,
            "draggable": true
          },
          "subPanelContext": {
            "objectBaseType": "Mfg0MEProdPrgCol",
            "subTypeExclusionList": [],
            "hideCreateAndAddMoreButton": true,
            "workPackage": "{{ctx.epTaskPageContext.collaborationContext.uid}}"
          }
        }
      },
      "outputData": {
        "popupId": ""
      },
      "deps": "js/createAndAddProductToWPUtils"
    },
    "createDynamicInProcessAssemblyCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "createDIPA",
      "inputData": {
        "inputObject": "{{ctx.ep.scopeObject}}",
        "sharedSelectionData": "{{commandContext.sharedSelectionData}}"
      },
      "deps": "js/epDynamicInProcessAssemblyService"
    },
    "updateDynamicInProcessAssemblyCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "updateDIPA",
      "inputData": {
        "inputObject": "{{ctx.ep.scopeObject}}",
        "sharedSelectionData": "{{commandContext.sharedSelectionData}}"
      },
      "deps": "js/epDynamicInProcessAssemblyService"
    },
    "removeIntegratedBOMFromWorkpackage": {
      "actionType": "JSFunctionAsync",
      "method": "removeObject",
      "inputData": {
        "selectedObject": "{{ctx.epTaskPageContext.EbomStructureContext}}"
      },
      "deps": "js/epRemoveObjectService"
    },
    "deletePriFlowAction": {
      "actionType": "JSFunctionAsync",
      "method": "deleteFlow",
      "inputData": {
        "arrowData": "{{commandContext.arrowIndications}}"
      },
      "deps": "js/epPriService"
    }
  },
  "i18n": {
    "epShowActivitiesToggleCommandTitle": [
      "ActivitiesMessages"
    ],
    "epHideActivitiesToggleCommandTitle": [
      "ActivitiesMessages"
    ],
    "searchActivity": [
      "epDataCardMessages"
    ],
    "createActivityFromDataCard": [
      "epDataCardMessages"
    ],
    "searchActivityDescription": [
      "epDataCardMessages"
    ],
    "createActivityFromDataCardDescription": [
      "epDataCardMessages"
    ],
    "deleteButtonTitle": [
      "ActivitiesMessages"
    ],
    "createClassicActivityCmdTitle": [
      "ActivitiesMessages"
    ],
    "createClassicActivityCmdDescription": [
      "ActivitiesMessages"
    ],
    "ManageToolTip": [
      "EPMessages"
    ],
    "authorBOETaskCommandTitle": [
      "AuthorPlantMessages"
    ],
    "authorBOETaskCommandTileDescription": [
      "AuthorPlantMessages"
    ],
    "authorBOETaskCommandTileCriteria": [
      "AuthorPlantMessages"
    ],
    "autoGenerateStructureCmdTitle": [
      "AdminMessages"
    ],
    "autoGenerateStructureCmdDescription": [
      "AdminMessages"
    ],
    "createWorkPackageHeaderTitle": [
      "AdminMessages"
    ],
    "removeStructureTitle": [
      "AdminMessages"
    ],
    "epCreateStructureFromMirrorTitle": [
      "AdminMessages"
    ],
    "updateEBOMRevisionCommand": [
      "AdminMessages"
    ],
    "NoRevisionNotification": [
      "AdminMessages"
    ],
    "add": [
      "AdminMessages"
    ],
    "backToBalancingTitle": [
      "FunctionalPlanMessages"
    ],
    "productBOPAuthoringTaskTitle": [
      "FunctionalPlanMessages"
    ],
    "productBOPAuthoringTileDescription": [
      "FunctionalPlanMessages"
    ],
    "productBOPAuthoringTileCriteria": [
      "FunctionalPlanMessages"
    ],
    "createGroupTitle": [
      "AssemblyMessages",
      "AssemblyMessages"
    ],
    "openInNewTab": [
      "AlternativeMessages",
      "DetailsMessages"
    ],
    "createAlternativeTitle": [
      "AlternativeMessages"
    ],
    "createPartialAlternativeTitle": [
      "AlternativeMessages"
    ],
    "manageAlternativeTitle": [
      "AlternativeMessages"
    ],
    "searchPartialAlternatives": [
      "AlternativeMessages"
    ],
    "goToMasterTitle": [
      "AlternativeMessages"
    ],
    "cloneAlternativeTitle": [
      "AlternativeMessages"
    ],
    "configureBOPByEffectivityTitle": [
      "epBvrMaturityMessages"
    ],
    "ok": [
      "EPMessages",
      "EPMessages"
    ],
    "cancel": [
      "EPMessages",
      "InstructionsEditorMessages"
    ],
    "checkOutTooltip": [
      "epBvrMaturityMessages"
    ],
    "checkInTooltip": [
      "epBvrMaturityMessages"
    ],
    "checkInConfirmation": [
      "epBvrMaturityMessages"
    ],
    "createReportPopupTitle": [
      "ReportsMessages"
    ],
    "createReportCommandTitle": [
      "ReportsMessages"
    ],
    "openShowObjectTitle": [
      "InformationMessages"
    ],
    "unassign": [
      "DetailsMessages",
      "wiPmiMessages"
    ],
    "setOccurrenceType": [
      "DetailsMessages"
    ],
    "removeWorkarea": [
      "DetailsMessages",
      "BoeMessages"
    ],
    "attachFile": [
      "DetailsMessages"
    ],
    "attachFileCmdDesc": [
      "DetailsMessages"
    ],
    "downloadAttachment": [
      "DetailsMessages"
    ],
    "downloadAttachmentDescription": [
      "DetailsMessages"
    ],
    "deleteAttachment": [
      "DetailsMessages"
    ],
    "deleteAttachmentDescription": [
      "DetailsMessages"
    ],
    "delete": [
      "epDeleteMessages"
    ],
    "paste": [
      "DetailsMessages"
    ],
    "addWebLink": [
      "DetailsMessages"
    ],
    "createWebLink": [
      "DetailsMessages"
    ],
    "removeScopeFlow": [
      "DetailsMessages"
    ],
    "removeScopeFlowDescription": [
      "DetailsMessages"
    ],
    "epCreateDCDTitle": [
      "DetailsMessages"
    ],
    "epRemoveDCDTitle": [
      "DetailsMessages"
    ],
    "epPasteInspectionDefinitionPartsTitle": [
      "epCopyMessages"
    ],
    "epPasteInspectionDefinitionPartsDescription": [
      "epCopyMessages"
    ],
    "epPasteInspectionDefinitionPartsCriteria": [
      "epCopyMessages"
    ],
    "clearImpactIndicationTitle": [
      "DetailsMessages"
    ],
    "clearIndicationBtnText": [
      "DetailsMessages"
    ],
    "clearImpactIndicationDesc": [
      "DetailsMessages"
    ],
    "clearImpactIndicationConfirmation": [
      "DetailsMessages"
    ],
    "restoreImpactIndicationTitle": [
      "DetailsMessages"
    ],
    "restoreImpactIndicationDesc": [
      "DetailsMessages"
    ],
    "createOperationCmdTitle": [
      "CreateObjectMessages"
    ],
    "createProcessAreaCmdTitle": [
      "CreateObjectMessages"
    ],
    "gotoPreviousPageCmdTitle": [
      "CreateObjectMessages"
    ],
    "assignProjectCmdTitle": [
      "CreateObjectMessages"
    ],
    "createProcessCmdTitle": [
      "CreateObjectMessages"
    ],
    "createProcessTargetLabel": [
      "CreateObjectMessages"
    ],
    "createFolderCmdTitle": [
      "CreateObjectMessages"
    ],
    "createProcessResourceCmdTitle": [
      "CreateObjectMessages"
    ],
    "createCompoundOperationTitle": [
      "CreateObjectMessages"
    ],
    "createExecutionStepTitle": [
      "CreateObjectMessages"
    ],
    "createFunctionalGroupTitle": [
      "CreateObjectMessages"
    ],
    "resetLayoutTitle": [
      "PertMessages"
    ],
    "resetLayoutDescription": [
      "PertMessages"
    ],
    "updateFlowsTitle": [
      "PertMessages"
    ],
    "updateFlowsDescription": [
      "PertMessages"
    ],
    "showInPertDiagramTitle": [
      "PertMessages"
    ],
    "showInPertDiagramDescription": [
      "PertMessages"
    ],
    "showBOPTitle": [
      "PertMessages"
    ],
    "showBOPDescription": [
      "PertMessages"
    ],
    "epCmdDeleteTitle": [
      "epDeleteMessages",
      "epDeleteMessages"
    ],
    "epCmdDeleteDesc": [
      "epDeleteMessages",
      "epDeleteMessages"
    ],
    "epCmdUnassignTitle": [
      "epDeleteMessages"
    ],
    "addClone": [
      "clonePasteObjectMessages"
    ],
    "cloneOperation": [
      "clonePasteObjectMessages"
    ],
    "cloneProcess": [
      "clonePasteObjectMessages"
    ],
    "cloneOperationSearchPlaceHolder": [
      "clonePasteObjectMessages"
    ],
    "cloneProcessSearchPlaceHolder": [
      "clonePasteObjectMessages"
    ],
    "epCmdPasteIntoTitle": [
      "epCopyMessages",
      "epCopyMessages"
    ],
    "epCmdPasteGroupTitle": [
      "epCopyMessages",
      "epCopyMessages"
    ],
    "epCmdPasteBeforeTitle": [
      "epCopyMessages",
      "epCopyMessages"
    ],
    "epCmdPasteAfterTitle": [
      "epCopyMessages",
      "epCopyMessages"
    ],
    "epPack": [
      "epPackUnpackMessages"
    ],
    "epUnpack": [
      "epPackUnpackMessages"
    ],
    "epPasteRefPartsTitle": [
      "epCopyMessages"
    ],
    "epPasteRefPartsDescription": [
      "epCopyMessages"
    ],
    "epPasteRefPartsCriteria": [
      "epCopyMessages"
    ],
    "epUnpackAll": [
      "epPackUnpackMessages"
    ],
    "epPackAll": [
      "epPackUnpackMessages"
    ],
    "regenerateFindNumberTitle": [
      "regenerateFindNumberMessages"
    ],
    "regenerateFindNumberDescription": [
      "regenerateFindNumberMessages"
    ],
    "submitToWorkflowTitle": [
      "WorkflowMessages"
    ],
    "submitToWorkflowDescription": [
      "WorkflowMessages"
    ],
    "runValidationsCommandTitle": [
      "epValidationMessages"
    ],
    "openValidationsPanelCommandTitle": [
      "epValidationMessages"
    ],
    "closeValidationsPanelCommandTitle": [
      "epValidationMessages"
    ],
    "processPlanningTitle": [
      "AssemblyMessages",
      "HighLevelPlanningMessages"
    ],
    "assemblyPlanningTaskDescription": [
      "AssemblyMessages"
    ],
    "openProcessInProcessPlanningPopupTitle": [
      "AssemblyMessages"
    ],
    "selectProcessToOpenInAssemblyPlanningMessage": [
      "AssemblyMessages"
    ],
    "inHLPselectProcessToOpenInAssemblyPlanningMessage": [
      "AssemblyMessages"
    ],
    "assignWorkAreaTile": [
      "BoeMessages"
    ],
    "assignWorkAreaDescription": [
      "BoeMessages"
    ],
    "addWorkArea": [
      "BoeMessages"
    ],
    "noPlantStructureAvailableErrorMessage": [
      "BoeMessages"
    ],
    "WorkInstructionsTitle": [
      "InstructionsMessages"
    ],
    "openWorkInstructionsCommandTitle": [
      "InstructionsMessages"
    ],
    "openWorkInstructionsCommandDescription": [
      "InstructionsMessages"
    ],
    "openInEwi": [
      "InstructionsMessages"
    ],
    "errorMessageForProcessGoTo": [
      "navigationMessages"
    ],
    "selectProcessToOpenInWIAuthorMessage": [
      "InstructionsMessages"
    ],
    "inHLPselectProcessToOpenInWIAuthorMessage": [
      "InstructionsMessages"
    ],
    "assignToProcessResource": [
      "BalancingMessages"
    ],
    "openTimeDistributionTooltip": [
      "BalancingMessages"
    ],
    "LineBalancingTitle": [
      "BalancingMessages"
    ],
    "lineBalancingTileDescription": [
      "BalancingMessages"
    ],
    "showProductBOP": [
      "BalancingMessages"
    ],
    "hideProductBOP": [
      "BalancingMessages"
    ],
    "createOperator": [
      "BalancingMessages"
    ],
    "epBalancingCmdDeleteOperatorTitle": [
      "BalancingMessages"
    ],
    "epBalancingEditPrCapacityCommandName": [
      "BalancingMessages"
    ],
    "epBalancingEditPrCapacityPopupTitle": [
      "BalancingMessages"
    ],
    "epMoreActionsCommandDescription": [
      "navigationMessages",
      "navigationMessages",
      "navigationMessages",
      "navigationMessages"
    ],
    "openLineLayout": [
      "LayoutMessages"
    ],
    "epShowPartPlanningActivitiesToggleCommandTitle": [
      "PartPlanningMessages"
    ],
    "epHidePartPlanningActivitiesToggleCommandTitle": [
      "PartPlanningMessages"
    ],
    "epPartPlanningActivitiesToggleCommandToolTipDescription": [
      "PartPlanningMessages"
    ],
    "epPartPlanningPasteItemTitle": [
      "PartPlanningMessages"
    ],
    "epPartPlanningPasteItemDescription": [
      "PartPlanningMessages"
    ],
    "removeScope": [
      "PlanningMessages"
    ],
    "operationPlanningPageTitle": [
      "PlanningMessages"
    ],
    "selectProductVariantsPopupTitle": [
      "PlanningMessages"
    ],
    "availableProductVariantsTitle": [
      "PlanningMessages"
    ],
    "selectedProductVariantsTitle": [
      "PlanningMessages"
    ],
    "more": [
      "wiPmiMessages",
      "InstructionsEditorMessages"
    ],
    "missingInSourcePmi": [
      "wiPmiMessages"
    ],
    "update": [
      "wiPmiMessages"
    ],
    "pmiUpdateCommandDescription": [
      "wiPmiMessages"
    ],
    "syncBOE": [
      "TwinMessages"
    ],
    "syncPlantDesc": [
      "TwinMessages"
    ],
    "syncPlantBOPDesc": [
      "TwinMessages"
    ],
    "save": [
      "InstructionsEditorMessages",
      "InstructionsEffectivityMessages"
    ],
    "tips": [
      "InstructionsEditorMessages"
    ],
    "validateEffectivityPopupTitle": [
      "InstructionsEffectivityMessages"
    ],
    "setEffectivity": [
      "InstructionsEffectivityMessages"
    ],
    "setEffectivityDesc": [
      "InstructionsEffectivityMessages"
    ],
    "setEffectivityPopupTitle": [
      "InstructionsEffectivityMessages"
    ],
    "deleteEffectivity": [
      "InstructionsEffectivityMessages"
    ],
    "createEffectivity": [
      "InstructionsEffectivityMessages"
    ],
    "editEffectivity": [
      "InstructionsEffectivityMessages"
    ],
    "addEffectivity": [
      "InstructionsEffectivityMessages"
    ],
    "highLevelPlanningTaskTitle": [
      "HighLevelPlanningMessages"
    ],
    "highLevelPlanningCmdCutTitle": [
      "HighLevelPlanningMessages"
    ],
    "highLevelPlanningCmdCutDesc": [
      "HighLevelPlanningMessages"
    ],
    "openPlanningCommandTileDescription": [
      "HighLevelPlanningMessages"
    ],
    "openPlanningCommandTileCriteria": [
      "HighLevelPlanningMessages"
    ],
    "highLevelPlanningCloneProcessGroupCmdTitle": [
      "HighLevelPlanningMessages"
    ],
    "highLevelPlanningCloneProcessGroupCmdDesc": [
      "HighLevelPlanningMessages"
    ],
    "cloneProcessWithSameAssemblyTitle": [
      "HighLevelPlanningMessages"
    ],
    "cloneProcessWithSelectedAssemblyTitle": [
      "HighLevelPlanningMessages"
    ],
    "epMoreActionsCommandTitle": [
      "navigationMessages",
      "navigationMessages",
      "navigationMessages"
    ],
    "backgroundPartsTaskTitle": [
      "BackgroundPartsMessages"
    ],
    "openBackgroundPartsTaskDescription": [
      "BackgroundPartsMessages"
    ],
    "openBackgroundPartsTaskCriteria": [
      "BackgroundPartsMessages"
    ],
    "assignBackgroundPartsCmdTitle": [
      "BackgroundPartsMessages"
    ],
    "assignBackgroundPartsCmdDesc": [
      "BackgroundPartsMessages"
    ],
    "removeBackgroundPartsCmdTitle": [
      "BackgroundPartsMessages"
    ],
    "removeBackgroundPartsCmdDesc": [
      "BackgroundPartsMessages"
    ],
    "showMatchingEBOMLineCommandTitle": [
      "BackgroundPartsMessages"
    ],
    "createProcess": [
      "AdminMessages"
    ],
    "processSearchPlaceHolder": [
      "AdminMessages"
    ],
    "epGeneratePlantFromPlantBOPTitle": [
      "AdminMessages"
    ],
    "epAddAssociatedPlantTitle": [
      "AdminMessages"
    ],
    "epAddAssociatedPlantPopupTitle": [
      "AdminMessages"
    ],
    "epGeneratePlantBOPFromPlantTitle": [
      "AdminMessages"
    ],
    "epAddAssociatedPlantBOPTitle": [
      "AdminMessages"
    ],
    "epAddAssociatedPlantBOPPopupTitle": [
      "AdminMessages"
    ],
    "mbomStructureConfigurationPanelTitle": [
      "structureConfigurationMessages"
    ],
    "ebomStructureConfigurationPanelTitle": [
      "structureConfigurationMessages"
    ],
    "bopConfiguration": [
      "structureConfigurationMessages"
    ],
    "mbomConfiguration": [
      "structureConfigurationMessages"
    ],
    "ebomConfiguration": [
      "structureConfigurationMessages"
    ],
    "bopConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "mbomConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "ebomConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "resetAllConfiguration": [
      "structureConfigurationMessages"
    ],
    "resetAllConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "cancelResetAllConfiguration": [
      "structureConfigurationMessages"
    ],
    "proceedResetAllConfiguration": [
      "structureConfigurationMessages"
    ],
    "resetAllConfigurationConfirmation": [
      "structureConfigurationMessages"
    ],
    "plantConfiguration": [
      "structureConfigurationMessages"
    ],
    "plantConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "productBopConfiguration": [
      "structureConfigurationMessages"
    ],
    "productBopConfigurationDesc": [
      "structureConfigurationMessages"
    ],
    "viewOtherConfigurationTitle": [
      "structureConfigurationMessages"
    ],
    "viewOtherConfigurationTitleDesc": [
      "structureConfigurationMessages"
    ],
    "setConfiguratorContext": [
      "AdminMessages"
    ],
    "set": [
      "AdminMessages"
    ],
    "openConfigContext": [
      "AdminMessages"
    ],
    "createNewProductionProgram": [
      "AdminMessages"
    ],
    "useExistingProductionProgram": [
      "AdminMessages"
    ],
    "editProductionProgram": [
      "AdminMessages"
    ],
    "removeProductionProgram": [
      "AdminMessages"
    ],
    "editProductionProgramPopupTitle": [
      "AdminMessages"
    ],
    "remove": [
      "AdminMessages"
    ],
    "productionprogramTileTitle": [
      "AdminMessages"
    ],
    "createProductionProgram": [
      "AdminMessages"
    ],
    "addProductionProgramCaption": [
      "AdminMessages"
    ],
    "createProductionProgramToolTip": [
      "AdminMessages"
    ],
    "createDIPACmdTitle": [
      "DipaMessages"
    ],
    "updateDIPACmdTitle": [
      "DipaMessages"
    ],
    "deleteFlowCommand": [
      "PriMessages"
    ]
  },
  "onEvent": [
    {
      "eventId": "CCParamsConstructedForPinObjectSuccessfully",
      "action": "getPinDelegateInputs",
      "cacheEventData": true
    },
    {
      "eventId": "mfeLargePopup.closeRequest",
      "action": "closePopupWindow"
    },
    {
      "eventId": "openAssignWorkareaPopupFromWorkAreaTable",
      "cacheEventData": true,
      "action": "openAssignWorkareaPopupFromWorkAreaTable"
    },
    {
      "eventId": "openAssemblyPlanningPageEvent",
      "action": "openAssemblyPlanningPageWithProcessTopNode",
      "inputArgs": {
        "eventData": "{{eventData}}"
      }
    },
    {
      "eventId": "epOpenAssignWorkareaPopup",
      "action": "epOpenAssignWorkareaPopup"
    },
    {
      "eventId": "openWorkInstructionsPageEvent",
      "action": "openWorkInstructionsPageWithProcessTopNode"
    },
    {
      "eventId": "openAssignWorkareaPopupFromProcessTree",
      "action": "openAssignWorkareaPopupFromProcessTree"
    },
    {
      "eventId": "missingInSourcePmiMoreCommand.clicked",
      "message": "missingInSourcePmiMessage"
    },
    {
      "eventId": "openProcessPageEvent",
      "action": "openHighLevelPlanningTaskSwitcherCommandAction"
    },
    {
      "eventId": "openAssociateCnWpPopupEvent",
      "action": "ShowAssociateCnWorkpackagePopup",
      "inputArgs": {
        "eventData": "{{eventData}}"
      }
    }
  ],
  "preferences": [
    "EP_ShowOnlyEWI",
    "AWC_CancelEdit_Confirmation"
  ],
  "functions": {
    "getNewlyAddedChildElementsForSelection": {
      "functionName": "getNewlyAddedChildElementsForSelection",
      "parameters": [
        "{{data}}"
      ]
    }
  },
  "messages": {
    "noEbomNotification": {
      "messageType": "INFO",
      "messageText": "{{i18n.NoRevisionNotification}}",
      "messageTextParams": [
        "{{ctx.epTaskPageContext.ebomStructure.props.object_string.dbValues[0]}}"
      ]
    },
    "epCheckInConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.checkInConfirmation}}",
      "messageTextParams": [
        "{{ctx.epPageContext.loadedObject.props.bl_rev_object_name.dbValues[0]}}",
        "{{data.checkedOutParent}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "OK",
          "text": "{{i18n.ok}}",
          "action": "epCheckInCommandAction"
        }
      ]
    },
    "clearImpactIndicationConfirmation": {
      "messageType": "WARNING",
      "messageText": "{{i18n.clearImpactIndicationConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Clear",
          "text": "{{i18n.clearIndicationBtnText}}",
          "action": "epClearImpactIndicationAction"
        }
      ],
      "messageTextParams": []
    },
    "noPlantStructureAvailableErrorMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.noPlantStructureAvailableErrorMessage}}",
      "messageTextParams": [
        "{{ctx.epPageContext.collaborationContext.props.object_string.uiValues[0]}}"
      ]
    },
    "missingInSourcePmiMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.missingInSourcePmi}}",
      "messageTextParams": [
        "{{commandContext.vmo.props['mci0PmiDescription'].uiValue}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.ok}}"
        }
      ]
    },
    "epResetAllStructureConfigurationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetAllConfigurationConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancelResetAllConfiguration}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.proceedResetAllConfiguration}}",
          "action": "epResetAllConfigurationAction"
        }
      ]
    }
  },
  "schemaVersion": "1.0.0",
  "data": {
    "inputObject": "{{ports.EpValidationMessage_inputObject.syncObject[0]}}"
  }
}

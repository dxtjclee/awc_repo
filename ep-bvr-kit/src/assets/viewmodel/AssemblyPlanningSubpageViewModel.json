{
    "schemaVersion": "1.0.0",
    "props": {
        "view-path": {
            "type": "object"
        },
        "sub-panel-context": {
            "type": "object"
        },
        "provider": {
            "type": "object"
        },
        "tab-config": {
            "type": "object"
        },
        "assembly-tabs-config": {
            "type": "object"
        },
        "details-tabs-config": {
            "type": "object"
        },
        "occ-context":{
            "type": "object"
        }
    },
    "ports": {
        "AssemblyPlanningSubpage_updateIndicationContextPort": {
            "syncObject": {}
        }
    },
    "actions": {
        "clearOccContextNClosePanelCommandAction": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "clearOccContext"
                },
                {
                    "action": "unRegisterPanelContext"
                },
                {
                    "action": "closeSetEffectivityPanel"
                }
            ]
        },
        "unRegisterPanelContext": {
            "actionType": "JSFunction",
            "method": "unRegisterCtx",
            "deps": "js/appCtxService",
            "inputData": {
                "path": "panelContext"
            }
        },
        "clearOccContext": {
            "actionType": "JSFunction",
            "method": "mergeValueInAtomicData",
            "inputData": {
                "targetAtomicData": "{{props.occContext}}",
                "updatedValues": {
                    "selectedModelObjects": [""]
                }
            },
            "deps": "js/mfeViewModelUtils"
        },
        "closeSetEffectivityPanel": {
            "actionType": "JSFunction",
            "method": "closeSetEffectivityPanel",
            "inputData": {
                "id": "aw_toolsAndInfo"
            },
            "deps": "js/epSetEffectivityService"
        },
        "getProperty": {
            "actionType": "JSFunction",
            "method": "getProperty",
            "inputData": {
                "name": "{{ctx.epTaskPageContext.processStructure.uid}}",
                "propertyName": "ChangeImpactedIndication"
            },
            "outputData": {
                "isIconVisible": ""
            },
            "deps": "js/epObjectPropertyCacheService"
        },
        "occEffectivityFailureSubscribe": {
            "actionType" :"JSFunction",
            "method": "processPartialErrorsFromSOA",
            "inputData": {
                "value": "{{parameters.eventData.effResp.ServiceData}}"
            },
            "deps": "js/epLoadService"
        },
        "setIconOnTab": {
            "actionType": "JSFunction",
            "method": "setIconOnTab",
            "inputData": {
                "contentPanelData": "{{data.contentPanelData}}",
                "tabKey": "{{props.tabConfig.tabKey}}",
                "shouldBeVisible": "{{data.affectedUIds}}",
                "iconName": "indicatorImpacted"
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/epTabsService"
        },
        "publishIsIconVisible": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "getProperty"
                },
                {
                    "action": "setIconOnTab",
                    "condition":"data.isIconVisible !== '' && data.sharedSelectionData.isIndicationToggleOn === true"
                }
            ]
        },
        "updateIconOnProcess": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "resetChangeIndicationIconVisibility"
                },
                {
                    "action": "getChangeIndicationData"
                },
                {
                    "action": "setChangeIndicationIconVisibility",
                    "condition":"data.affectedUIds !== '' && data.sharedSelectionData.isIndicationToggleOn === true"
                }
            ]
        },
        "resetChangeIndicationIconVisibility": {
            "actionType": "JSFunction",
            "method": "setIconOnTab",
            "inputData": {
                "contentPanelData": "{{data.contentPanelData}}",
                "tabKey": "ApProcessTree",
                "shouldBeVisible": false
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/epTabsService"
        },
        "getChangeIndicationData": {
            "actionType": "JSFunction",
            "method": "getProperty",
            "inputData": {
                "name": "{{ctx.epTaskPageContext.loadedObject.uid}}",
                "propertyName": "ChangeLoadedProcessIndication"
            },
            "outputData": {
                "affectedUIds": ""
            },
            "deps": "js/epObjectPropertyCacheService"
        },
        "setChangeIndicationIconVisibility": {
            "actionType": "JSFunction",
            "method": "setIconOnTab",
            "inputData": {
                "contentPanelData": "{{data.contentPanelData}}",
                "tabKey": "{{props.tabConfig.tabKey}}",
                "shouldBeVisible": "{{data.affectedUIds}}",
                "iconName": "indicatorImpacted"
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/epTabsService"
        },
        "init": {
            "actionType": "JSFunction",
            "method": "init",
            "deps": "js/epLeavePlaceHandler"
        },
        "initializeEPPage": {
            "actionType": "JSFunctionAsync",
            "method": "initializeEPPage",
            "inputData": {
                "provider": "{{props.provider}}"
            },
            "outputData": {
                "stateContext": "stateContext",
                "propertyPolicyId": "propertyPolicyId"
            },
            "deps": "js/epInitializationService"
        },
        "destroy": {
            "actionType": "JSFunction",
            "method": "destroy",
            "deps": "js/epLeavePlaceHandler"
        },
        "updateVisibleTabs": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "showBOPTreeView",
                    "condition": "!data.sharedSelectionData.isPertModeActive && !data.sharedSelectionData.isPRIModeActive"
                },
                {
                    "action": "showPERTSequenceView",
                    "condition": "data.sharedSelectionData.isPertModeActive && !data.sharedSelectionData.isPRIModeActive"
                },
                {
                    "action": "showPRISequenceView",
                    "condition": "!data.sharedSelectionData.isPertModeActive && data.sharedSelectionData.isPRIModeActive"
                }
            ]
        },
        "showBOPTreeView": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "contentPanelData": {
                    "tabs": [ {
                            "name": "{{props.tabConfig.tabTitle}}",
                            "tabKey": "{{props.tabConfig.tabKey}}"
                        }
                    ],
                    "cmdDisplayOption": "toolbarBelowTabs",
                    "sharedCommandAnchor": "processLayoutAreaAnchor"
                }
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "showPERTSequenceView": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "contentPanelData": {
                    "tabs": [ {
                            "name": "{{props.tabConfig.tabTitle}}",
                            "tabKey": "EpPert",
                            "contextObject": "{{data.sharedSelectionData.selected[0]}}"
                        }
                    ],
                    "cmdDisplayOption": "toolbarBelowTabs",
                    "sharedCommandAnchor": "processLayoutAreaAnchor"
                }
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "showPRISequenceView": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "contentPanelData": {
                    "tabs": [ {
                            "name": "{{props.tabConfig.tabTitle}}",
                            "tabKey": "EpPlanningOperationsSequence",
                            "contextObject": "{{data.sharedSelectionData.selected[0]}}"
                        }
                    ],
                    "cmdDisplayOption": "toolbarBelowTabs",
                    "sharedCommandAnchor": "processLayoutAreaAnchor"
                }
            },
            "outputData": {
                "contentPanelData": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "handleInit": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "init"
                },
                {
                    "action": "initializeEPPage"
                },
                {
                    "action": "showBOPTreeView",
                    "condition": "!data.sharedSelectionData.isPertModeActive && !data.sharedSelectionData.isPRIModeActive"
                },
                {
                    "action": "showPERTSequenceView",
                    "condition": "data.sharedSelectionData.isPertModeActive && !data.sharedSelectionData.isPRIModeActive"
                },
                {
                    "action": "showPRISequenceView",
                    "condition": "!data.sharedSelectionData.isPertModeActive && data.sharedSelectionData.isPRIModeActive"
                },
                {
                    "action": "updateSharedSelectionPort"
                },
                {
                    "action": "initialiseConfigurationChips"
                },
                {
                    "action": "epPageInitializeComplete"
                }
            ]
        },
        "epPageInitializeComplete":{
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
               "initialize":true
            },
            "outputData": {
                "pageIntializeComplete": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "updateSharedSelectionPort": {
            "actionType": "Sync",
            "inputData": {
                "port": "AssemblyPlanningSubpage_updateIndicationContextPort",
                "syncObject": "{{fields.sharedSelectionData}}"
            }
        },
        "initialiseConfigurationChips":{
            "actionType": "JSFunction",
            "method": "mergeValueInAtomicData",
            "inputData": {
                "targetContext":"{{fields.configurationChipsData}}",
                "updatedValues":{
                    "ebomStructure":"{{ctx.epPageContext.ebomStructure}}",
                    "ebomPCI":"{{ctx.epTaskPageContext.ebomPCI}}",
                    "ebomStructureConfigFlags":"{{ctx.epTaskPageContext.ebomStructureConfigFlags}}",
                    "mbomStructure":"{{ctx.epPageContext.mbomStructure}}",
                    "mbomPCI":"{{ctx.epTaskPageContext.mbomPCI}}",
                    "mbomStructureConfigFlags":"{{ctx.epTaskPageContext.mbomStructureConfigFlags}}",
                    "processStructure":"{{ctx.epPageContext.processStructure}}",
                    "processPCI":"{{ctx.epTaskPageContext.processPCI}}",
                    "processStructureConfigFlags":"{{ctx.epTaskPageContext.processStructureConfigFlags}}",
                    "rootPlant":"{{ctx.epPageContext.rootPlant}}",
                    "plantPCI":"{{ctx.epTaskPageContext.plantPCI}}",
                    "rootPlantConfigFlags":"{{ctx.epTaskPageContext.rootPlantConfigFlags}}",
                    "functionalPlan":"{{ctx.epTaskPageContext.functionalPlan}}",
                    "functionalPlanPCI":"{{ctx.epTaskPageContext.functionalPlanPCI}}",
                    "functionalPlanConfigFlags":"{{ctx.epTaskPageContext.functionalPlanConfigFlags}}"
                }
            },
            "deps": "js/mfeViewModelUtils"
        },
        "hidePage":{
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "value": true
            },
            "outputData": {
                "hidePage": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "getIndicationsData": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "getImpactHandledData"
                },
                {
                    "action": "getMissingInSrcData"
                },
                {
                    "action": "showAllTabs",
                    "condition": "conditions.epShowAllTabs"
                },
                {
                    "action": "showMissingInSourceTabOnly",
                    "condition": "conditions.epShowMissingTabOnly"
                },
                {
                    "action": "showImpactHandledTabOnly",
                    "condition": "conditions.epShowImpactHandledTabOnly"
                },
                {
                    "action": "showNoTab",
                    "condition": "conditions.epShowNoTab"
                }
            ]
        },
        "getMissingInSrcData": {
            "actionType": "JSFunction",
            "method": "getProperty",
            "inputData": {
                "name": "{{ctx.epPageContext.loadedObject.uid}}",
                "propertyName": "accountabilityResponse"
            },
            "outputData": {
                "missingInSrc": "result.missingInSrc",
                "isMissingInSourceTabVisible": "result.missingInSrc.length"
            },
            "deps": "js/epObjectPropertyCacheService"
        },
        "getImpactHandledData": {
            "actionType": "JSFunction",
            "method": "getProperty",
            "inputData": {
                "name": "{{ctx.epPageContext.loadedObject.uid}}",
                "propertyName": "ImpactHandledObjects"
            },
            "outputData": {
                "impactHandled": "",
                "isImpactHandledTabVisible": ""
            },
            "deps": "js/epObjectPropertyCacheService"
        },
        "clearImpactHandledCache": {
            "actionType": "JSFunction",
            "method": "clearPropertyKeyCache",
            "inputData": {
                "name": "{{ctx.epPageContext.loadedObject.uid}}",
                "propertyName": "ImpactHandledObjects"
            },
            "deps": "js/epObjectPropertyCacheService"
        },
        "showAllTabs": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "missingInSourceTabsConfig": {
                    "tabs": [ {
                            "name": "{{i18n.missingInSource}}",
                            "tabKey": "EpMissingInSource"
                        },
                        {
                            "name": "{{i18n.impactsHandled}}",
                            "tabKey": "EpImpactHandled"
                        }
                    ]
                }
            },
            "outputData": {
                "missingInSourceTabsConfig": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "showNoTab": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "missingInSourceTabsConfig": {
                    "tabs": []
                }
            },
            "outputData": {
                "missingInSourceTabsConfig": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "showMissingInSourceTabOnly": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "missingInSourceTabsConfig": {
                    "tabs": [ {
                        "name": "{{i18n.missingInSource}}",
                        "tabKey": "EpMissingInSource"
                    } ]
                }
            },
            "outputData": {
                "missingInSourceTabsConfig": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "showImpactHandledTabOnly": {
            "actionType": "JSFunction",
            "method": "getValueInViewModel",
            "inputData": {
                "missingInSourceTabsConfig": {
                    "tabs": [ {
                        "name": "{{i18n.impactsHandled}}",
                        "tabKey": "EpImpactHandled"
                    } ]
                }
            },
            "outputData": {
                "missingInSourceTabsConfig": ""
            },
            "deps": "js/mfeViewModelUtils"
        },
        "unmount": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "clearImpactHandledCache"
                },
                {
                    "action": "destroy"
                }
            ]
        }
    },
    "data": {
        "awSubLocationPref": {
            "hideRightWall": true
        },
        "sharedSelectionData": {
            "initialValues": {
                "isPertModeActive": false,
                "isIndicationToggleOn": false,
                "isPRIModeActive": false
            },
            "meta": {}
        },
        "configurationChipsData":{
            "initialValues": {},
            "meta": {}
        },
        "contentPanelData": {
            "tabs": [ {
                    "name": "{{props.tabConfig.tabTitle}}",
                    "tabKey": "{{props.tabConfig.tabKey}}"
                }
            ],
            "cmdDisplayOption": "toolbarBelowTabs",
            "sharedCommandAnchor": "processLayoutAreaAnchor"
        },
        "missingInSourceTabsConfig": {
            "tabs": []
        }
    },
    "conditions": {
        "isPanelActive": {
            "expression": {
                "$or": [
                    {
                        "$source": "conditions.isValidationMode",
                        "$query": {
                            "$eq": true
                        }
                    },
                    {
                        "$source": "conditions.isActivitiesMode",
                        "$query": {
                            "$eq": true
                        }
                    },
                    {
                        "$source": "conditions.isPartPlanningActivitiesMode",
                        "$query": {
                            "$eq": true
                        }
                    }
                ]
            }
        },
        "isValidationMode": {
            "expression": {
                "$source": "ctx.epPageContext.showValidationPanel",
                "$query": {
                    "$eq": true
                }
            }
        },
        "isActivitiesMode": {
            "expression": {
                "$source": "ctx.epPageContext.showActivities",
                "$query": {
                    "$eq": "time"
                }
            }
        },
        "isPartPlanningActivitiesMode": {
            "expression": {
                "$source": "ctx.epPageContext.showActivities",
                "$query": {
                    "$eq": "part"
                }
            }
        },
        "epShowAllTabs": {
            "expression": "data.missingInSrc.length > 0 && data.impactHandled.length > 0 && conditions.hasTracking_cn && conditions.checkPreferenceEPC_RemoveChangeImpactIndications"
        },
        "epShowMissingTabOnly": {
            "expression": "data.missingInSrc.length > 0 && ( !data.impactHandled || (data.impactHandled && data.impactHandled.length < 1) )"
        },
        "epShowImpactHandledTabOnly": {
            "expression": "data.missingInSrc.length < 1 && data.impactHandled.length > 0 && conditions.hasTracking_cn && conditions.checkPreferenceEPC_RemoveChangeImpactIndications"
        },
        "epShowNoTab": {
            "expression": "data.missingInSrc.length < 1 && data.impactHandled.length < 1"
        },
        "checkPreferenceEPC_RemoveChangeImpactIndications": {
            "expression": "ctx.preferences.EPC_RemoveChangeImpactIndications[0] === 'true'"
        },
        "hasTracking_cn": {
            "expression": "ctx.state.params.tracking_cn && ctx.state.params.tracking_cn !== '' && ctx.state.params.tracking_cn !== 'undefined'"
        }
    },
    "onEvent": [
        {
            "eventId": "failedToAuthorEffectivityEvent",
            "action": "occEffectivityFailureSubscribe",
            "inputArgs": {
                "eventData": "{{eventData}}"
            }
        },
        {
            "eventId": "epObjectPropertyCache.ChangeImpactedIndicationUpdated",
            "action": "publishIsIconVisible"
        },
        {
            "eventId": "epObjectPropertyCache.ChangeLoadedProcessIndicationUpdated",
            "action": "updateIconOnProcess"
        },
        {
            "eventId": "complete",
            "action": "clearOccContextNClosePanelCommandAction"
        },
        {
            "eventId": "ep.pageContext.changed",
            "action": "initialiseConfigurationChips"
        },
        {
            "eventId":"ep.preSaveConfigurationEvent",
            "action":"hidePage"
        },
        {
            "eventId": "epObjectPropertyCache.ImpactHandledObjectsUpdated",
            "action": "getIndicationsData"
        },
        {
            "eventId": "ep.publishAssignmentIndicationChange",
            "action": "getIndicationsData"
        },
        {
            "eventId": "epObjectPropertyCache.accountabilityResponseUpdated",
            "action": "getIndicationsData"
        }
    ],
    "lifecycleHooks": {
        "onMount": "handleInit",
        "onUnmount": "unmount",
        "onUpdate": [
            {
                "action": "updateVisibleTabs",
                "observers": [
                    "viewModel.atomicData.sharedSelectionData.isPertModeActive",
                    "viewModel.atomicData.sharedSelectionData.isPRIModeActive"
                ]
            },
            {
                "action": "updateIconOnProcess",
                "observers": [
                    "viewModel.atomicData.sharedSelectionData.isIndicationToggleOn"
                ]
            }
        ]
    },
    "i18n": {
        "impactsHandled": [ "assignmentIndicationMessages" ],
        "missingInSource": [ "assignmentIndicationMessages" ]
    }
}

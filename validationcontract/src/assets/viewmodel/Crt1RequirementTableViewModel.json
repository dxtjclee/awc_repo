{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-splm-table.directive",
        "js/aw-panel-section.directive",
        "js/aw-chart.directive",
        "js/aw-row.directive",
        "js/aw-column.directive",
        "js/aw-i18n.directive",
        "js/aw-command-bar.directive",
        "js/aw-am-table-panel.directive"
    ],
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    },
    "lifecycleHooks": {
        "onUnmount": "removePieChartData",
        "onUpdate": [ {
            "action": "createPieChartForDynamicTables",
            "observers": [ "props.subPanelContext.context.vrSublocationState.pieChartData.vrTables.requirementsTableProvider.chartData" ]
        },
        {

            "action": "redrawRequirementsPieChart",
            "observers": [ "props.subPanelContext.context.vrSublocationState.pieChartData.vrTables.requirementsTableProvider.redrawRequirementPieAsDoubleFilter" ]
        },
        {
            "action": "handleSelectionChange",
            "observers": [ "viewModel.atomicData.selectionData" ]
        } ]

    },
    "actions": {
        "handleSelectionChange": {
            "actionType": "JSFunction",
            "method": "handleSelectionChange",
            "inputData": {
                "data": "{{data.dataProviders.requirementsTableProvider}}",
                "subPanelContext": "{{subPanelContext}}"
            },
            "outputData": {},
            "deps": "js/Crt1VROverviewTablesService"
        },
        "redrawRequirementsPieChart": {
            "actionType": "JSFunction",
            "method": "redrawSecondaryPieCharts",
            "inputData": {
                "input": "{{data}}"
            },
            "outputData": {
                "pieChartForRequirementsProvider_chartPoints": ""
            },
            "deps": "js/Crt1VROverviewTablesService",
            "events": {
                "success": [ {
                    "name": "redrawPieChartForDynamicTables"
                } ]
            }
        },
        "removePieChartData": {
            "actionType": "JSFunction",
            "method": "removePieChartData",
            "inputData": {
                "pieChartData": "{{props.subPanelContext.context.vrSublocationState.pieChartData}}",
                "table": "requirementsTableProvider",
                "pieClickedFlag": "requirementPieClicked",
                "pieDedrawFlag": "redrawRequirementPieAsDoubleFilter",
                "subPanelContext": "{{subPanelContext}}",
                "dataProvider": "{{data.dataProviders.requirementsTableProvider}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "editEventAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "plTable.editStateChange",
                        "eventData": {
                            "state": "{{data.eventData.state}}",
                            "dataSource": {
                                "dataProviders": "{{data.dataProviders}}"
                            }
                        }
                    }
                ]
            }
        },
        "handleVMCollectionUpdate": {
            "actionType": "JSFunction",
            "method": "handleHtmlPanelVMCollection",
            "deps": "js/xrtUtilities",
            "inputData": {
                "callback": "{{subPanelContext.callback.updateVMCollectionCallback}}",
                "response": {
                    "dataProvider": "{{data.dataProviders.requirementsTableProvider}}"
                }
            }
        },
        "doArrangeEvent": {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/dynamicTableUtils"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",

            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "operationType": "as_arranged",
                    "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('Requirement')}}"
                },
                "saveColumnConfigData": {
                    "clientScopeURI":"{{subPanelContext.context.vrSublocationState.scopeURI.get('Requirement')}}",
                    "columnConfigId": "{{subPanelContext.context.vrSublocationState.columnConfig.get('Requirement')}}",
                    "columns": "{{data.dataProviders.requirementsTableProvider.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                },
                "searchInput": {
                    "maxToLoad": 30,
                    "maxToReturn": 30,
                    "providerName": "Crt1AnalysisRequestInProvider",
                    "attributesToInflate":["crt1SourceObject"],
                    "searchCriteria": {
                        "parentUid": "{{function:getParentUid}}",
                        "dcpSortByDataProvider": "true",
                        "tableUID":"Requirement"
                    },
                    "searchFilterFieldSortType": "Alphabetical",
                    "searchSortCriteria": "{{data.columnProviders.requirementsTableColumnProvider.sortCriteria}}",
                    "startIndex": "{{data.dataProviders.requirementsTableProvider.startIndex}}",
                    "columnFilters": "{{function:getColumnFiltersForDynamicTables}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.requirementsTableProvider.columnConfig": "{{function:getColumnDataForDynamicTables}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "resetColumnConfig": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-UiConfig",
            "method": "getOrResetUIColumnConfigs4",
            "inputData": {
                "getOrResetUiConfigsIn": [
                    {
                        "scope": "LoginUser",
                        "scopeName": "",
                        "clientName": "AWClient",
                        "resetColumnConfig": true,
                        "columnConfigQueryInfos": [
                            {
                                "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('Requirement')}}",
                                "operationType": "configured",
                                "typeNames": [
                                    "WorkspaceObject"
                                ],
                                "columnsToExclude": []
                            }
                        ],
                        "businessObjects": [
                            {}
                        ]
                    }
                ]
            },
            "outputData": {
                "dataProviders.requirementsTableProvider.resetColumnConfigs": "{{function:getColumnDataForDynamicTables}}"
            },
            "events": {
                "success": [ {
                    "name": "requirementsTable.plTable.reload"
                } ]
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "loadDataForRequirements": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('Requirement')}}",
                    "operationType": "as_configured"
                },
                "searchInput": {
                    "maxToLoad": 30,
                    "maxToReturn": 30,
                    "providerName": "Crt1AnalysisRequestInProvider",
                    "attributesToInflate":["crt1SourceObject"],
                    "searchCriteria": {
                        "parentUid": "{{function:getParentUid}}",
                        "dcpSortByDataProvider": "true",
                        "tableUID":"Requirement"
                    },
                    "searchFilterFieldSortType": "Alphabetical",
                    "searchSortCriteria": "{{data.columnProviders.requirementsTableColumnProvider.sortCriteria}}",
                    "startIndex": "{{data.dataProviders.requirementsTableProvider.startIndex}}",
                    "columnFilters": "{{function:getColumnFiltersForDynamicTables}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.requirementsTableProvider.columnConfig": "{{function:getColumnDataForDynamicTables}}"
            },
            "actionMessages": {
                "failure": [ {
                    "message": "SOAFailureMsg"
                } ]
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "createPieChartForDynamicTables": {
            "actionType": "JSFunction",
            "method": "createPieChartForDynamicTables",
            "inputData": {
                "input": "{{data}}",
                "tableColumnFilters": "reqTableColumnFilters",
                "redrawFlag": "redrawRequirementPieAsDoubleFilter",
                "chartData": "{{props.subPanelContext.context.vrSublocationState.pieChartData.vrTables.requirementsTableProvider}}",
                "seriesName": "{{data.i18n.Requirements}}",
                "subPanelContext": "{{props.subPanelContext.context.vrSublocationState}}",
                "table": "requirementsTableProvider"
            },
            "outputData": {
                "pieChartForRequirementsProvider_chartPoints": ""
            },
            "deps": "js/Crt1PieChartsService"
        },
        "checkAndReloadRequirementsChart": {
            "actionType": "JSFunction",
            "method": "checkAndReloadRequirementsChart",
            "inputData": {
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext.context.vrSublocationState}}"
            },
            "deps": "js/Crt1RequirementTableService"
        },
        "filterReqTable": {
            "actionType": "JSFunction",
            "method": "filterReqTable",
            "inputData": {
                "data": "{{data}}",
                "chartProp": "{{props.subPanelContext.context.vrSublocationState}}"
            },
            "deps": "js/Crt1RequirementTableService"
        },
        "displayAllReq": {
            "actionType": "JSFunction",
            "method": "displayAllReq",
            "inputData": {
                "data": "{{data}}",
                "chartProp": "{{props.subPanelContext.context.vrSublocationState}}"
            },
            "deps": "js/Crt1RequirementTableService"
        },
        "modelObjectsLoaded": {
            "actionType": "JSFunction",
            "method": "modelObjectsLoaded",
            "inputData": {
                "dataProviders": "{{data.dataProviders.requirementsTableProvider}}",
                "eventMap": "{{data.eventMap}}",
                "scopeSel": "{{props.subPanelContext.context.vrSublocationState.mselected[0]}}",
                "subPanleCtx": "{{props.subPanelContext}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "modelObjectEdited": {
            "actionType": "JSFunction",
            "method": "modelObjectEdited",
            "inputData": {
                "dataProvider": "{{data.dataProviders.requirementsTableProvider}}",
                "scopeSel": "{{props.subPanelContext.context.vrSublocationState.mselected[0]}}",
                "subPanleCtx": "{{props.subPanelContext}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        }
    },
    "functions": {

        "getColumnFiltersForDynamicTables": {
            "functionName": "getColumnFiltersForDynamicTables",
            "parameters": [
                "{{data.columnProviders.requirementsTableColumnProvider}}",
                "{{props.subPanelContext.context.vrSublocationState.pieChartData.vrTables.requirementsTableProvider.reqTableColumnFilters}}",
                "{{props.subPanelContext.context.vrSublocationState.pieChartData.vrTables.topPieChart.testResultColumnFilters}}"
            ]
        },
        "getColumnDataForDynamicTables": {
            "functionName": "getColumnDataForDynamicTables",
            "parameters": [
                "{{data}}"
            ]
        },
        "getParentUid": {
            "functionName": "getParentUid",
            "parameters": [
                "{{subPanelContext}}"
            ]
        }
    },
    "columnProviders": {
        "requirementsTableColumnProvider": {
            "saveColumnAndLoadAction": "saveColumnConfigLoadData",
            "resetColumnAction": "resetColumnConfig",
            "sortCriteria": []
        }
    },
    "dataProviders": {
        "requirementsTableProvider": {
            "action": "loadDataForRequirements",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "selectionModelMode": "multiple",
            "editContext": "NONE",
            "commandsAnchor": "Open_Content_command",
            "contextMenuCommandsAnchor": "aw_requirementsTable_contextMenu",
            "inputData": {
                "selectionData": "{{fields.selectionData}}"
            }
        }
    },
    "grids": {
        "requirementsTable": {
            "columnProvider": "requirementsTableColumnProvider",
            "dataProvider": "requirementsTableProvider",
            "enableArrangeMenu": true,
            "gridOptions": {
                "enableSorting": true,
                "maxRowsToShow": 10,
                "isFilteringEnabled": true
            }
        }
    },
    "data": {
        "chartProviders" : {
            "pieChartForRequirementsProvider": {
                "chartType": "pie",
                "chartColorOverrideClass":"aw-verificationManagement-chartStatusColor",
                "chartConfig": {
                    "isChartZoomable": true,
                    "isYAxisLinearOrLogarithmic": "logarithmic",
                    "xAxisLabel": "",
                    "yAxisLabel": "",
                    "isDataLabelOnChartEnabled": true
                }
            }
        },
        "primaryActiveTabId": {
            "dbValue": "",
            "type": "OBJECT"
        },
        "selectionData": {
            "initialValues": {},
            "meta": {}
        }
    },
    "messages": {
        "SOAFailureMsg": {
            "messageType": "ERROR",
            "messageText": "{{errorCode}}"
        }
    },
    "onEvent": [
        {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent"
        },
        {
            "eventId": "requirementsTableProvider.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "modelObjectsLoaded"
        },
        {
            "eventId": "requirementsTableProvider.modelObjectsEdited",
            "cacheEventData": true,
            "action": "modelObjectEdited"
        },
        {
            "eventId": "requirementsTableProvider.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "handleVMCollectionUpdate"
        },
        {
            "eventId": "editHandlerStateChange",
            "cacheEventData": true,
            "action": "editEventAction"
        },
        {
            "eventId": "plTable.editStateChange",
            "action": "checkAndReloadRequirementsChart"
        },
        {
            "eventId": "undefined.selected",
            "cacheEventData": true,
            "action": "filterReqTable"
        },
        {
            "eventId": "undefined.unselected",
            "cacheEventData": true,
            "action": "displayAllReq"
        },
        {
            "eventId": "Crt1RequirementTable.drawPieChart",
            "action": "loadDataForRequirementsAfterEdit"
        },
        {
            "eventId": "redrawPieChartForDynamicTables",
            "action": "createPieChartForDynamicTables"
        },
        {
            "eventId": "resetPieChart",
            "action": "redrawRequirementsPieChart"
        }

    ],
    "conditions": {
        "showReqMessageString": {
            "expression": "data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[0].value === 0 && data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[1].value === 0 && data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[2].value === 0 && data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[3].value === 0 && data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[4].value === 0"
        },
        "showReqChart" : {
            "expression": "data.pieChartForRequirementsProvider_chartPoints && data.pieChartForRequirementsProvider_chartPoints[0] && data.pieChartForRequirementsProvider_chartPoints[0].keyValueDataForChart[0].value != -1"
        }
    },
    "i18n": {
        "NoResult": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "Fail": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "Pass": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "Requirements":[
            "AnalysisRequestCommandPanelsMessages"
        ],
        "noRequirementsToDisplayChart":[
            "AnalysisRequestCommandPanelsMessages"
        ],
        "ReqFail": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "ReqPass": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "Caution": [
            "AnalysisRequestCommandPanelsMessages"
        ],
        "Blocked": [
            "AnalysisRequestCommandPanelsMessages"
        ]
    }
}

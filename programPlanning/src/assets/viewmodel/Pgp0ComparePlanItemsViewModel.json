{
    "schemaVersion": "1.0.0",
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    },
    "data": {
        "_subLocation": {
            "name": "com.siemens.splm.client.comparePlan:CompareSublocation",
            "clientScopeURI": "comparePlansLoc",
            "nameToken": "com.siemens.splm.client.comparePlan:CompareSublocation",


            "headerPreference": {
                "hideGlobalSearch": true,
                "hideLogo": false
            },
            "awSubLocationPref": {
                "hideNavigationArea": false,
                "hideFooter": true,
                "hideRightWall": true,
                "orientation": "HORIZONTAL"
            }
        },
        "refPlansName": [],
        "sourcePlanObjName":{
            "displayName": "",
            "dbValue": "sourcePlanName",
            "type": "STRING",
            "dispValue": "",
            "labelPosition": "NO_PROPERTY_LABEL"
        },
        "modelObjects": {},
        "searchState": {
            "pwaSelection": []
        },
        "selectionData": {},
        "ganttSourceSelectionData": {
            "initialValues": {},
            "meta": {}
        },
        "ganttReferenceSelectionDatas": {
            "initialValues": {
                "selectionState": [ {
                    "selected": {
                        }
                    }
                ]
            },
            "meta": {
                "selectionState": [ {
                    "selected": {
                        "field": "true",
                        "type": "OBJECT"
                    }
                } ]
            }
        },
        "isRefPlansStateReady": false,
        "sourcePlanGanttChartState": {
            "initialValues": {
                "zoomLevels": [ "year", "month", "quarter", "week", "day" ]
            },
            "meta": {}
        },
        "ganttChartStates": {
            "initialValues": {

                "chartState": [ {
                    "selected": {
                        }
                    }
                ]
            },
            "meta": {
                "chartState": [ {
                    "selected": {
                        "field": "true",
                        "type": "OBJECT"
                    }
                } ]
            }
        }
    },
    "lifecycleHooks": {
        "onMount": "initializePlanCharts",
        "onUpdate":[
            {
                "action": "pushInitialDataToTimeline",
                "observers": [ "viewModel.atomicData.sourcePlanGanttChartState.ganttInitialized" ]
            },
            {
                "action": "initializeAndUpdateRefPlans",
                "observers": [ "viewModel.ctx.state.params.comparePlanUids" ]
            },
            {
                "action": "resetEventSelection",
                "observers": [ "viewModel.data.isRefPlansStateReady" ]
            }
        ]
    },
    "actions": {
        "initializePlanCharts": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "updateBaseSelections"
                },
                {
                    "action": "ensureObjectPropsLoaded"
                },
                {
                    "action": "updateSourcePlanName"
                },
                {
                    "action": "loadEventsForSourcePlan"
                },
                {
                    "action": "initializeSourceTimelineChartState"
                },
                {
                    "action": "initializeAndUpdateRefPlans"
                }
            ]
        },
        "initializeAndUpdateRefPlans": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "removeExisitngPlansFromPWA"
                },
                {
                    "action": "loadEventsForRefPlan"
                },
                {
                    "action": "parseRefPlanAndEventObjects"
                },
                {
                    "action": "initializeRefPlansChartState"
                },
                {
                    "action": "updateChartRangeForSourcePlan"
                },
                {
                    "action": "displayLastScrollBar"
                }
            ]
        },
        "loadEventsForSourcePlan": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{subPanelContext.clientScopeURI}}"
                },
                "searchInput": {
                    "attributesToInflate": "{{ctx.search.tableViewProperties}}",
                    "maxToLoad": 200000000,
                    "maxToReturn": 200000000,
                    "providerName": "Pgp0PlanObjsSearchProvider",
                    "searchCriteria": {
                        "searchContentType": "EventsOfPlanObjects",
                        "parentUid": "{{ctx.state.params.uid}}",
                        "searchEventRecursive": "false",
                        "planUidsList": ""
                    }
                },
                "inflateProperties": true
            },
            "outputData": {
                "sourceEventsResponse": ""
            }
        },
        "loadEventsForRefPlan": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{subPanelContext.clientScopeURI}}"
                },
                "searchInput": {
                    "attributesToInflate": "{{ctx.search.tableViewProperties}}",
                    "maxToLoad": 200000000,
                    "maxToReturn": 200000000,
                    "providerName": "Pgp0PlanObjsSearchProvider",
                    "searchCriteria": {
                        "searchContentType": "EventsOfPlanObjects",
                        "parentUid": "{{ctx.state.params.uid}}",
                        "searchEventRecursive": "false",
                        "planUidsList": "{{ctx.state.params.comparePlanUids}}"
                    }
                },
                "inflateProperties": true
            },
            "outputData": {
                "refEventsResponse": ""
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "parseRefPlanAndEventObjects": {
            "actionType": "JSFunction",
            "method": "parseRefPlanAndEventObjects",
            "deps": "js/Pgp0ComparePlansService",
            "inputData": {
                "res": "{{data.refEventsResponse.ServiceData}}",
                "arr": "{{data.modelObjects}}"
            },
            "outputData": {
                "planEventsMap": ""
            }
        },
        "displayLastScrollBar": {
            "actionType": "JSFunction",
            "method": "displayLastScrollbar",
            "deps": "js/Pgp0CompareSelectedPlanCallbacks"
        },
        "removeExisitngPlansFromPWA": {
            "actionType": "JSFunction",
            "method": "removeExisitngPlansFromPWA",
            "deps": "js/Pgp0ComparePlansService",
            "inputData": {
                "planState": "{{data.isRefPlansStateReady}}"
            },
            "outputData": {
                "isRefPlansStateReady": ""
            }
        },
        "updateBaseSelections": {
            "actionType": "JSFunction",
            "method": "getBaseSelection",
            "deps": "js/Pgp0ComparePlansService",
            "inputData": {
                "currentPlan": "{{ctx.state.params.uid}}",
                "referencePlans": "{{ctx.state.params.comparePlanUids}}"
            },
            "outputData": {
                "modelObjects": "objs",
                "searchState.pwaSelection": "objs",
                "modelObjsUids": "uids"
            },
            "events": {
                "success": [ {
                    "name": "multiSelectCompare.plTable.reload"
                } ]
            }
        },
        "closeComparePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData":
            {
                "events":
                [
                    {
                        "name": "awsidenav.openClose"
                    }
                ]
            }
        },
         "ensureObjectPropsLoaded": {
            "actionType": "JSFunctionAsync",
            "method": "getProperties",
            "deps": "soa/dataManagementService",
            "inputData": {
                "uids": "{{data.modelObjsUids}}",
                "propNames": [
                    "object_name"
                ]
            }
        },
         "updateSourcePlanName": {
            "actionType": "JSFunction",
            "method": "updateSourcePlanName",
            "deps": "js/Pgp0ComparePlansService",
            "inputData": {
                "obj": "{{data.modelObjects[0]}}",
                "prop": "{{data.sourcePlanObjName}}"
            },
            "outputData": {
                "sourcePlanObjName": ""
            }
        },
        "initializeRefPlansChartState": {
            "actionType": "JSFunction",
            "method": "initializeRefPlansChartState",
            "inputData": {
                "planObjectsArr": "{{data.modelObjects}}",
                "eventsMap": "{{data.planEventsMap}}",
                "atomicDataRef": "{{data.atomicDataRef}}"
            },
            "outputData": {
                "ganttChartStates.chartState": "states",
                "isRefPlansStateReady": "isRefPlansStateReady",
                "refPlansName": "plansNameArr",
                "ganttReferenceSelectionDatas.selectionState": "selectionData"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "initializeSourceTimelineChartState": {
            "actionType": "JSFunction",
            "method": "initializeSourceTimelineChartState",
            "inputData": {
                "planObj": "{{data.modelObjects}}",
                "atomicDataRef": "{{data.atomicDataRef}}"
            },
            "outputData": {
                "isSelectedPlanReady": "isSelectedPlanReady",
                "timelineDataService": "timelineDataService"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "pushInitialDataToTimeline": {
            "actionType": "JSFunction",
            "method": "pushInitialDataToTimeline",
            "inputData": {
                "atomicDataRef": "{{data.atomicDataRef}}",
                "planObj": "{{data.modelObjects[0]}}",
                "timelineDataService": "{{data.timelineDataService}}",
                "sourceEventsResp": "{{data.sourceEventsResponse.ServiceData}}"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "launchComparePlanPanel": {
            "actionType": "JSFunction",
            "method": "activateCommandPanel",
            "deps": "js/commandPanel.service",
            "inputData": {
                "commandId": "Pgp0ComparePlan",
                "location": "aw_navigation",
                "commandContext": "{{commandContext}}"
            }
        },
        "closeAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData":
            {
                "events":
                [
                    {
                        "name": "awsidenav.openClose"
                    }
                ]
            }
        },
        "updatePlansOnParentAction": {
            "actionType": "JSFunction",
            "method": "updateRefPlansArray",
            "inputData": {
                "eventData": "{{data.eventData}}"
            },
            "events": {
                "success": [
                    {
                        "name": "updateBaseSelectionsEvent"
                    }
                ]

            },
            "deps": "js/Pgp0ComparePlanPanelService"
        },
        "setModelObjects": {
            "actionType": "JSFunction",
            "method": "setModelObjects",
            "inputData": {
                "selectionData": "{{data.selectionData}}",
                "eventData": "{{data.eventData}}",
                "planObjects": "{{data.modelObjects}}"
            },
            "outputData": {
                "selectionData": "selectionData",
                "searchState.pwaSelection": "objectsSelected"
            },
            "events": {
                "success": [ {
                    "name": "multiSelectCompare.plTable.reload"
                } ]
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "setZoomLevel": {
            "actionType": "JSFunction",
            "method": "setZoomLevel",
            "inputData": {
                "zoomLevel": "{{ctx.preferences.AWC_Timeline_Zoom_Level[0]}}",
                "atomicDataRef": "{{data.atomicDataRef}}"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "toggleEventInfo": {
            "actionType": "JSFunction",
            "method": "showHideEventInfo",
            "inputData": {
                "atomicDataRef": "{{data.atomicDataRef}}",
                "showOrHideInfo": "{{ctx.showEventProperties}}",
                "refChartStates": "{{data.ganttChartStates}}"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "updateChartRangeForSourcePlan": {
            "actionType": "JSFunction",
            "method": "updateChartRangeForSourcePlan",
            "inputData": {
                "atomicDataRef": "{{data.atomicDataRef}}"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "resetEventSelection": {
            "actionType": "JSFunction",
            "method": "resetEventSelection",
            "inputData": {
                "isRefPlansStateReady": "{{data.isRefPlansStateReady}}",
                "sourcePlanGanttChartState": "{{data.atomicDataRef.sourcePlanGanttChartState}}",
                "selectionData": "{{data.selectionData}}"
            },
            "outputData": {
                "selectionData": "selectionData"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "scrollCharts": {
            "actionType": "JSFunction",
            "method": "scrollCharts",
            "inputData": {
                "atomicDataRef": "{{data.atomicDataRef}}",
                "eventData": "{{data.eventMap['Pgp0ComparePlanItems.scrollUpdated']}}",
                "refChartStates": "{{data.ganttChartStates.chartState}}"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "removeRefPlansfromIcon": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "removePlanFromPWA"
                },
                {
                    "action": "updateURLPramas"
                },
                {
                    "action": "updateBaseSelections"
                }
            ]
        },
        "removePlanFromPWA": {
            "actionType": "JSFunction",
            "method": "removePlanFromPWA",
            "inputData": {
                "refChartStates": "{{data.ganttChartStates.chartState}}",
                "eventData": "{{data.eventMap['Pgp0ComparePlanItems.removeFromPWA'].selectedObj}}"
            },
            "outputData": {
                "refChartStates": "refChartStateArr",
                "isRefPlansStateReady": "isUpdated"
            },
            "deps": "js/Pgp0ComparePlansService"
        },
        "updateURLPramas": {
            "actionType": "JSFunction",
            "method": "updateURLPramas",
            "inputData": {
                "eventData": "{{data.eventMap['Pgp0ComparePlanItems.removeFromPWA'].selectedObj}}",
                "modelObjects": "{{data.modelObjects}}"
            },
            "outputData": {
                "isRefPlansStateReady": "isUpdated",
                "modelObjects": "objs"
            },
            "deps": "js/Pgp0ComparePlansService"
        }
    },
    "conditions": {
        "isSelectedPlanReady": {
            "expression": "data.isSelectedPlanReady === true"
        },
        "isRefPlansStateReady": {
            "expression": "data.isRefPlansStateReady === true"
        }
    },
    "onEvent": [
        {
            "eventId": "complete",
            "action": "closeAction"
        },
        {
            "eventId": "Pgp0ComparePlanItems.updateSelectedPlans",
            "action": "updatePlansOnParentAction",
            "cacheEventData": true
        },
        {
            "eventId": "appCtx.update",
            "criteria": {
                "name": "preferences",
                "target": "AWC_Timeline_Zoom_Level"
            },
            "action": "setZoomLevel"
        },
        {
            "eventId": "appCtx.update",
            "criteria": {
                "name": "showEventProperties"
            },
            "action": "toggleEventInfo"
        },
        {
            "eventId": "timelineChart.objectsSelected",
            "action": "setModelObjects",
            "cacheEventData": true
        },
        {
            "eventId": "updateBaseSelectionsEvent",
            "action": "updateBaseSelections"
        },
        {
            "eventId": "Pgp0ComparePlanItems.scrollUpdated",
            "action": "scrollCharts",
            "cacheEventData": true
        },
        {
            "eventId": "Pgp0ComparePlanItems.removeFromPWA",
            "action": "removeRefPlansfromIcon",
            "cacheEventData": true
        }
    ],
    "i18n":{
        "Pgp0Remove": ["ProgramPlanningCommandPanelsMessages"],
        "sourceTitle": ["ProgramPlanningCommandPanelsMessages"],
        "Pgp0ComparePlansWith": ["ProgramPlanningCommandPanelsMessages"]
    }
}

{
  "commands": {
    "Att1SaveEditInlineParameters": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "Att1CancelEditInlineParameters": {
      "iconId": "cmdCancelEdit",
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.CancelEditAttributeProxyTableDesc}}"
    },
    "Att1UpdateUomEngrTable": {
      "iconId": "cmdEditColumnHeader",
      "isGroup": false,
      "title": "{{i18n.Att1UpdateUomEngrTableTitle}}",
      "description": "{{i18n.Att1UpdateUomEngrTableDesc}}"
    },
    "Att1WidePanelPopupClose": {
      "iconId": "cmdClosePanel",
      "isGroup": false,
      "title": "{{i18n.Close}}"
    },
    "Att1WidePanelFullScreen": {
      "iconId": "cmdFullScreen",
      "title": "{{i18n.taskbarFullScreen}}",
      "description": "{{i18n.Awp0FullScreenDesc}}"
    },
    "Att1ExitWidePanelFullScreen": {
      "iconId": "cmdExitFullScreen",
      "title": "{{i18n.taskbarFullScreenExit}}",
      "description": "{{i18n.Awp0TaskbarExitFullScreenDesc}}"
    },
    "Att1ValuesTableAndChartViewGroup": {
      "iconId": "cmdMissingImage",
      "isShuttle": true,
      "title": "{{i18n.valuesTableAndChartViewTitle}}",
      "description": "{{i18n.valuesTableAndChartViewDesc}}"
    },
    "Att1ValuesTableView": {
      "iconId": "cmdTableView",
      "isGroup": false,
      "title": "{{i18n.valuesTableViewTitle}}",
      "description": "{{i18n.valuesTableViewDesc}}"
    },
    "Att1ChartView": {
      "iconId": "cmdPlotChart",
      "isGroup": false,
      "title": "{{i18n.chartViewTitle}}",
      "description": "{{i18n.chartViewDesc}}"
    },
    "Att1ValuesTableAndChartView": {
      "iconId": "cmdShowAll",
      "isGroup": false,
      "title": "{{i18n.valuesTableAndChartViewTitle}}",
      "description": "{{i18n.valuesTableAndChartViewDesc}}"
    },
    "Att1ShowLogarithmicScale": {
      "iconId": "cmdLogarithmicScale",
      "isGroup": false,
      "title": "{{i18n.showLogarithmicScaleTitle}}",
      "description": "{{i18n.showLogarithmicScaleDesc}}"
    },
    "Att1AddMeasurementEngrTable": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.AddMeasurementEngrTableTitle}}",
      "description": "{{i18n.AddMeasurementEngrTableDesc}}"
    },
    "Att1AddMeasurementFromExcel": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.AddMeasurementFromExcelTitle}}",
      "description": "{{i18n.AddMeasurementFromExcelDesc}}"
    },
    "Att1AddMeasurementFromGoal": {
      "iconId": "cmdTarget",
      "isGroup": false,
      "title": "{{i18n.AddMeasurementFromGoalTitle}}",
      "description": "{{i18n.AddMeasurementFromGoalDesc}}"
    },
    "Att1AddMeasurementNew": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.AddMeasurementNewTitle}}",
      "description": "{{i18n.AddMeasurementNewDesc}}"
    },
    "Att1DuplicateMeasurementEngrTable": {
      "iconId": "cmdDuplicate",
      "isGroup": false,
      "title": "{{i18n.DuplicateMeasurementEngrTableTitle}}",
      "description": "{{i18n.DuplicateMeasurementEngrTableDesc}}"
    },
    "Att1EditMeasurementTable": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.EditMeasurementEngrTableTitle}}",
      "description": "{{i18n.EditMeasurementEngrTableDesc}}"
    },
    "Att1SaveEditMeasurementTable": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "Att1CancelEditMeasurementTable": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "Att1AttachMeasurementEngrTable": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.AttachMeasurementEngrTableTitle}}",
      "description": "{{i18n.AttachMeasurementEngrTableDesc}}"
    },
    "Att1ExportRoundtripEngrTable": {
      "iconId": "cmdImportExportExcel",
      "isGroup": true,
      "title": "{{i18n.exportImportCmdTitle}}",
      "description": "{{i18n.Att1ExportImportParamTableDesc}}"
    },
    "Att1ExportEngrTable": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.exportCmdTitle}}",
      "description": "{{i18n.Att1ExportParamTableDesc}}"
    },
    "Att1ImportNewEngrTable": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importFromExcel}}",
      "description": "{{i18n.Att1ImportNewDesc}}"
    },
    "Att1AddTable": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.Att1AddTableTitle}}",
      "description": "{{i18n.Att1AddTableDesc}}"
    },
    "Att1AddTableFromExcel": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Att1AddTableFromExcelTitle}}",
      "description": "{{i18n.Att1AddTableFromExcelDesc}}"
    },
    "Att1AddTableNewValue": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Att1AddTableNewValueTitle}}",
      "description": "{{i18n.Att1AddTableNewValueDesc}}"
    },
    "Att1Insert": {
      "iconId": "cmdInsert",
      "isGroup": true,
      "title": "{{i18n.InsertCommandTitle}}",
      "description": "{{i18n.InsertCommandDesc}}"
    },
    "Att1InsertRowAbove": {
      "iconId": "cmdInsertRowAbove",
      "isGroup": false,
      "title": "{{i18n.InsertRowAboveCommandTitle}}",
      "description": "{{i18n.InsertRowAboveCommandDesc}}"
    },
    "Att1InsertRowBelow": {
      "iconId": "cmdInsertRowBelow",
      "isGroup": false,
      "title": "{{i18n.InsertRowBelowCommandTitle}}",
      "description": "{{i18n.InsertRowBelowCommandDesc}}"
    },
    "Att1InsertRowAboveCtx": {
      "iconId": "cmdInsertRowAbove",
      "isGroup": false,
      "title": "{{i18n.InsertRowAboveCommandTitle}}",
      "description": "{{i18n.InsertRowAboveCommandDesc}}"
    },
    "Att1ColumnCopyFillCtx": {
      "iconId": "cmdCopy",
      "isGroup": false,
      "title": "{{i18n.columnCopyFillTitle}}",
      "description": "{{i18n.columnCopyFillDesc}}"
    },
    "Att1InsertRowBelowCtx": {
      "iconId": "cmdInsertRowBelow",
      "isGroup": false,
      "title": "{{i18n.InsertRowBelowCommandTitle}}",
      "description": "{{i18n.InsertRowBelowCommandDesc}}"
    },
    "Att1InsertColumnSeries": {
      "iconId": "cmdInsert",
      "isGroup": false,
      "title": "{{i18n.InsertColumnSeriesCommandTitle}}",
      "description": "{{i18n.InsertColumnSeriesCommandDesc}}"
    },
    "Att1DeleteRowInEngrTable": {
      "iconId": "cmdClearText",
      "isGroup": false,
      "title": "{{i18n.DeleteRowCommandTitle}}",
      "description": "{{i18n.DeleteRowCommandDesc}}"
    },
    "Att1InsertColumnLeft": {
      "iconId": "cmdInsertColumnLeft",
      "isGroup": false,
      "title": "{{i18n.InsertColumnLeftCommandTitle}}",
      "description": "{{i18n.InsertColumnLeftCommandDesc}}"
    },
    "Att1InsertRowSeries": {
      "iconId": "cmdInsert",
      "isGroup": false,
      "title": "{{i18n.InsertRowSeriesCommandTitle}}",
      "description": "{{i18n.InsertRowSeriesCommandDesc}}"
    },
    "Att1InsertColumnRight": {
      "iconId": "cmdInsertColumnRight",
      "isGroup": false,
      "title": "{{i18n.InsertColumnRightCommandTitle}}",
      "description": "{{i18n.InsertColumnRightCommandDesc}}"
    },
    "Att1InsertColumnLeftCtx": {
      "iconId": "cmdInsertColumnLeft",
      "isGroup": false,
      "title": "{{i18n.InsertColumnLeftCommandTitle}}",
      "description": "{{i18n.InsertColumnLeftCommandDesc}}"
    },
    "Att1InsertColumnRightCtx": {
      "iconId": "cmdInsertColumnRight",
      "isGroup": false,
      "title": "{{i18n.InsertColumnRightCommandTitle}}",
      "description": "{{i18n.InsertColumnRightCommandDesc}}"
    },
    "Att1DeleteColumnInEngrTable": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.DeleteColumnCommandTitle}}",
      "description": "{{i18n.DeleteColumnCommandDesc}}"
    },
    "Att1ClearContentsInEngrTable": {
      "iconId": "cmdClearText",
      "isGroup": false,
      "title": "{{i18n.ClearContentsCommandTitle}}",
      "description": "{{i18n.ClearContentsCommandDesc}}"
    },
    "Att1CutInEngrTable": {
      "iconId": "cmdCut",
      "isGroup": false,
      "title": "{{i18n.CutCommandTitle}}",
      "description": "{{i18n.CutCommandDesc}}"
    },
    "Att1CopyInEngrTable": {
      "iconId": "cmdCopy",
      "isGroup": false,
      "title": "{{i18n.CopyCommandTitle}}",
      "description": "{{i18n.CopyCommandDesc}}"
    },
    "Att1PasteInEngrTable": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.PasteCommandTitle}}",
      "description": "{{i18n.PasteCommandDesc}}"
    },
    "Att1DeleteInEngrTable": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.DeleteCommandTitle}}",
      "description": "{{i18n.DeleteCommandDesc}}"
    },
    "Att1ClearSelectionInEngrTable": {
      "iconId": "cmdClearText",
      "isGroup": false,
      "title": "{{i18n.ClearSelectionCommandTitle}}",
      "description": "{{i18n.ClearSelectionCommandDesc}}"
    },
    "Att1UndoEngrTable": {
      "iconId": "cmdUndo",
      "isGroup": false,
      "title": "{{i18n.Att1UndoEngrTableTitle}}",
      "description": "{{i18n.Att1UndoEngrTableDesc}}"
    },
    "Att1StartEditEngrTable": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.StartEditAttributeProxyTableDesc}}"
    },
    "Att1SaveEditEngrTable": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "Att1CancelEditEngrTable": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.CancelEditAttributeProxyTableDesc}}"
    },
    "Att1MapGroup": {
      "iconId": "cmdMap",
      "isGroup": true,
      "title": "{{i18n.mapGroup}}",
      "description": "{{i18n.Att1MapAttributeGroupDesc}}"
    },
    "Att1MapAttribute": {
      "iconId": "cmdMap",
      "isGroup": false,
      "title": "{{i18n.manualMap}}",
      "description": "{{i18n.Att1MapAttributeDesc}}"
    },
    "Att1UnMapAttribute": {
      "iconId": "cmdUnmap",
      "isGroup": false,
      "title": "{{i18n.unMap}}",
      "description": "{{i18n.Att1UnMapAttributeDesc}}"
    },
    "StartEditAttributeProxyTable": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.StartEditAttributeProxyTableDesc}}"
    },
    "SaveEditAttributeProxyTable": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "CancelEditAttributeProxyTable": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.CancelEditAttributeProxyTableDesc}}"
    },
    "Att1RemoveMeasurableAttrFromInContext": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.removeMeasurableAttribute}}",
      "description": "{{i18n.Att1RemoveMeasurableAttrFromItemRevDesc}}"
    },
    "Att1RemoveMeasurableAttrFromDCP12x": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.removeMeasurableAttribute}}",
      "description": "{{i18n.Att1RemoveMeasurableAttrFromItemRev12xDesc}}"
    },
    "Att1ReleaseParamDefinition": {
      "iconId": "cmdReleaseObjects",
      "isGroup": false,
      "title": "{{i18n.releaseParamDefinition}}",
      "description": "{{i18n.releaseParamDefDesc}}"
    },
    "Att1RemoveMeasurableAttrFromSplitTableFor12x": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.removeMeasurableAttribute}}",
      "description": "{{i18n.Att1RemoveMeasurableAttrFromItemRev12xDesc}}"
    },
    "Att1AddAttrFromTable": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Att1AddAttrFromTableDesc}}"
    },
    "Att1AddMeasurableAttrFromTable": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addMeasurableAttribute}}",
      "description": "{{i18n.Att1AddMeasurableAttrFromTableDesc}}"
    },
    "Att1AddAParamValueFromTable": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addParameterValue}}",
      "description": "{{i18n.Att1AddAParamValueFromTableDesc}}"
    },
    "Att1AssociateParamDictonaries": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Att1AssociateParamDictonariesDesc}}"
    },
    "Att1PasteAttribute": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.pasteAttributeTitle}}",
      "description": "{{i18n.Att1PasteAttributeDesc}}"
    },
    "Att1PasteParameter": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.paste}}",
      "description": "{{i18n.Att1PasteParameterDesc}}"
    },
    "Att1AutoMapAttributes": {
      "iconId": "cmdAutomap",
      "isGroup": false,
      "title": "{{i18n.automap}}",
      "description": "{{i18n.Att1AutoMapAttributesDesc}}"
    },
    "ShowMeasurableAttr": {
      "iconId": "cmdOpen",
      "title": "{{i18n.ShowObjectCommandTitle}}",
      "description": "{{i18n.ShowMeasurableAttrDesc}}"
    },
    "Att1DownloadFile": {
      "iconId": "cmdDownload",
      "isGroup": false,
      "title": "{{i18n.downloadFileCommandTitle}}",
      "description": "{{i18n.Att1DownloadFileDesc}}"
    },
    "Att1ReplaceFile": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replaceFileCommandTitle}}",
      "description": "{{i18n.Att1ReplaceFileDesc}}"
    },
    "Att1AddMeasurementFile": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Awp0AddObjectTitle}}",
      "description": "{{i18n.Att1AddMeasurementFileDesc}}"
    },
    "Att1ShowChildrenForParamGroup": {
      "iconId": "miscCollapse",
      "isGroup": false,
      "title": "{{i18n.showChildrenTitle}}",
      "description": "{{i18n.Att1ShowChildrenForParamGroupDesc}}"
    },
    "Att1OpenGroupOrParamter": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.openGroupOrParamterTitle}}",
      "description": "{{i18n.Att1OpenGroupOrParamterDesc}}"
    },
    "Att1AddParameterGroup": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addParameterGroup}}",
      "description": "{{i18n.Att1AddParameterGroupDesc}}"
    },
    "Att1DeleteGroup": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.deleteParameterGroup}}",
      "description": "{{i18n.Att1DeleteGroupDesc}}"
    },
    "Att1ImportNew": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importNewCmdTitle}}",
      "description": "{{i18n.Att1ImportNewDesc}}"
    },
    "Att1ExportImportParamTable": {
      "iconId": "cmdImportExportExcel",
      "isGroup": true,
      "title": "{{i18n.exportImportCmdTitle}}",
      "description": "{{i18n.Att1ExportImportParamTableDesc}}"
    },
    "Att1ExportParamTable": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.exportCmdTitle}}",
      "description": "{{i18n.Att1ExportParamTableDesc}}"
    },
    "Att1ImportNewParamTable": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importFromExcel}}",
      "description": "{{i18n.Att1ImportNewDesc}}"
    },
    "Att1ShowChildrenParameters": {
      "iconId": "cmdChildren",
      "isGroup": false,
      "title": "{{i18n.Att1ShowChildrenParameters}}",
      "description": "{{i18n.Att1ShowChildrenParametersDesc}}"
    },
    "Att1PlotChart": {
      "iconId": "cmdPlotChart",
      "isGroup": false,
      "title": "{{i18n.plotChart}}",
      "description": "{{i18n.plotChartDesc}}"
    },
    "Att1ManageMeasurements": {
      "iconId": "cmdMeasurementUnits",
      "isGroup": false,
      "title": "{{i18n.manageMeasurements}}",
      "description": "{{i18n.manageMeasurementsDesc}}"
    },
    "Att1SetFreezePoint": {
      "iconId": "cmdFreeze",
      "isGroup": false,
      "title": "{{i18n.createFreezePointTitle}}",
      "description": "{{i18n.Att1SetFreezePointDesc}}",
      "hasDialog": true
    },
    "Att1ReviseAndReplaceParameter": {
      "iconId": "cmdReplaceLatestRevision",
      "isGroup": false,
      "title": "{{i18n.reviseAndReplaceTitle}}",
      "description": "{{i18n.Att1ReviseAndReplaceParameterDesc}}"
    },
    "Att1ReplaceParameterRevision": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replaceRevisionTitle}}",
      "description": "{{i18n.Att1ReplaceParameterRevisionDesc}}"
    },
    "Att1SetParameterDirection": {
      "iconId": "cmdSetUsage",
      "isGroup": true,
      "title": "{{i18n.Att1SetParameterDirectionTitle}}",
      "description": "{{i18n.Att1SetParameterDirectionDesc}}"
    },
    "Att1SetInputDirection": {
      "iconId": "cmdSetMeasurableAttributeInput",
      "isGroup": false,
      "title": "{{i18n.Att1SetInputDirectionTitle}}",
      "description": "{{i18n.Att1SetInputDirectionDesc}}"
    },
    "Att1SetOutputDirection": {
      "iconId": "cmdSetMeasureableAttributeOutput",
      "isGroup": false,
      "title": "{{i18n.Att1SetOutputDirectionTitle}}",
      "description": "{{i18n.Att1SetOutputDirectionDesc}}"
    },
    "Att1SetUnusedDirection": {
      "iconId": "",
      "isGroup": false,
      "title": "{{i18n.Att1SetUnusedDirectionTitle}}",
      "description": "{{i18n.Att1SetUnusedDirectionDesc}}"
    },
    "Att1ShowParameterVariantsToggleCmd": {
      "iconId": "cmdMeasurementManagement",
      "isGroup": false,
      "title": "{{i18n.ShowParameterVariantToggleCommandTitle}}",
      "selected": {
        "iconId": "cmdMeasurementManagement",
        "title": "{{i18n.ShowParameterVariantToggleCommandTitle}}"
      }
    },
    "Att1EnableMultiSelectObjectSet": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Att1DisableMultiSelectObjectSet": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Att1SelectAllObjectSet": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.selectAll}}",
      "description": "{{i18n.Awp0SelectAllDesc}}"
    },
    "Att1DeselectAllObjectSet": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.clearSelections}}",
      "description": "{{i18n.Awp0DeselectAllDesc}}"
    },
    "Att1StartEditParametersTable": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.StartEditAttributeProxyTableDesc}}"
    },
    "Att1SaveEditParametersTable": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.SaveEditAttributeProxyTableDesc}}"
    },
    "Att1CancelEditParametersTable": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.CancelEditAttributeProxyTableDesc}}"
    },
    "Att1RemoveGroup": {
      "iconId": "cmdRemove",
      "isGroup": true,
      "title": "{{i18n.cutParam}}",
      "description": "{{i18n.removeParamGroupDesc}}"
    },
    "Att1CutParameter": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.cutParam}}",
      "description": "{{i18n.cutParamDesc}}"
    },
    "Att1DeleteOccParameter": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeOverride}}",
      "description": "{{i18n.removeOverrideDesc}}"
    },
    "Att1DeleteParameter": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.deleteParamDesc}}"
    },
    "Att1DeleteParameterFromPWA": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.deleteParamDesc}}"
    },
    "Att1AddGroup": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Att1AddAttrFromTableDesc}}"
    },
    "Att1ManageValueAndMeasurementGroup": {
      "iconId": "cmdTableValuesAndMeasurements",
      "isGroup": true,
      "title": "{{i18n.manageValueAndMeasurementGroup}}",
      "description": "{{i18n.manageValueAndMeasurementGroupDesc}}"
    },
    "Att1AddInLine": {
      "iconId": "cmdAddLineItem",
      "isGroup": false,
      "title": "{{i18n.quickAdd}}",
      "description": "{{i18n.Att1AddMeasurableAttrFromTableDesc}}"
    },
    "Att1AddParameter": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addMeasurableAttribute}}",
      "description": "{{i18n.Att1AddMeasurableAttrFromTableDesc}}"
    },
    "Att1AddParameterForEditor": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addParameter}}",
      "description": "{{i18n.Att1AddMeasurableAttrFromTableDesc}}"
    },
    "Att1AddParameterValue": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addParameterValue}}",
      "description": "{{i18n.Att1AddAParamValueFromTableDesc}}"
    },
    "Att1AddTableValueFromExcel": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.addTableValueFromExcel}}",
      "description": "{{i18n.addTableValueFromExcelDesc}}"
    },
    "Att1AddTableValue": {
      "iconId": "cmdShowGrid",
      "isGroup": false,
      "title": "{{i18n.addTableValue}}",
      "description": "{{i18n.addTableValueDesc}}"
    },
    "Att1PasteGroup": {
      "iconId": "cmdPaste",
      "isGroup": true,
      "title": "{{i18n.paste}}"
    },
    "Att1PasteParameterAsReference": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.pasteAsRefTitle}}",
      "description": "{{i18n.Att1PasteParameterDesc}}"
    },
    "Att1CopyAndPasteParameter": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.pasteAsCopyTitle}}",
      "description": "{{i18n.Att1PasteAttributeDesc}}"
    },
    "Att1CopyAndPasteParameterPWA": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.pasteAsCopyTitle}}",
      "description": "{{i18n.Att1PasteAttributeDesc}}"
    },
    "Att1ShowRevise": {
      "iconId": "cmdSaveAs",
      "title": "{{i18n.Att1ShowReviseTitle}}",
      "description": "{{i18n.Att1ShowReviseDesc}}"
    },
    "Att1ModelObjListDisplayToggles": {
      "isShuttle": true,
      "iconId": "cmdTreeView",
      "title": "{{i18n.Awp0ShowTreeViewTitle}}",
      "description": "{{i18n.Awp0ShowTreeViewDesc}}"
    },
    "Att1HideChildLinesView": {
      "iconId": "cmdTableView",
      "title": "{{i18n.showTableViewText}}",
      "description": "{{i18n.Awp0ShowTableViewDesc}}"
    },
    "Att1ShowChildLinesView": {
      "iconId": "cmdTreeView",
      "title": "{{i18n.Awp0ShowTreeViewTitle}}",
      "description": "{{i18n.Awp0ShowTreeViewDesc}}"
    },
    "Att1ShowRange": {
      "iconId": "cmdRange",
      "title": "{{i18n.Att1Range}}",
      "description": "{{i18n.Att1RangeDesc}}"
    },
    "Att1ShowGoal": {
      "iconId": "cmdTarget",
      "title": "{{i18n.Att1Goal}}",
      "description": "{{i18n.Att1GoalDesc}}"
    }
  },
  "commandHandlers": {
    "Att1SaveEditInlineParametersCommandHandler": {
      "id": "Att1SaveEditInlineParameters",
      "action": "Att1SaveEditInlineParameters",
      "enableWhen": {
        "condition": "conditions.Att1InlineSaveCond"
      },
      "activeWhen": {
        "condition": "conditions.Att1InlineSaveCond"
      },
      "visibleWhen": true
    },
    "Att1CancelEditInlineParametersCommandHandler": {
      "id": "Att1CancelEditInlineParameters",
      "action": "Att1CancelEditInlineParameters",
      "enableWhen": {
        "condition": "conditions.Att1InlineSaveCond"
      },
      "activeWhen": {
        "condition": "conditions.Att1InlineSaveCond"
      },
      "visibleWhen": true
    },
    "Att1WidePanelPopupCloseCommandHandler": {
      "id": "Att1WidePanelPopupClose",
      "action": "closeParameterDataWidePanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Att1WidePanelFullScreenCommandHandler": {
      "id": "Att1WidePanelFullScreen",
      "action": "applyFullScreenToWidePanel",
      "activeWhen": {
        "condition": "conditions.Att1FullScreenCommndVisibleCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1FullScreenCommndVisibleCond"
      },
      "visibleWhen": {
        "condition": "conditions.Att1FullScreenCommndVisibleCond"
      }
    },
    "Att1WidePanelExitFullScreenCommandHandler": {
      "id": "Att1ExitWidePanelFullScreen",
      "action": "applyFullScreenToWidePanel",
      "activeWhen": {
        "condition": "conditions.Att1ExitFullScreenCommndVisibleCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ExitFullScreenCommndVisibleCond"
      },
      "visibleWhen": {
        "condition": "conditions.Att1ExitFullScreenCommndVisibleCond"
      }
    },
    "Att1ModelObjListDisplayTogglesHandler": {
      "id": "Att1ModelObjListDisplayToggles",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      }
    },
    "Att1HideChildLinesViewHandler": {
      "id": "Att1HideChildLinesView",
      "action": "switchToHideChildLinesView",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": {
        "condition": "conditions.supportsHideChildLinesView"
      },
      "selectWhen": {
        "condition": "conditions.isHideChildLinesView"
      },
      "enableWhen": {
        "condition": "conditions.att1CheckEditModeIsOffForSummary"
      }
    },
    "Att1ShowChildLinesViewHandler": {
      "id": "Att1ShowChildLinesView",
      "action": "switchToShowChildLinesView",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": {
        "condition": "conditions.supportsShowChildLinesView"
      },
      "selectWhen": {
        "condition": "conditions.isShowChildLinesView"
      },
      "enableWhen": {
        "condition": "conditions.att1CheckEditModeIsOffForSummary"
      }
    },
    "Att1ValuesTableViewCommandHandler": {
      "id": "Att1ValuesTableView",
      "action": "hideChartView",
      "activeWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "visibleWhen": {
        "condition": "conditions.Att1IsValuesTableAndChartViewCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "selectWhen": {
        "condition": "conditions.isValuesTableViewSelected"
      }
    },
    "Att1ChartViewCommandHandler": {
      "id": "Att1ChartView",
      "action": "hideValuesTableView",
      "activeWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "visibleWhen": {
        "condition": "conditions.Att1IsValuesTableAndChartViewCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "selectWhen": {
        "condition": "conditions.isChartsViewSelected"
      }
    },
    "Att1ValuesTableAndChartViewCommandHandler": {
      "id": "Att1ValuesTableAndChartView",
      "action": "showValuesTableAndChartView",
      "activeWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "visibleWhen": {
        "condition": "conditions.Att1IsValuesTableAndChartViewCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "selectWhen": {
        "condition": "conditions.isValuesTableAndChartViewSelected"
      }
    },
    "Att1ShowLogarithmicScaleCommandHandler": {
      "id": "Att1ShowLogarithmicScale",
      "action": "showLogarithmicScale",
      "activeWhen": {
        "condition": "conditions.Att1IsChartCommandEnabled"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1IsChartCommandEnabled"
      },
      "selectWhen": {
        "condition": "conditions.isShowLogarithimicScaleSelected"
      }
    },
    "Att1AddMeasurementFromExcelCommandHandler": {
      "id": "Att1AddMeasurementFromExcel",
      "action": "showImportPanel",
      "activeWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "visibleWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "enableWhen": {
        "condition": "conditions.Att1AddMeasurementEnableCond"
      }
    },
    "Att1AddMeasurementFromGoalCommandHandler": {
      "id": "Att1AddMeasurementFromGoal",
      "action": "AddMeasurementFromGoal",
      "activeWhen": {
        "condition": "conditions.Att1AddMeasurementEnableCond"
      },
      "visibleWhen": {
        "condition": "conditions.Att1IsSelectedParameterConstainsComplexData"
      },
      "enableWhen": {
        "condition": "conditions.Att1AddMeasurementEnableCond"
      }
    },
    "Att1AddMeasurementNewCommandHandler": {
      "id": "Att1AddMeasurementNew",
      "action": "AddMeasurementNew",
      "activeWhen": {
        "condition": "conditions.Att1AddMeasurementEnableCond"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1AddMeasurementEnableCond"
      }
    },
    "Att1DuplicateMeasurementEngrTableCommandHandler": {
      "id": "Att1DuplicateMeasurementEngrTable",
      "action": "Att1DuplicateMeasureValueSOACall",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1EnableDuplicateMeasurement"
      }
    },
    "Att1EditMeasurementTableCommandHandler": {
      "id": "Att1EditMeasurementTable",
      "action": "startEditMeasuremetsTable",
      "activeWhen": {
        "condition": "conditions.measurementTableEditNotInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.measurementTableEditNotInProgress"
      },
      "enableWhen": {
        "condition": "conditions.Att1EditMeasurementTableCond"
      }
    },
    "Att1SaveEditMeasurementTableCommandHandler": {
      "id": "Att1SaveEditMeasurementTable",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.isMeasuredValueContextNotActive"
      },
      "visibleWhen": {
        "condition": "conditions.isMeasuredValueContextNotActive"
      }
    },
    "Att1CancelEditMeasurementTableCommandHandler": {
      "id": "Att1CancelEditMeasurementTable",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.isMeasuredValueContextNotActive"
      },
      "visibleWhen": {
        "condition": "conditions.isMeasuredValueContextNotActive"
      }
    },
    "Att1AttachMeasurementEngrTableCommandHandler": {
      "id": "Att1AttachMeasurementEngrTable",
      "action": "initAddMeasurementFilePanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1AttachMeasurementEngrTableCond"
      }
    },
    "Att1ExportEngrTableCommandHandler": {
      "id": "Att1ExportEngrTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.Att1ImportExportEngrTableCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.Att1ImportExportEngrTableCmdCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ImportExportEngrTableEnableCond"
      }
    },
    "Att1ImportNewEngrTableCommandHandler": {
      "id": "Att1ImportNewEngrTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.Att1ImportExportEngrTableCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.Att1ImportExportEngrTableCmdCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ImportNewEngrTableEnableCond"
      }
    },
    "Att1AddTableFromExcelCommandHandler": {
      "id": "Att1AddTableFromExcel",
      "action": "showImportPanel",
      "activeWhen": {
        "condition": "conditions.Att1AddTableActiveCommandCond"
      },
      "visibleWhen": true
    },
    "Att1AddTableNewValueCommandHandler": {
      "id": "Att1AddTableNewValue",
      "action": "showInsertPanel",
      "activeWhen": {
        "condition": "conditions.Att1AddTableActiveCommandCond"
      },
      "visibleWhen": true
    },
    "Att1InsertRowAboveCommandHandler": {
      "id": "Att1InsertRowAbove",
      "action": "insertRowAbove",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      }
    },
    "Att1InsertColumnLeftCommandHandler": {
      "id": "Att1InsertColumnLeft",
      "action": "insertColumnLeft",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1InsertColumnLeftCond"
      }
    },
    "Att1InsertRowSeriesCommandHandler": {
      "id": "Att1InsertRowSeries",
      "action": "insertRowSeries",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1InsertRowSeriesCond"
      }
    },
    "Att1InsertRowBelowCommandHandler": {
      "id": "Att1InsertRowBelow",
      "action": "insertRowBelow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      }
    },
    "Att1InsertColumnSeriesCommandHandler": {
      "id": "Att1InsertColumnSeries",
      "action": "insertColumnSeries",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1SeriesEnabledCondition"
      }
    },
    "Att1DeleteInEngrTableCommandHandler": {
      "id": "Att1DeleteInEngrTable",
      "action": "deleteInEngrTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1DeleteInEngrTableCond"
      }
    },
    "Att1InsertColumnRightCommandHandler": {
      "id": "Att1InsertColumnRight",
      "action": "insertColumnRight",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1InGoalTable"
      },
      "enableWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      }
    },
    "Att1CutInEngrTableCommandHandler": {
      "id": "Att1CutInEngrTable",
      "action": "cutInEngrTable",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1CutInEngrTableCond"
      }
    },
    "Att1CopyInEngrTableCommandHandler": {
      "id": "Att1CopyInEngrTable",
      "action": "copyInEngrTable",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1CellSelectedCond"
      }
    },
    "Att1PasteInEngrTableCommandHandler": {
      "id": "Att1PasteInEngrTable",
      "action": "pasteInEngrTable",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1PasteCellsCond"
      }
    },
    "Att1UndoEngrTableHandler": {
      "id": "Att1UndoEngrTable",
      "action": "undoChanges",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1UndoEngrTableCond"
      }
    },
    "Att1UpdateUomCommandHandler": {
      "id": "Att1UpdateUomEngrTable",
      "action": "showUpdateUomPopup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1ColumnOrSeriesSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ColumnOrSeriesSelectedCond"
      }
    },
    "Att1InsertRowAboveCtxCommandHandler": {
      "id": "Att1InsertRowAboveCtx",
      "action": "insertRowAbove",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      }
    },
    "Att1ColumnCopyFillCtxCommandHandler": {
      "id": "Att1ColumnCopyFillCtx",
      "action": "handleColumnCopyFill",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1IsEnableColumnFillCommand"
      }
    },
    "Att1InsertColumnLeftCtxCommandHandler": {
      "id": "Att1InsertColumnLeftCtx",
      "action": "insertColumnLeft",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      }
    },
    "Att1InsertRowBelowCtxCommandHandler": {
      "id": "Att1InsertRowBelowCtx",
      "action": "insertRowBelow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      }
    },
    "Att1InsertColumnRightCtxCommandHandler": {
      "id": "Att1InsertColumnRightCtx",
      "action": "insertColumnRight",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      }
    },
    "Att1DeleteColumnEngrTableHandler": {
      "id": "Att1DeleteColumnInEngrTable",
      "action": "deleteInEngrTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1ColumnSelectedCond"
      }
    },
    "Att1DeleteRowEngrTableHandler": {
      "id": "Att1DeleteRowInEngrTable",
      "action": "deleteInEngrTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1RowSelectedCond"
      }
    },
    "Att1ClearContentsInEngrTableHandler": {
      "id": "Att1ClearContentsInEngrTable",
      "action": "clearContents",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1IsClearContentEnabledCond"
      }
    },
    "Att1StartEditEngrTableHandler": {
      "id": "Att1StartEditEngrTable",
      "action": "startEditInEngrTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1StartEditEnableEngrTableCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1EngrTableEditable"
      }
    },
    "Att1SaveEditEngrTableHandler": {
      "id": "Att1SaveEditEngrTable",
      "action": "saveEditEngrTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1SaveOrCancelEditEnableEngrTableCond"
      },
      "enableWhen": {
        "condition": "conditions.Att1EngrTableEditable"
      }
    },
    "Att1CancelEditEngrTableHandler": {
      "id": "Att1CancelEditEngrTable",
      "action": "reloadTable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1SaveOrCancelEditEnableEngrTableCond"
      }
    },
    "Att1StartEditParamTreeCommandHandler": {
      "id": "Awp0StartEditTable",
      "action": "Att1StartEditParamTree",
      "activeWhen": {
        "condition": "conditions.startEditParamTreeCond"
      },
      "visibleWhen": {
        "condition": "conditions.startEditParamTreeCond"
      }
    },
    "Awp0PasteCommandHandler": {
      "id": "Awp0Paste",
      "activeWhen": {
        "condition": "conditions.PasteCmdVisibilityDelegate"
      },
      "visibleWhen": false,
      "enableWhen": {
        "condition": "conditions.PasteCmdVisibilityDelegate"
      }
    },
    "Att1HideAwp0PasteInProjectTreeCommandHandler": {
      "id": "Awp0Paste",
      "activeWhen": {
        "condition": "conditions.Att1InParamProjectSublocation"
      },
      "visibleWhen": false
    },
    "Att1HideAwp0PasteCtxMenuInProjectTreeCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.Att1InParamProjectSublocation"
      },
      "visibleWhen": false
    },
    "Awp0PasteInProjectTreeCommandHandler": {
      "id": "Awp0Paste",
      "action": "getMeasurableAttributesInClipboard",
      "activeWhen": {
        "condition": "conditions.PasteCmdVisibilityInProjectTree"
      },
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0PasteCtxMenuInProjectTreeCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "getMeasurableAttributesInClipboard",
      "activeWhen": {
        "condition": "conditions.PasteCmdVisibilityInProjectTreeCtxMenu"
      },
      "visibleWhen": true
    },
    "Att1PasteInDictionaryCommandHandler": {
      "id": "Awp0Paste",
      "action": "Att1PrePasteInDictionary",
      "activeWhen": {
        "condition": "conditions.att1ActivePasteInDictionaryCond"
      },
      "enableWhen": {
        "condition": "conditions.att1ActivePasteInDictionaryCond"
      },
      "visibleWhen": {
        "condition": "conditions.att1PasteInDictionaryVisibilityCond"
      }
    },
    "Att1PasteCtxMenuInDictionaryCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "Att1PrePasteInDictionary",
      "activeWhen": {
        "condition": "conditions.att1ActivePasteInDictionaryCond"
      },
      "visibleWhen": {
        "condition": "conditions.att1PasteInDictionaryVisibilityCond"
      }
    },
    "attShowMapAttribCommandHandler": {
      "id": "Att1MapAttribute",
      "action": "showMapAttribPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showAttrMapVisibleCond"
      }
    },
    "att1CopyParamProxyCommandHandler": {
      "id": "Awp0Copy",
      "action": "copyParamProxy",
      "activeWhen": {
        "condition": "conditions.att1CopyParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1CopyParamProxyCommandVisible"
      }
    },
    "att1CopyContextMenuParamProxyCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyParamProxy",
      "activeWhen": {
        "condition": "conditions.att1CopyParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1CopyParamProxyCommandVisible"
      }
    },
    "att1ShowParamProxyCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showParamProxy",
      "activeWhen": {
        "condition": "conditions.att1ShowParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1ShowParamProxyCommandVisible"
      }
    },
    "att1ShowParamProxyForReviseCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showParamProxyForRevise",
      "activeWhen": {
        "condition": "conditions.att1ShowParamProxyForReviseCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1ShowParamProxyForReviseCommandVisible"
      }
    },
    "att1OpenParamInNewTABCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openParamInNewTab",
      "activeWhen": {
        "condition": "conditions.att1OpenParamInNewTabCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1OpenParamInNewTabCommandVisible"
      }
    },
    "att1OpenParamProxyInNewTABCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openParamInNewTabWidePanel",
      "activeWhen": {
        "condition": "conditions.att1OpenParamInNewTabWidePanelCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.att1OpenParamInNewTabWidePanelCmdCond"
      }
    },
    "att1OpenParamProxyInNewWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openParamProxyInNewWindow",
      "activeWhen": {
        "condition": "conditions.att1OpenParamProxyInNewWindowCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1OpenParamProxyInNewWindowCommandVisible"
      }
    },
    "att1OpenParamProxyInRACCommandHandler": {
      "id": "Awp0OpenInRAC",
      "action": "openParamProxyInRAC",
      "activeWhen": {
        "condition": "conditions.att1OpenParamProxyInRACCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1OpenParamProxyInRACCommandVisible"
      }
    },
    "att1SaveAsParamProxyCommandHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "saveAsParamProxy",
      "activeWhen": {
        "condition": "conditions.att1SaveAsParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1SaveAsParamProxyCommandVisible"
      }
    },
    "att1ReviseParamProxyCommandHandler": {
      "id": "Awp0ShowRevise",
      "action": "reviseParamProxy",
      "activeWhen": {
        "condition": "conditions.att1ReviseParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1ReviseParamProxyCommandVisible"
      }
    },
    "att1SaveAsParamCommandHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "saveAsParam",
      "activeWhen": {
        "condition": "conditions.att1SaveAsParamCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1SaveAsParamCommandVisible"
      }
    },
    "att1ReviseParamCommandHandler": {
      "id": "Awp0ShowRevise",
      "action": "reviseParam",
      "activeWhen": {
        "condition": "conditions.att1ReviseParamCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1ReviseParamCommandVisible"
      }
    },
    "att1NewWorkflowParamProxyCommandHandler": {
      "id": "Awp0NewWorkflowProcess",
      "action": "newWorkflowParamProxy",
      "activeWhen": {
        "condition": "conditions.att1NewWorkflowParamProxyCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1NewWorkflowParamProxyCommandVisible"
      }
    },
    "cutParameterDelegateCommandHandler": {
      "id": "Awp0Cut",
      "action": "cutParameters",
      "enableWhen": {
        "condition": "conditions.att0CutParamCmdCond"
      },
      "activeWhen": {
        "condition": "conditions.att0CutParamCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.att0CutParamCmdCond"
      }
    },
    "cutCtxMenuParameterDelegateCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "cutParameters",
      "activeWhen": {
        "condition": "conditions.att0CutParamCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.att0CutParamCmdCond"
      }
    },
    "cutParameDelegateForProjectTreeCommandHandler": {
      "id": "Awp0Cut",
      "action": "cutParameters",
      "enableWhen": {
        "condition": "conditions.att0CutParamCmdCondForProjectTree"
      },
      "activeWhen": {
        "condition": "conditions.att0CutParamCmdCondForProjectTree"
      },
      "visibleWhen": {
        "condition": "conditions.att0CutParamCmdCondForProjectTree"
      }
    },
    "cutCtxMenuParameDelegateForProjectTreeCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "cutParameters",
      "activeWhen": {
        "condition": "conditions.att0CutParamCmdCondForProjectTree"
      },
      "visibleWhen": {
        "condition": "conditions.att0CutParamCmdCondForProjectTree"
      }
    },
    "cutGroupProjectTreeCommandHandler": {
      "id": "Awp0Cut",
      "action": "setPropertiesOnGroupCut",
      "enableWhen": {
        "condition": "conditions.cutGroupFromProjectCond"
      },
      "activeWhen": {
        "condition": "conditions.cutGroupFromProjectCond"
      },
      "visibleWhen": {
        "condition": "conditions.cutGroupFromProjectCond"
      }
    },
    "cutCtxMenuGroupProjectTreeCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "setPropertiesOnGroupCut",
      "activeWhen": {
        "condition": "conditions.cutGroupFromProjectCond"
      },
      "visibleWhen": {
        "condition": "conditions.cutGroupFromProjectCond"
      }
    },
    "checkoutProxyDelegateCommandHandler": {
      "id": "Awp0Checkout",
      "action": "checkoutProxyObjects",
      "enableWhen": {
        "condition": "conditions.att0CheckoutProxyCmdCond"
      },
      "activeWhen": {
        "condition": "conditions.att0CheckoutProxyCmdCond"
      },
      "visibleWhen": true
    },
    "checkinProxyDelegateCommandHandler": {
      "id": "Awp0Checkin",
      "action": "checkinProxyObjects",
      "enableWhen": {
        "condition": "conditions.att0CheckinProxyCmdCond"
      },
      "activeWhen": {
        "condition": "conditions.att0CheckinProxyCmdCond"
      },
      "visibleWhen": true
    },
    "cancelCheckoutProxyDelegateCommandHandler": {
      "id": "Awp0CancelCheckout",
      "action": "cancelCheckoutProxyObjects",
      "enableWhen": {
        "condition": "conditions.att0cancelCheckoutProxyCmdCond"
      },
      "activeWhen": {
        "condition": "conditions.att0cancelCheckoutProxyCmdCond"
      },
      "visibleWhen": true
    },
    "attShowUnMapAttribCommandHandler": {
      "id": "Att1UnMapAttribute",
      "action": "deleteMappingAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showAttrUnMapVisibleCond"
      }
    },
    "StartEditAttributeProxyCommandHandler": {
      "id": "StartEditAttributeProxyTable",
      "action": "startEditSummary",
      "activeWhen": {
        "condition": "conditions.att1CheckEditModeIsOffForSummary"
      },
      "visibleWhen": {
        "condition": "conditions.att1CheckEditModeIsOffForSummary"
      }
    },
    "SaveEditAttributeProxyCommandHandler": {
      "id": "SaveEditAttributeProxyTable",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.att1CheckEditModeIsOnForSummary"
      },
      "visibleWhen": {
        "condition": "conditions.att1CheckEditModeIsOnForSummary"
      }
    },
    "CancelEditAttributeProxyCommandHandler": {
      "id": "CancelEditAttributeProxyTable",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.att1CheckEditModeIsOnForSummary"
      },
      "visibleWhen": {
        "condition": "conditions.att1CheckEditModeIsOnForSummary"
      }
    },
    "DummyStartEditToHideFrameworkCmdCommandHandler": {
      "id": "Awp0StartEdit",
      "activeWhen": {
        "condition": "conditions.hideFrameworkStartEditCommand"
      },
      "visibleWhen": false
    },
    "DummySaveEditToHideFrameworkCmdCommandHandler": {
      "id": "Awp0SaveEdits",
      "activeWhen": {
        "condition": "conditions.hideFrameworkSaveEditCommand"
      },
      "visibleWhen": false
    },
    "DummyCancelEditToHideFrameworkCmdCommandHandler": {
      "id": "Awp0CancelEdits",
      "activeWhen": {
        "condition": "conditions.hideFrameworkCancelEditCommand"
      },
      "visibleWhen": false
    },
    "Att1RemoveMeasurableAttrFromInContextCommandHandler": {
      "id": "Att1RemoveMeasurableAttrFromInContext",
      "action": "isValidationContract",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1RemoveMeasurableAttrFromInContextVisibility"
      }
    },
    "Att1RemoveMeasurableAttrFromDCPCommandHandlerFor12x": {
      "id": "Att1RemoveMeasurableAttrFromDCP12x",
      "action": "getAllSelectedParameterNames",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Att1RemoveMeasurableAttrFromDCPVisibilityFor12x"
      }
    },
    "Att1ReleaseParamDefinitionCommndHandler": {
      "id": "Att1ReleaseParamDefinition",
      "action": "releaseParamDefToWorkFLow",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.releaseParamDefEnableCondition"
      }
    },
    "Att1RemoveMeasurableAttrFromSplitTableCommandHandlerFor12x": {
      "id": "Att1RemoveMeasurableAttrFromSplitTableFor12x",
      "action": "getAllSelectedParameterNames",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeMeasurableAttrFromSplitTableVisibilityFor12x"
      }
    },
    "Att1AddMeasurableAttrFromTableCommandHandler": {
      "id": "Att1AddMeasurableAttrFromTable",
      "action": "openPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addMeasurableAttrVisibility"
      }
    },
    "Att1AddAParamValueForProductCommandHandler": {
      "id": "Att1AddAParamValueFromTable",
      "action": "att1AddParameterValue",
      "activeWhen": {
        "condition": "conditions.AddParamValueForProductVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.AddParamValueForProductVisibility"
      }
    },
    "Att1AssociateParamDictonariesCommandHandler": {
      "id": "Att1AssociateParamDictonaries",
      "action": "openAssociatePanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Att1PasteAttributeCommandHandler": {
      "id": "Att1PasteAttribute",
      "action": "getMeasurableAttributesInClipboardForAwb0Element",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.pasteAttributeVisibility"
      }
    },
    "Att1PasteParameterCommandHandler": {
      "id": "Att1PasteParameter",
      "action": "getMeasurableAttributesInClipboardForAwb0Element",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.pasteParameterVisibility"
      }
    },
    "attAutoMapAttribCommandHandlerNoSelect": {
      "id": "Att1AutoMapAttributes",
      "action": "confirmAutoMapAttributes",
      "activeWhen": {
        "condition": "conditions.att1ActiveMappingParameters"
      },
      "enableWhen": {
        "condition": "conditions.noEditModeNoSelectForMappingTable"
      },
      "visibleWhen": true
    },
    "attAutoMapAttribCommandHandlerSelect": {
      "id": "Att1AutoMapAttributes",
      "action": "automapSelectedAttributes",
      "activeWhen": {
        "condition": "conditions.noEditModeAndSelectForMappingTable"
      },
      "visibleWhen": {
        "condition": "conditions.noEditModeAndSelectForMappingTable"
      }
    },
    "ShowMeasurableAttrCommandHandler": {
      "id": "ShowMeasurableAttr",
      "action": "getMeasurableAttr",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Att1DownloadFileCommandHandler": {
      "id": "Att1DownloadFile",
      "action": "downloadFileAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Att1ReplaceFileCommandHandler": {
      "id": "Att1ReplaceFile",
      "action": "showReplaceDatasetDialog",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.replaceDatasetVisibleCond"
      }
    },
    "Att1AddMeasurementFileCommandHandler": {
      "id": "Att1AddMeasurementFile",
      "action": "initAddMeasurementFilePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addMeasurementFileVisibleCond"
      }
    },
    "Att1ShowChildrenForParamGroupHandler": {
      "id": "Att1ShowChildrenForParamGroup",
      "action": "navigateParamGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.navigateParamGroupVisibleCondition"
      }
    },
    "Att1OpenGroupOrParamterHandler": {
      "id": "Att1OpenGroupOrParamter",
      "action": "getMeasurableAttr",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Att1AddParameterGroupHandler": {
      "id": "Att1AddParameterGroup",
      "action": "openAddParamGroupCommandPanel",
      "activeWhen": {
        "condition": "conditions.isAtt1AddParameterGroupButtonVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAtt1AddParameterGroupButtonVisible"
      }
    },
    "Att1ShowCreateObjectHandlerDelegate": {
      "id": "Awp0ShowCreateObject",
      "activeWhen": {
        "condition": "conditions.isDictionaryContext"
      },
      "visibleWhen": false
    },
    "Att1ExportToExcelCommandHandler": {
      "id": "Arm0Export",
      "action": "Att1ExportParametersPanelPWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripPWACommandCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripPWACommandCondition"
      }
    },
    "Att1HideAwp0ExportToExcelCommandHandler": {
      "id": "Awp0ExportToExcel",
      "activeWhen": {
        "condition": "conditions.att1HideAwp0ExportToExcelCommandCondition"
      },
      "visibleWhen": false
    },
    "Att1HideArm0ImportExcelCommandHandler": {
      "id": "Arm0ImportExcel",
      "activeWhen": {
        "condition": "conditions.att1ParameterFamilyObjectSelected"
      },
      "visibleWhen": false
    },
    "Att1ImportNewParameterCommandHandler": {
      "id": "Att1ImportNew",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1ParameterFamilyObjectSelected"
      },
      "visibleWhen": {
        "condition": "conditions.att1ImportParameterPWAVisiblity"
      }
    },
    "Att1ExportToExcelSplitTablePWACommandHandler": {
      "id": "Arm0Export",
      "action": "Att1ExportParametersPanelPWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibility"
      }
    },
    "Att1ImportNewSplitTablePWACommandHandler": {
      "id": "Att1ImportNew",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibilityForTC122"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibilityForTC122"
      }
    },
    "cutObjectConsumingTableCommandHandler": {
      "id": "Awp0Cut",
      "visibleWhen": false,
      "activeWhen": {
        "condition": "conditions.shouldHideCutCommandForConsumingTable"
      }
    },
    "cutCtxMenuObjectConsumingTableCommandHandler": {
      "id": "Awp0CutContextMenu",
      "visibleWhen": false,
      "activeWhen": {
        "condition": "conditions.shouldHideCutCommandForConsumingTable"
      }
    },
    "cutParamForFolderCommandHandler": {
      "id": "Awp0Cut",
      "visibleWhen": true,
      "action": "performCutOperation",
      "enableWhen": {
        "condition": "conditions.canCutParamForFolderStuff"
      },
      "activeWhen": {
        "condition": "conditions.canCutParamForFolderStuff"
      }
    },
    "cutMeasurementDatasetDelegateCommandHandler": {
      "id": "Awp0Cut",
      "action": "cutMeasurementDataset",
      "enableWhen": {
        "condition": "conditions.att0CutMeasurementDatasetCmdCond"
      },
      "activeWhen": {
        "condition": "conditions.att0CutMeasurementDatasetCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.att0CutMeasurementDatasetCmdCond"
      }
    },
    "cutCtxMenuParamForFolderCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "performCutOperation",
      "visibleWhen": {
        "condition": "conditions.canCutParamForFolderStuff"
      },
      "activeWhen": {
        "condition": "conditions.canCutParamForFolderStuff"
      }
    },
    "Att1DeleteGroupCommandHandler": {
      "id": "Att1DeleteGroup",
      "action": "Att1DeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.att1DeleteGroupVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1DeleteGroupVisibility"
      }
    },
    "Att1ExportParamTableCommandHandler": {
      "id": "Att1ExportParamTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripCommandCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripCommandCondition"
      }
    },
    "Att1ShowChildrenParametersCommandHandler": {
      "id": "Att1ShowChildrenParameters",
      "action": "Att1ShowChildrenParameters",
      "visibleWhen": {
        "condition": "conditions.att1EnableShowFromChildren"
      },
      "activeWhen": {
        "condition": "conditions.att1ActiveShowFromChildren"
      },
      "selectWhen": {
        "condition": "conditions.att1IsShowChildrenParamsSelected"
      },
      "enableWhen": {
        "condition": "conditions.att1EnableShowFromChildrenCond"
      }
    },
    "Att1PlotChartCommandHandler": {
      "id": "Att1PlotChart",
      "action": "plotChartForParameters",
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Att1IsPlotChartCommandEnabled"
      },
      "activeWhen": true
    },
    "Att1ManageMeasurementsCommandHandler": {
      "id": "Att1ManageMeasurements",
      "action": "openWidePanelToManageMeasurements",
      "visibleWhen": {
        "condition": "conditions.att1EnableManageMeasurements"
      },
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.att1IsManageMeasurementsCommandEnabled"
      }
    },
    "Att1ImportNewParamTableCommandHandler": {
      "id": "Att1ImportNewParamTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1RoundTripCommandCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1ImportNewParamTableVisibility"
      }
    },
    "Att1ExportForStudyParametersCommandHandler": {
      "id": "Att1ExportParamTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripStudyParameterVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripStudyParameterVisibility"
      }
    },
    "Att1ImportNewParamForStudyParametersCommandHandler": {
      "id": "Att1ImportNewParamTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1RoundTripImportStudyParameterVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripImportStudyParameterVisibility"
      }
    },
    "Att1ExportParamSplitTableSWACommandHandler": {
      "id": "Att1ExportParamTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibilityForExport"
      }
    },
    "Att1ImportNewParamSplitSWATableCommandHandler": {
      "id": "Att1ImportNewParamTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripSplitTableVisibility"
      }
    },
    "Att1ExportParamReqSWACommandHandler": {
      "id": "Att1ExportParamTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.att1RoundTripRequirementParamSWATableVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripRequirementParamSWATableVisibility"
      }
    },
    "Att1ImportNewParamReqSWACommandHandler": {
      "id": "Att1ImportNewParamTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1RoundTripRequirementParamSWATableVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripRequirementParamSWATableVisibility"
      }
    },
    "Att1FreezePointCommandHandler": {
      "id": "Att1SetFreezePoint",
      "action": "att1PrepareFreezePoint",
      "activeWhen": {
        "condition": "conditions.att1setFreezePointCommandVisibilityCond"
      },
      "visibleWhen": {
        "condition": "conditions.att1setFreezePointCommandVisibilityCond"
      }
    },
    "Att1AssignFinishCommandHandler": {
      "id": "Fsh1AssignFinish",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1GenerateCAEStructureCommandHandler": {
      "id": "Cae1GenerateCAEStructure",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1GenerateFmeaCommandHandler": {
      "id": "Qfm0GenerateFmea",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1ConfigByProximityCmdCommandHandler": {
      "id": "Awb0ConfigByProximityCmd",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1SeparateCommandHandler": {
      "id": "Awb0Separate",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1PackCommandHandler": {
      "id": "Awb0Pack",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1UnpackCommandHandler": {
      "id": "Awb0Unpack",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1PackAllCommandHandler": {
      "id": "Awb0PackAll",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1UnpackAllCommandHandler": {
      "id": "Awb0UnpackAll",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1CreateRollupReportCommandHandler": {
      "id": "Awb0RollupGroup",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1AddCharRepresentationCommandHandler": {
      "id": "Aqc0AddCharRepresentation",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1CreateLineItemCommandHandler": {
      "id": "Sc1CreateLineItem",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1Sc1CreateExchangeCommandHandler": {
      "id": "Sc1CreateExchange",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1ImportFromOfficeCommandHandler": {
      "id": "Arm0ImportFromOffice",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1NewCollaborationCommandHandler": {
      "id": "Eda1NewCollaboration",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1BranchUploadCommandHandler": {
      "id": "Bhv1BranchUpload",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1BranchExportCommandHandler": {
      "id": "Bhv1BranchExport",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1ExportNXDataCommandHandler": {
      "id": "Awn0ExportNXData",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInACE"
      },
      "visibleWhen": false
    },
    "Att1OpenInRACCommandHandler": {
      "id": "Awp0OpenInRAC",
      "activeWhen": {
        "condition": "conditions.att1IsProjOrSetOpenInRichClientVisible"
      },
      "visibleWhen": false
    },
    "Att1OpenNxTcXmlCommandHandler": {
      "id": "Awn0OpenNxTcXml",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1OpenVVICommandHandler": {
      "id": "Awp0OpenVVI",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1ImportFromBriefcaseCommandHandler": {
      "id": "importFromBriefcaseCommand",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1openInIllustratorCommandHandler": {
      "id": "openInIllustrator",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1OpenInSEECCommandHandler": {
      "id": "Awp0OpenInSEEC",
      "activeWhen": {
        "condition": "conditions.att1InContextOfParameterProjectOrGroup"
      },
      "visibleWhen": false
    },
    "Att1ReviseAndReplaceCommandHandler": {
      "id": "Att1ReviseAndReplaceParameter",
      "action": "att1StartReplaceToLatestRevision",
      "activeWhen": {
        "condition": "conditions.att1ReviseReplaceVisibilityCond"
      },
      "enableWhen": {
        "condition": "conditions.att1ReviseReplaceVisibilityCond"
      },
      "visibleWhen": {
        "condition": "conditions.att1ReviseReplaceVisibilityCond"
      }
    },
    "Att1ReplaceParameterRevisionCommandHandler": {
      "id": "Att1ReplaceParameterRevision",
      "action": "OpenReplaceParamRevisionPanel",
      "activeWhen": {
        "condition": "conditions.att1EnableReplaceParameters"
      },
      "visibleWhen": {
        "condition": "conditions.att1EnableReplaceParameters"
      },
      "enableWhen": {
        "condition": "conditions.replaceParamRevisionCmdVisibility"
      }
    },
    "Att1SetInputDirectionCommandHandler": {
      "id": "Att1SetInputDirection",
      "action": "Att1SetParametersDirectionInput",
      "activeWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "visibleWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "enableWhen": {
        "condition": "conditions.att1SetInputDirectionVisibilityCond"
      }
    },
    "Att1SetOutputDirectionCommandHandler": {
      "id": "Att1SetOutputDirection",
      "action": "Att1SetParametersDirectionOutput",
      "activeWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "visibleWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "enableWhen": {
        "condition": "conditions.att1SetOutputDirectionVisibilityCond"
      }
    },
    "Att1SetUnusedDirectionCommandHandler": {
      "id": "Att1SetUnusedDirection",
      "action": "Att1SetParametersDirectionUnused",
      "activeWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "visibleWhen": {
        "condition": "conditions.att1EnableSetDirection"
      },
      "enableWhen": {
        "condition": "conditions.att1SetUnusedDirectionVisibilityCond"
      }
    },
    "Att1SetInputParametersTableCommandHandler": {
      "id": "Att1SetInputDirection",
      "action": "Att1SetParametersDirectionInput",
      "activeWhen": {
        "condition": "conditions.att1SetInputParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1SetInputParametersTableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1SetInputParametersTableCondition"
      }
    },
    "Att1SetOutputParametersTableCommandHandler": {
      "id": "Att1SetOutputDirection",
      "action": "Att1SetParametersDirectionOutput",
      "activeWhen": {
        "condition": "conditions.att1SetOutputParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1SetOutputParametersTableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1SetOutputParametersTableCondition"
      }
    },
    "Att1SetUnusedParametersTableCommandHandler": {
      "id": "Att1SetUnusedDirection",
      "action": "Att1SetParametersDirectionUnused",
      "activeWhen": {
        "condition": "conditions.att1SetUnusedParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1SetUnusedParametersTableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1SetUnusedParametersTableCondition"
      }
    },
    "Att1ShowParameterVariantsToggleCmdHandler": {
      "id": "Att1ShowParameterVariantsToggleCmd",
      "action": "toggleShowParameters",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showParameterVariantsToggleCmdVisibility"
      },
      "selectWhen": {
        "condition": "conditions.showParameterVariantsToggleCmdSelectedVisibility"
      },
      "enableWhen": true
    },
    "Att1EnableMultiSelectObjectSetHandler": {
      "id": "Att1EnableMultiSelectObjectSet",
      "action": "Att1EnableMultiSelectObjectSetCommandAction",
      "activeWhen": {
        "condition": "conditions.att1MultiSelectObjectSetEnableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1MultiSelectObjectSetEnableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1IsParamTableNonEmpty"
      }
    },
    "Att1EnableMultiSelectReusableParamTableHandler": {
      "id": "Att1EnableMultiSelectObjectSet",
      "action": "Att1DisableMultiSelectReusableParamTableCommandAction",
      "activeWhen": {
        "condition": "conditions.att1MultiSelectReusableParamTableEnableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1MultiSelectReusableParamTableEnableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1IsParamTableNonEmpty"
      }
    },
    "Att1DisableMultiSelectObjectSetHandler": {
      "id": "Att1DisableMultiSelectObjectSet",
      "action": "Att1DisableMultiSelectObjectSetCommandAction",
      "activeWhen": {
        "condition": "conditions.att1MultiSelectObjectSetDisableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1MultiSelectObjectSetDisableCondition"
      }
    },
    "Att1DisableMultiSelectReusableParamTableHandler": {
      "id": "Att1DisableMultiSelectObjectSet",
      "action": "Att1DisableMultiSelectReusableParamTableCommandAction",
      "activeWhen": {
        "condition": "conditions.att1MultiSelectReusableParamTableDisableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1MultiSelectReusableParamTableDisableCondition"
      }
    },
    "Att1SelectAllObjectSetHandler": {
      "id": "Att1SelectAllObjectSet",
      "action": "Att1SelectAllObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1SelectAllObjectSetCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1IsParamTableNonEmpty"
      }
    },
    "Att1DeselectAllObjectSetHandler": {
      "id": "Att1DeselectAllObjectSet",
      "action": "Att1DeselectAllObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1DeselectAllObjectSetCondition"
      }
    },
    "Att1StartEditParametersTableHandler": {
      "id": "Att1StartEditParametersTable",
      "action": "startEditSummary",
      "activeWhen": {
        "condition": "conditions.att1StartEditParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1StartEditParametersTableCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1EnableStartEditParamTableCondition"
      }
    },
    "Att1SaveEditParametersTableHandler": {
      "id": "Att1SaveEditParametersTable",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.att1SaveEditParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1SaveEditParametersTableCondition"
      }
    },
    "Att1CancelEditParametersTableHandler": {
      "id": "Att1CancelEditParametersTable",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.att1SaveEditParametersTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1SaveEditParametersTableCondition"
      }
    },
    "Att1CutParameterHandler": {
      "id": "Att1CutParameter",
      "action": "getInputsForRemove",
      "activeWhen": {
        "condition": "conditions.att1EnableRemoveParameters"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1CutParameterCondition"
      }
    },
    "Att1CutInlineParameterHandler": {
      "id": "Att1CutParameter",
      "action": "removeSelectedInlineParamAction",
      "activeWhen": {
        "condition": "conditions.att1EnableRemoveInlineParameters"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1CutInlineParameterCondition"
      }
    },
    "Att1DeleteOccParameterHandler": {
      "id": "Att1DeleteOccParameter",
      "action": "checkParamSelectedWithoutSWAForOverride",
      "activeWhen": {
        "condition": "conditions.att1EnableRemoveParameters"
      },
      "visibleWhen": {
        "condition": "conditions.att1DeleteOccParameterCondition"
      }
    },
    "Att1DeleteParameterHandler": {
      "id": "Att1DeleteParameter",
      "action": "checkParamSelectedWithoutSWA",
      "activeWhen": {
        "condition": "conditions.att1EnableDeleteParameters"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1DeleteParameterConditionAll"
      }
    },
    "Att1DeleteParameterFromPWACommandHandler": {
      "id": "Att1DeleteParameterFromPWA",
      "action": "checkParamSelectedWithoutSWA",
      "activeWhen": {
        "condition": "conditions.att1DeleteParameterFromPWACondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1DeleteParameterFromPWACondition"
      },
      "enableWhen": {
        "condition": "conditions.att1DeleteParameterFromPWACondition"
      }
    },
    "Att1ExportUniformTableCommandHandler": {
      "id": "Att1ExportParamTable",
      "action": "Att1ExportParametersPanelSWA",
      "activeWhen": {
        "condition": "conditions.att1ActiveExportParameters"
      },
      "visibleWhen": {
        "condition": "conditions.att1RoundTripUniformTableCondition"
      }
    },
    "Att1ImportNewUniformTableCommandHandler": {
      "id": "Att1ImportNewParamTable",
      "action": "att1StartImportNew",
      "activeWhen": {
        "condition": "conditions.att1ImportNewUniformTableActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1ImportNewUniformTableVisibility"
      }
    },
    "Att1AddInLineCommandHandler": {
      "id": "Att1AddInLine",
      "action": "AddInLineCommandAction",
      "activeWhen": {
        "condition": "conditions.att1ActiveAddParameters"
      },
      "visibleWhen": {
        "condition": "conditions.isTcReleaseAtLeast14"
      },
      "enableWhen": {
        "condition": "conditions.Att1InlineAuthoringCommandCond"
      }
    },
    "Att1AddParameterCommandHandler": {
      "id": "Att1AddParameter",
      "action": "openPanel",
      "activeWhen": {
        "condition": "conditions.att1ActiveAddParameters"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.att1AddParameterCondition"
      }
    },
    "Att1AddTableValueFromExcelCommandHandler": {
      "id": "Att1AddTableValueFromExcel",
      "action": "openFileSelectionDialog",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1IsAddComplexDataCommandEnabled"
      },
      "enableWhen": {
        "condition": "conditions.att1IsAddComplexDataCommandEnabled"
      }
    },
    "Att1AddTableValueCommandHandler": {
      "id": "Att1AddTableValue",
      "action": "openWidePanelToGetDimensions",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1IsAddComplexDataCommandEnabled"
      },
      "enableWhen": {
        "condition": "conditions.att1IsAddComplexDataCommandEnabled"
      }
    },
    "Att1DisableArrangeColumn": {
      "id": "openArrangePanel",
      "action": "",
      "activeWhen": {
        "condition": "conditions.att1disableArrangeCond"
      },
      "visibleWhen": false
    },
    "Att1AddParameterValueCommandHandler": {
      "id": "Att1AddParameterValue",
      "action": "att1AddParameterValue",
      "activeWhen": {
        "condition": "conditions.att1AddParameterValueCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1AddParameterValueCondition"
      }
    },
    "Att1PasteParameterAsReferenceHandler": {
      "id": "Att1PasteParameterAsReference",
      "action": "getMeasurableAttributesInClipboardForAwb0Element",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1PasteParameterCondition"
      },
      "enableWhen": {
        "condition": "conditions.att1PasteParameterCondition"
      }
    },
    "Att1CopyAndPasteParameterPWAHandler": {
      "id": "Att1CopyAndPasteParameterPWA",
      "action": "callAttachParamSOAForAddCopy",
      "activeWhen": {
        "condition": "conditions.att1CopyAndPasteParameterPWACondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1CopyAndPasteParameterPWACondition"
      },
      "enableWhen": {
        "condition": "conditions.att1CopyAndPasteParameterPWACondition"
      }
    },
    "Att1CopyAndPasteParameterHandler": {
      "id": "Att1CopyAndPasteParameter",
      "action": "callAttachParamSOAForAddCopy",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.att1EnablePasteParameters"
      },
      "enableWhen": {
        "condition": "conditions.att1PasteParameterCondition"
      }
    },
    "Att1ReviseAndReplaceParametersCommandHandler": {
      "id": "Att1ReviseAndReplaceParameter",
      "action": "att1StartReplaceToLatestRevision",
      "activeWhen": {
        "condition": "conditions.att1EnableReplaceParameters"
      },
      "enableWhen": {
        "condition": "conditions.att1ReviseReplaceParametersCondition"
      },
      "visibleWhen": {
        "condition": "conditions.att1EnableReplaceParameters"
      }
    },
    "Att1OverriddenAwb0ExpandBelowCtxMenuCommandHandler": {
      "id": "Awb0ExpandBelowCtxMenu",
      "action": "",
      "activeWhen": {
        "condition": "!conditions.hideAwb0CtxMenuCommands"
      },
      "visibleWhen": false
    },
    "Att1OverriddenAwb0CollapseBelowCtxMenuCommandHandler": {
      "id": "Awb0CollapseBelowCtxMenu",
      "action": "",
      "activeWhen": {
        "condition": "!conditions.hideAwb0CtxMenuCommands"
      },
      "visibleWhen": false
    },
    "Att1ShowReviseHandler": {
      "id": "Att1ShowRevise",
      "action": "Att1GetReviseInputForMultipleParams",
      "activeWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInPWA"
      },
      "enableWhen": {
        "condition": "conditions.Att1ShowReviseOnParamTableCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.att1IsParameterProjectOrGroupInPWA"
      }
    },
    "Att1ShowRangeHandler": {
      "id": "Att1ShowRange",
      "action": "Att1ShowRange",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.att1ShowGoalRangeEnabled"
      },
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.Att1ShowRangeSelected"
      }
    },
    "Att1ShowGoalHandler": {
      "id": "Att1ShowGoal",
      "action": "Att1ShowGoal",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.att1ShowGoalRangeEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.att1ShowGoalVisibility"
      },
      "selectWhen": {
        "condition": "conditions.Att1ShowGoalSelected"
      }
    },
    "cutDictionaryFromACECommandHandler": {
      "id": "Awp0Cut",
      "action": "cutSecondaryFromElement",
      "enableWhen": {
        "condition": "conditions.cutOrDeleteSecondaryFromElement"
      },
      "activeWhen": {
        "condition": "conditions.cutOrDeleteSecondaryFromElement"
      },
      "visibleWhen": true
    },
    "deleteDictionaryFromACECommandHandler": {
      "id": "Awp0Delete",
      "action": "deleteCommandAction",
      "enableWhen": {
        "condition": "conditions.cutOrDeleteSecondaryFromElement"
      },
      "activeWhen": {
        "condition": "conditions.cutOrDeleteSecondaryFromElement"
      },
      "visibleWhen": true
    },
    "Att1DisableOpenGroupCommand": {
      "id": "Awp0OpenGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableNewGroupCommand": {
      "id": "Awp0NewGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisablePasteGroupCommand": {
      "id": "Awp0PasteGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableEditGroupCommand": {
      "id": "Awp0EditGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableManageGroupCommand": {
      "id": "Awp0ManageGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableShareGroupCommand": {
      "id": "Awp0ShareGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableViewGroupCommand": {
      "id": "Awp0ViewGroup",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableCutGroupCommand": {
      "id": "Awp0Cut",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    },
    "Att1DisableCopyGroupCommand": {
      "id": "Awp0Copy",
      "action": "",
      "activeWhen": {
        "condition": "conditions.disableRightWallCommandsInQuickAddMode"
      },
      "enableWhen": false,
      "visibleWhen": true
    }
  },
  "commandPlacements": {
    "Att1SaveEditInlineParametersCommandPlacement": {
      "id": "Att1SaveEditInlineParameters",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 109
    },
    "Att1CancelEditInlineParametersCommandPlacement": {
      "id": "Att1CancelEditInlineParameters",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 109
    },
    "Att1WidePanelPopupCloseCommandPlacement": {
      "id": "Att1WidePanelPopupClose",
      "uiAnchor": "att1_parameter_complex_data",
      "priority": 330
    },
    "Att1FullScreenCommandPlacement": {
      "id": "Att1WidePanelFullScreen",
      "uiAnchor": "att1_parameter_complex_data",
      "priority": 310
    },
    "Att1ExitFullScreenCommandPlacement": {
      "id": "Att1ExitWidePanelFullScreen",
      "uiAnchor": "att1_parameter_complex_data",
      "priority": 310
    },
    "Att1OpenInNewTabCommandPlacement": {
      "id": "Awp0OpenInNewTab",
      "uiAnchor": "att1_parameter_complex_data",
      "priority": 320
    },
    "Att1AddMeasurementEngrTablePlacement": {
      "id": "Att1AddMeasurementEngrTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 30
    },
    "Att1ValuesTableAndChartViewGroupPlacement": {
      "id": "Att1ValuesTableAndChartViewGroup",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 4
    },
    "Att1ValuesTableViewPlacement": {
      "id": "Att1ValuesTableView",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 30,
      "parentGroupId": "Att1ValuesTableAndChartViewGroup"
    },
    "Att1ChartViewPlacement": {
      "id": "Att1ChartView",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 30,
      "parentGroupId": "Att1ValuesTableAndChartViewGroup"
    },
    "Att1ValuesTableAndChartViewPlacement": {
      "id": "Att1ValuesTableAndChartView",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 30,
      "parentGroupId": "Att1ValuesTableAndChartViewGroup"
    },
    "Att1ShowLogarithmicScalePlacement": {
      "id": "Att1ShowLogarithmicScale",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 200
    },
    "Att1AddMeasurementFromExcelPlacement": {
      "id": "Att1AddMeasurementFromExcel",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 30,
      "parentGroupId": "Att1AddMeasurementEngrTable"
    },
    "Att1AddMeasurementFromGoalPlacement": {
      "id": "Att1AddMeasurementFromGoal",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 30,
      "parentGroupId": "Att1AddMeasurementEngrTable"
    },
    "Att1AddMeasurementNewPlacement": {
      "id": "Att1AddMeasurementNew",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 30,
      "parentGroupId": "Att1AddMeasurementEngrTable"
    },
    "Att1DuplicateMeasurementEngrTablePlacement": {
      "id": "Att1DuplicateMeasurementEngrTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 10
    },
    "Att1EditMeasurementTablePlacement": {
      "id": "Att1EditMeasurementTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 20
    },
    "Att1SaveEditMeasurementTablePlacement": {
      "id": "Att1SaveEditMeasurementTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 20
    },
    "Att1CancelEditMeasurementTablePlacement": {
      "id": "Att1CancelEditMeasurementTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 20
    },
    "Att1AttachMeasurementEngrTablePlacement": {
      "id": "Att1AttachMeasurementEngrTable",
      "uiAnchor": "aw_measurementsTableOptCommandBar",
      "priority": 25
    },
    "Att1AddTableCommandPlacement": {
      "id": "Att1AddTable",
      "uiAnchor": "propValuesCommandAnchor",
      "priority": 10
    },
    "Att1AddTableFromExcelCommandPlacement": {
      "id": "Att1AddTableFromExcel",
      "uiAnchor": "propValuesCommandAnchor",
      "priority": 10,
      "parentGroupId": "Att1AddTable"
    },
    "Att1AddTableNewValueCommandPlacement": {
      "id": "Att1AddTableNewValue",
      "uiAnchor": "propValuesCommandAnchor",
      "priority": 10,
      "parentGroupId": "Att1AddTable"
    },
    "Att1ExportRoundtripEngrTablePlacement": {
      "id": "Att1ExportRoundtripEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 10
    },
    "Att1ExportEngrTablePlacement": {
      "id": "Att1ExportEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 10,
      "parentGroupId": "Att1ExportRoundtripEngrTable"
    },
    "Att1ImportNewEngrTablePlacement": {
      "id": "Att1ImportNewEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 10,
      "parentGroupId": "Att1ExportRoundtripEngrTable"
    },
    "InsertPlacement": {
      "id": "Att1Insert",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 20
    },
    "InsertRowAbovePlacement": {
      "id": "Att1InsertRowAbove",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 20,
      "parentGroupId": "Att1Insert"
    },
    "InsertRowBelowPlacement": {
      "id": "Att1InsertRowBelow",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 20,
      "parentGroupId": "Att1Insert"
    },
    "InsertColumnLeftPlacement": {
      "id": "Att1InsertColumnLeft",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 20,
      "parentGroupId": "Att1Insert"
    },
    "InsertRowSeriesPlacement": {
      "id": "Att1InsertRowSeries",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 10,
      "parentGroupId": "Att1Insert"
    },
    "InsertColumnRightPlacement": {
      "id": "Att1InsertColumnRight",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 20,
      "parentGroupId": "Att1Insert"
    },
    "Att1InsertColumnSeriesPlacement": {
      "id": "Att1InsertColumnSeries",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 10,
      "parentGroupId": "Att1Insert"
    },
    "Att1CutInEngrTableCommandPlacement": {
      "id": "Att1CutInEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 30
    },
    "Att1CopyInEngrTableCommandPlacement": {
      "id": "Att1CopyInEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 40
    },
    "Att1PasteInEngrTableCommandPlacement": {
      "id": "Att1PasteInEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 50
    },
    "Att1DeleteInEngrTablePlacement": {
      "id": "Att1DeleteInEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 60
    },
    "Att1ClearContentsEngrTablePlacement": {
      "id": "Att1ClearContentsInEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 70
    },
    "Att1UndoEngrTableCommandPlacement": {
      "id": "Att1UndoEngrTable",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 80
    },
    "Att1StartEditEngrTableCommandPlacement": {
      "id": "Att1StartEditEngrTable",
      "uiAnchor": "aw_engrTableOptCommandBar",
      "priority": 200
    },
    "Att1SaveEditEngrTableCommandPlacement": {
      "id": "Att1SaveEditEngrTable",
      "uiAnchor": "aw_engrTableOptCommandBar",
      "priority": 200
    },
    "Att1CancelEditEngrTableCommandPlacement": {
      "id": "Att1CancelEditEngrTable",
      "uiAnchor": "aw_engrTableOptCommandBar",
      "priority": 200
    },
    "Att1MapGroupFromTableFromSplitTablePlacement": {
      "id": "Att1MapGroup",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 100
    },
    "addMapCommandSplitTablePlacement": {
      "id": "Att1MapAttribute",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 200,
      "parentGroupId": "Att1MapGroup"
    },
    "addUnMapCommandSplitTablePlacement": {
      "id": "Att1UnMapAttribute",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 200,
      "parentGroupId": "Att1MapGroup"
    },
    "Att1ShowRevisePlacement": {
      "id": "Att1ShowRevise",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 100
    },
    "Att1RemoveMeasurableAttrFromInContextCommandPlacement": {
      "id": "Att1RemoveMeasurableAttrFromInContext",
      "uiAnchor": "aw_rightWall",
      "priority": 320,
      "parentGroupId": "Awp0EditGroup"
    },
    "autoMapCommandSplitTablePlacement": {
      "id": "Att1AutoMapAttributes",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 210,
      "parentGroupId": "Att1MapGroup"
    },
    "ShowMeasurableAttrPlacement": {
      "id": "ShowMeasurableAttr",
      "uiAnchor": "show_object_command",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Att1OpenMeasurementCmdPlacement": {
      "id": "Awp0ShowObjectCell",
      "uiAnchor": "aw_MeasurementsTable",
      "priority": 100,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Att1DownloadFileCommandPlacement": {
      "id": "Att1DownloadFile",
      "uiAnchor": "dataset_commands",
      "priority": 200,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Att1ReplaceFileCommandPlacement": {
      "id": "Att1ReplaceFile",
      "uiAnchor": "dataset_commands",
      "priority": 200,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Att1ShowChildrenForParamGroupPlacement": {
      "id": "Att1ShowChildrenForParamGroup",
      "uiAnchor": "aw_param_project",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Att1OpenGroupOrParamterPlacement": {
      "id": "Att1OpenGroupOrParamter",
      "uiAnchor": "aw_param_project",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Att1AddParameterGroupPlacement-classic": {
      "id": "Att1AddParameterGroup",
      "priority": 201,
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0NewGroup"
    },
    "Att1DeleteGroupGroupPlacement": {
      "id": "Att1DeleteGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 322,
      "parentGroupId": "Awp0EditGroup"
    },
    "Att1ImportNewParameterPlacement": {
      "id": "Att1ImportNew",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 4,
      "parentGroupId": "Arm0ExportImport"
    },
    "Att1ImportNewPWASplitTableParameterPlacement": {
      "id": "Att1ImportNew",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 4,
      "parentGroupId": "Arm0ExportImport"
    },
    "Att1SetFreezePointPlacement": {
      "id": "Att1SetFreezePoint",
      "uiAnchor": "aw_rightWall",
      "priority": 380,
      "parentGroupId": "Awp0NewGroup"
    },
    "Att1ShowParameterVariantsToggleCmdPlacement": {
      "id": "Att1ShowParameterVariantsToggleCmd",
      "uiAnchor": "aw_variantTreeTableCommandBar",
      "priority": 18
    },
    "Att1ShowParameterVariantsToggleCmdVCA2Placement": {
      "id": "Att1ShowParameterVariantsToggleCmd",
      "uiAnchor": "aw_Vca_CommandBar",
      "priority": 18
    },
    "Att1EnableMultiSelectObjectSetPlacement": {
      "id": "Att1EnableMultiSelectObjectSet",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 6
    },
    "Att1DisableMultiSelectObjectSetPlacement": {
      "id": "Att1DisableMultiSelectObjectSet",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 6
    },
    "Att1SelectAllObjectSetPlacement": {
      "id": "Att1SelectAllObjectSet",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 7
    },
    "Att1DeselectAllObjectSetPlacement": {
      "id": "Att1DeselectAllObjectSet",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 7
    },
    "Att1StartEditParametersTablePlacement": {
      "id": "Att1StartEditParametersTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 107
    },
    "Att1SaveEditParametersTablePlacement": {
      "id": "Att1SaveEditParametersTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 105
    },
    "Att1CancelEditParametersTablePlacement": {
      "id": "Att1CancelEditParametersTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 106
    },
    "Att1RemoveGroupPlacement": {
      "id": "Att1RemoveGroup",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 90
    },
    "Att1CutParameterPlacement": {
      "id": "Att1CutParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "parentGroupId": "Att1RemoveGroup"
    },
    "Att1DeleteOccParameterPlacement": {
      "id": "Att1DeleteOccParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "parentGroupId": "Att1RemoveGroup"
    },
    "Att1DeleteParameterPlacement": {
      "id": "Att1DeleteParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 85
    },
    "Att1DeleteParameterFromPWAPlacement": {
      "id": "Att1DeleteParameterFromPWA",
      "uiAnchor": "aw_rightWall",
      "priority": 323,
      "parentGroupId": "Awp0EditGroup"
    },
    "Att1ModelObjListDisplayTogglesDisplay": {
      "id": "Att1ModelObjListDisplayToggles",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 4,
      "showGroupSelected": false
    },
    "Att1HideChildLinesViewDisplay": {
      "id": "Att1HideChildLinesView",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 5,
      "parentGroupId": "Att1ModelObjListDisplayToggles"
    },
    "Att1ShowChildLinesViewDisplay": {
      "id": "Att1ShowChildLinesView",
      "uiAnchor": "aw_showParamViewCommandBar",
      "priority": 5,
      "parentGroupId": "Att1ModelObjListDisplayToggles"
    },
    "Att1SetUsageParametersTablePlacement": {
      "id": "Att1SetParameterDirection",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 70
    },
    "Att1SetInputParametersTablePlacement": {
      "id": "Att1SetInputDirection",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 70,
      "parentGroupId": "Att1SetParameterDirection"
    },
    "Att1SetOutputParametersTablePlacement": {
      "id": "Att1SetOutputDirection",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 70,
      "parentGroupId": "Att1SetParameterDirection"
    },
    "Att1SetUnusedParametersTablePlacement": {
      "id": "Att1SetUnusedDirection",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 90,
      "parentGroupId": "Att1SetParameterDirection"
    },
    "Att1ExportImportPlacement": {
      "id": "Att1ExportImportParamTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 60
    },
    "Att1ShowChildrenParametersPlacement": {
      "id": "Att1ShowChildrenParameters",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 50
    },
    "Att1PlotChartPlacement": {
      "id": "Att1PlotChart",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 40
    },
    "Att1ManageMeasurementsPlacement": {
      "id": "Att1ManageMeasurements",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 130,
      "parentGroupId": "Att1ManageValueAndMeasurementGroup"
    },
    "Att1ExportPlacement": {
      "id": "Att1ExportParamTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "parentGroupId": "Att1ExportImportParamTable"
    },
    "Att1ImportNewPlacement": {
      "id": "Att1ImportNewParamTable",
      "uiAnchor": "aw_showParamOptCommandBar",
      "parentGroupId": "Att1ExportImportParamTable"
    },
    "Att1AddInLineCommandPlacement": {
      "id": "Att1AddInLine",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 109
    },
    "Att1AddParameterCommandPlacement": {
      "id": "Att1AddParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 110,
      "parentGroupId": "Att1AddGroup"
    },
    "Att1AddTableValueFromExcelCommandPlacement": {
      "id": "Att1AddTableValueFromExcel",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 110,
      "parentGroupId": "Att1ManageValueAndMeasurementGroup"
    },
    "Att1AddTableValueCommandPlacement": {
      "id": "Att1AddTableValue",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 120,
      "parentGroupId": "Att1ManageValueAndMeasurementGroup"
    },
    "Att1AddParameterValueCommandPlacement": {
      "id": "Att1AddParameterValue",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 110,
      "parentGroupId": "Att1AddGroup"
    },
    "Att1AddGroupPlacement": {
      "id": "Att1AddGroup",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 110
    },
    "Att1ManageValueAndMeasurementGroupPlacement": {
      "id": "Att1ManageValueAndMeasurementGroup",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 108
    },
    "Att1PasteGroupPlacement": {
      "id": "Att1PasteGroup",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 80
    },
    "Att1PasteParameterPlacement": {
      "id": "Att1PasteParameterAsReference",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 80,
      "parentGroupId": "Att1PasteGroup"
    },
    "Att1CopyAndPasteParameterPlacement": {
      "id": "Att1CopyAndPasteParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 80,
      "parentGroupId": "Att1PasteGroup"
    },
    "Att1PasteParameterCtxPlacement": {
      "id": "Att1PasteParameterAsReference",
      "uiAnchor": "aw_contextMenu2",
      "priority": 100
    },
    "Att1CopyAndPasteParameterCtxPlacement": {
      "id": "Att1CopyAndPasteParameterPWA",
      "uiAnchor": "aw_contextMenu2",
      "priority": 100
    },
    "Att1UpdateUomEngrTablePlacement": {
      "id": "Att1UpdateUomEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1InsertColumnLeftCtxPlacement": {
      "id": "Att1InsertColumnLeftCtx",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1InsertColumnRightCtxPlacement": {
      "id": "Att1InsertColumnRightCtx",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1InsertRowAboveCtxPlacement": {
      "id": "Att1InsertRowAboveCtx",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1ColumnCopyFillCtxPlacement": {
      "id": "Att1ColumnCopyFillCtx",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 90
    },
    "Att1InsertRowBelowCtxPlacement": {
      "id": "Att1InsertRowBelowCtx",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1DeleteRowCtxPlacement": {
      "id": "Att1DeleteRowInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1DeleteColumnCtxPlacement": {
      "id": "Att1DeleteColumnInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1ClearContentsCtxPlacement": {
      "id": "Att1ClearContentsInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1CutEngrTableCtxPlacement": {
      "id": "Att1CutInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1CopyEngrTableCtxPlacement": {
      "id": "Att1CopyInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1PasteEngrTableCtxPlacement": {
      "id": "Att1PasteInEngrTable",
      "uiAnchor": "att1EngrContextMenu",
      "priority": 100
    },
    "Att1ReviseAndReplaceParameterPlacement": {
      "id": "Att1ReviseAndReplaceParameter",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 95
    },
    "Att1ReplaceParameterRevisionPlacement": {
      "id": "Att1ReplaceParameterRevision",
      "uiAnchor": "aw_showParamOptCommandBar",
      "priority": 100
    },
    "Att1ShowGoalPlacement": {
      "id": "Att1ShowGoal",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 5
    },
    "Att1ShowRangePlacement": {
      "id": "Att1ShowRange",
      "uiAnchor": "aw_engrTableCommandBar",
      "priority": 5
    }
  },
  "actions": {
    "Att1SaveEditInlineParameters": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1InlineAuthoring.trySaveEdits",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}"
            }
          }
        ]
      }
    },
    "Att1CancelEditInlineParameters": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1InlineAuthoring.discardUnsavedAndResetInlineDataCache"
          }
        ]
      }
    },
    "removeSelectedInlineParamAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1InlineAuthoring.removeSelectedInlineParam",
            "eventData": {
              "rows": "{{commandContext.dataProvider.selectedObjects}}"
            }
          }
        ]
      }
    },
    "showUpdateUomPopup": {
      "actionType": "JSFunction",
      "method": "showUpdateUomPopup",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "undoChanges": {
      "actionType": "JSFunction",
      "method": "undoChanges",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "startEditMeasuremetsTable": {
      "actionType": "JSFunction",
      "method": "startMeasureValueEdit",
      "deps": "js/Att1ComplexDataService",
      "inputData": {
        "subPanelContext": "{{commandContext}}"
      }
    },
    "clearContents": {
      "actionType": "JSFunction",
      "method": "clearContents",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "plotChartForParameters": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uniformParamTable.openParameterWidePanel",
            "eventData": {
              "name": "plotChartCommandClicked",
              "value": true
            }
          }
        ]
      }
    },
    "hideChartView": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1MeasurementsView.hideChartView"
          }
        ]
      }
    },
    "showValuesTableAndChartView": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1MeasurementsView.showValuesTableAndChartView"
          }
        ]
      }
    },
    "hideValuesTableView": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1MeasurementsView.hideValuesTableView"
          }
        ]
      }
    },
    "showLogarithmicScale": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1MeasurementsView.showLogarithmicScale"
          }
        ]
      }
    },
    "openWidePanelToManageMeasurements": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uniformParamTable.openParameterWidePanel",
            "eventData": {
              "name": "manageMeasurementsCommandClicked",
              "value": true
            }
          }
        ]
      }
    },
    "openWidePanelToGetDimensions": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uniformParamTable.openParameterWidePanel",
            "eventData": {
              "name": "addNewTableValueCommandClicked",
              "value": true
            }
          }
        ]
      }
    },
    "openFileSelectionDialog": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uniformParamTable.openParameterWidePanel",
            "eventData": {
              "name": "isComplexDataImportInProgress",
              "value": true
            }
          }
        ]
      }
    },
    "applyFullScreenToWidePanel": {
      "actionType": "JSFunction",
      "method": "applyFullScreenToWidePanel",
      "deps": "js/Att1ParameterWidePanelService",
      "inputData": {
        "isFullScreen": "{{ctx.isParametersWidePanelInFullScreen}}"
      }
    },
    "deleteCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmDeleteObjectEvent",
            "condition": "(commandContext.selectionData.selected.length === 1)"
          },
          {
            "name": "confirmMultipleDeleteObjectsEvent",
            "condition": "(commandContext.selectionData.selected.length > 1)"
          }
        ]
      }
    },
    "initiateDeleteCommandAction": {
      "actionType": "JSFunctionAsync",
      "method": "cutOrDeleteSecondaryFromElement",
      "inputData": {
        "relationType": "Att0HasParamDictionary",
        "action": "delete"
      },
      "deps": "js/Att1ParameterMgmtUtilService",
      "outputData": {
        "returnMsg": "",
        "deleteObjectsPartialErrors": "partialErrors",
        "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
      },
      "events": {
        "failure": [
          {
            "name": "confirmSingleCutOrCancelCmdEvent",
            "condition": "data.objectsFailedToDelete.totalSelected === 1"
          },
          {
            "name": "confirmMultipleCutOrCancelCmdEvent",
            "condition": "data.objectsFailedToDelete.totalSelected > 1"
          }
        ]
      }
    },
    "cutSecondaryFromElement": {
      "actionType": "JSFunction",
      "method": "cutOrDeleteSecondaryFromElement",
      "inputData": {
        "relationType": "Att0HasParamDictionary",
        "action": "cut"
      },
      "deps": "js/Att1ParameterMgmtUtilService",
      "outputData": {
        "parameterDatasetInputData": ""
      },
      "events": {
        "success": [
          {
            "name": "removeChildrenFrameworkSOACall"
          }
        ]
      }
    },
    "closeParameterDataWidePanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1ParameterWidePanel.ClosePopup"
          }
        ]
      }
    },
    "paramPostReviseSoaSuccess": {
      "actionType": "JSFunction",
      "method": "reloadRevisedObjects",
      "inputData": {
        "eventData": "{{data.eventData}}"
      },
      "deps": "js/Att1ShowParametersTableService"
    },
    "switchToShowChildLinesView": {
      "actionType": "JSFunction",
      "method": "changeViewMode",
      "deps": "js/Att1ViewModeService",
      "inputData": {
        "parametersTableViewMode": "{{commandContext.parametersTable.parametersTableViewMode}}",
        "viewMode": "showChildLines"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "forceReloadTable": true,
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      }
    },
    "switchToHideChildLinesView": {
      "actionType": "JSFunction",
      "method": "changeViewMode",
      "deps": "js/Att1ViewModeService",
      "inputData": {
        "parametersTableViewMode": "{{commandContext.parametersTable.parametersTableViewMode}}",
        "viewMode": "hideChildLines"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "forceReloadTable": true,
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      }
    },
    "AddMeasurementNew": {
      "actionType": "JSFunction",
      "method": "addMeasureValue",
      "deps": "js/Att1MeasurementService",
      "inputData": {
        "action": "createNew"
      }
    },
    "AddMeasurementFromGoal": {
      "actionType": "JSFunction",
      "method": "addMeasureValue",
      "deps": "js/Att1MeasurementService",
      "inputData": {
        "action": "copyFromGoal"
      }
    },
    "startEditInEngrTable": {
      "actionType": "JSFunction",
      "method": "startEditInEngrTable",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "insertRowAbove": {
      "actionType": "JSFunction",
      "method": "insertRow",
      "inputData": {
        "above": true,
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "handleColumnCopyFill": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1ArrayParameter.handleColumnCopyFill"
          }
        ]
      }
    },
    "insertRowBelow": {
      "actionType": "JSFunction",
      "method": "insertRow",
      "inputData": {
        "above": false,
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "insertColumnRight": {
      "actionType": "JSFunction",
      "method": "insertColumn",
      "inputData": {
        "right": true,
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "insertColumnLeft": {
      "actionType": "JSFunction",
      "method": "insertColumn",
      "inputData": {
        "right": false,
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "insertRowSeries": {
      "actionType": "JSFunction",
      "method": "insertRowHeaders",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "insertColumnSeries": {
      "actionType": "JSFunction",
      "method": "insertColumnSeries",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "deleteInEngrTable": {
      "actionType": "JSFunction",
      "method": "deleteRowOrColumn",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "saveEditEngrTable": {
      "actionType": "JSFunction",
      "method": "saveEditEngrTable",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "showImportPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Att1AddTableFromExcelPanel",
        "location": "aw_toolsAndInfo",
        "context": {
          "engrTable": "{{commandContext.engrTable}}"
        }
      }
    },
    "copyInEngrTable": {
      "actionType": "JSFunction",
      "method": "copyCells",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "cutInEngrTable": {
      "actionType": "JSFunction",
      "method": "cutCells",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "pasteInEngrTable": {
      "actionType": "JSFunction",
      "method": "pasteCells",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1EngrTableService"
    },
    "showInsertPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Att1AddTablePanel",
          "parent": ".aw-layout-workarea",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "push": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "reloadTable": {
      "actionType": "JSFunction",
      "method": "cancelEdits",
      "deps": "js/Att1ComplexDataService",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}",
        "tableName": "{{commandContext.engrTable.tableModel.tableName}}"
      }
    },
    "deleteMappingAction": {
      "actionType": "JSFunction",
      "method": "getAlignmentObjects",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "deleteMappingInput": ""
      },
      "deps": "js/Att1AttrMappingTableMapService",
      "actionMessages": {
        "success": [
          {
            "condition": "data.deleteMappingInput.inputObjects && data.deleteMappingInput.inputObjects.length === 1",
            "message": "breakMappingConfirmationMessage"
          },
          {
            "condition": "data.deleteMappingInput.inputObjects && data.deleteMappingInput.inputObjects.length > 1",
            "message": "breakMappingConfirmationMessageMultiple"
          }
        ]
      }
    },
    "Att1SetParametersDirectionInput": {
      "actionType": "JSFunction",
      "method": "createInputForSetParametersDirection",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "direction": "input",
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "outputData": {
        "SetParamsDirectionInput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1SetParametersDirectionSOACall"
          }
        ]
      }
    },
    "Att1ShowChildrenParameters": {
      "actionType": "JSFunction",
      "method": "showChildrenParametersSelected",
      "inputData": {
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "deps": "js/Att1ShowParametersTableService"
    },
    "Att1SetParametersDirectionOutput": {
      "actionType": "JSFunction",
      "method": "createInputForSetParametersDirection",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "direction": "output",
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "outputData": {
        "SetParamsDirectionInput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1SetParametersDirectionSOACall"
          }
        ]
      }
    },
    "Att1SetParametersDirectionUnused": {
      "actionType": "JSFunction",
      "method": "createInputForSetParametersDirection",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "direction": "unused",
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "outputData": {
        "SetParamsDirectionInput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1SetParametersDirectionSOACall"
          }
        ]
      }
    },
    "Att1SetParametersDirectionSOACall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2020-12-AttributeTargetManagement",
      "method": "setParametersDirection",
      "inputData": {
        "inputs": "{{data.SetParamsDirectionInput}}"
      },
      "outputData": {
        "SetParamsDirectionResp": ""
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            },
            "condition": "commandContext.reusable === true || commandContext.reusable === 'true'"
          }
        ],
        "failure": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "Att1PreShowCreateTraceLinkPopup": {
      "actionType": "JSFunction",
      "method": "att1RegisterCreateTraceLink",
      "deps": "js/Att1ParamCommandDelegator",
      "events": {
        "success": [
          {
            "name": "att1ParameterCommandDelegate.att1ShowTreaceLink"
          }
        ]
      }
    },
    "showMapAttribPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1MapAttribute",
        "location": "aw_toolsAndInfo",
        "commandLocation": "aw_attributeMappingCommandbar",
        "context": {
          "parametersTable": "{{commandContext.parametersTable}}",
          "reusableParamTable": "{{commandContext.reusable}}",
          "selectionMode": "multiple"
        },
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "deleteMapping": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": "{{data.deleteMappingInput.inputObjects}}"
      },
      "events": {
        "success": [
          {
            "name": "attributeMappingRemoved"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      }
    },
    "copyParamProxy": {
      "actionType": "JSFunction",
      "method": "att1CopyParamUnderlyingObjects",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "objectToCopy": "{{ctx.mselected}}"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "copySingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "copyMultipleSuccessful"
          }
        ]
      }
    },
    "showParamProxy": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.selectionData.selected[0].props.att1SourceAttribute.dbValue}}"
      }
    },
    "showParamProxyForRevise": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "edit": "{{commandContext.commandArgs.edit}}"
      }
    },
    "openParamInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.selectionData.selected[0].props.att1SourceAttribute.dbValue}}"
      },
      "navigateIn": "newTab"
    },
    "openParamInNewTabWidePanel": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.popupOptions.subPanelContext.parametersTable.getValue().selectedObjects[0].props.att1SourceAttribute.dbValue}}"
      },
      "navigateIn": "newTab"
    },
    "openParamProxyInNewWindow": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.selectionData.selected[0].props.att1SourceAttribute.dbValue}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "openParamProxyInRAC": {
      "actionType": "Navigate",
      "navigateTo": "launcher/openinrac",
      "navigationParams": {
        "-s": "226TCSession",
        "-o": "{{commandContext.selectionData.selected[0].props.att1SourceAttribute.dbValue}}",
        "-attach": "true"
      },
      "navigateIn": "newTab"
    },
    "saveAsParamProxy": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{commandContext.selectionData.selected[0]}}",
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo",
          "openNewRevision": false
        }
      },
      "events": {
        "success": [
          {
            "name": "Att1ReviseParameter.start"
          }
        ]
      }
    },
    "reviseParamProxy": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{commandContext.selectionData.selected[0]}}",
          "commandId": "Awp0ShowRevision",
          "location": "aw_toolsAndInfo",
          "openNewRevision": false
        }
      },
      "events": {
        "success": [
          {
            "name": "Att1ReviseParameter.start"
          }
        ]
      }
    },
    "saveAsParam": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{commandContext.selectionData.selected[0]}}",
          "openNewRevision": false,
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      },
      "events": {
        "success": [
          {
            "name": "Att1ReviseParameter.start"
          }
        ]
      }
    },
    "reviseParam": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{commandContext.selectionData.selected[0]}}",
          "commandId": "Awp0ShowRevision",
          "location": "aw_toolsAndInfo",
          "openNewRevision": false
        }
      },
      "events": {
        "success": [
          {
            "name": "Att1ReviseParameter.start"
          }
        ]
      }
    },
    "Att1GetReviseInputForMultipleParams": {
      "actionType": "JSFunctionAsync",
      "method": "getReviseInputsForParameters",
      "deps": "js/Att1ReviseReplaceParameterService",
      "inputData": {
        "selectedObj": "{{commandContext.parametersTable.selectedUnderlyingObjects}}"
      },
      "outputData": {
        "reviseInput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1ReviseParams.callReviseSOACall"
          }
        ]
      }
    },
    "reviseMultipleParams": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2013-05-DataManagement",
      "method": "reviseObjects",
      "inputData": {
        "reviseIn": "{{data.reviseInput}}"
      },
      "outputData": {
        "revisedObjects": "reviseTrees",
        "partialErorrs": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "forceReloadTable": true,
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          },
          {
            "name": "param.reviseSoaSuccess",
            "eventData": {
              "selectedObjects": "{{commandContext.parametersTable.selectedElementsFromProxy}}",
              "revisedObjects": "{{data.revisedObjects}}",
              "expandCommonParent": true
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "reviseFailureMsg",
            "condition": "errorCode.code===48071 || errorCode.code===51003 || errorCode.code===48020"
          }
        ]
      }
    },
    "newWorkflowParamProxy": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{commandContext.parameterState.mselected}}"
      },
      "outputData": {
        "submitWorkflowInput": ""
      },
      "events": {
        "success": [
          {
            "name": "submitWorkflow.adaptedInputs"
          }
        ]
      },
      "deps": "js/Att1ShowParamProxyTableService"
    },
    "cutMeasurementDataset": {
      "actionType": "JSFunction",
      "method": "createInputForValueFileCut",
      "deps": "js/RemoveMeasurableAttr",
      "outputData": {
        "parameterDatasetInputData": ""
      },
      "events": {
        "success": [
          {
            "name": "removeChildrenFrameworkSOACall"
          }
        ]
      }
    },
    "getInputsForRemove": {
      "actionType": "JSFunction",
      "method": "getSelectedParameterNames",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "data": "{{data}}",
        "action": "remove"
      },
      "outputData": {
        "selectedParameterNames": "selectedParameterNames",
        "warningConfirmationMessage": "warningConfirmationMessage"
      },
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameter.publishRemoveParameterConfirmPopUp"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "cutParameters": {
      "actionType": "JSFunction",
      "method": "createInputForRemoveParameters",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "isRemoveOverride": false,
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "parameterInputData": ""
      },
      "events": {
        "success": [
          {
            "name": "cutParameterFrameworkSOACall"
          }
        ]
      }
    },
    "deleteParameters": {
      "actionType": "JSFunction",
      "method": "createInputForRemoveParameters",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "isRemoveOverride": false,
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "inputParametersToDelete": ""
      },
      "events": {
        "success": [
          {
            "name": "executeDeleteParameterFor12x"
          }
        ]
      }
    },
    "removeOverrideParameters": {
      "actionType": "JSFunction",
      "method": "createInputForRemoveParameters",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "isRemoveOverride": true,
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "inputParametersToDelete": "",
        "isRemoveOverrideParam": true
      },
      "events": {
        "success": [
          {
            "name": "executeDeleteParameterFor12x"
          }
        ]
      }
    },
    "cancelCheckoutProxyObjects": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-Reservation",
      "method": "cancelCheckout",
      "inputData": {
        "objects": "{{commandContext.selectionData.selected}}"
      },
      "outputData": {
        "cancelCheckOutPartialErrors": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{commandContext.selectionData.selected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "cancelCheckoutSuccess"
          }
        ],
        "failure": [
          {
            "condition": "(commandContext.selectionData.selected.length === 1)",
            "message": "cancelCheckoutFailureSingle"
          },
          {
            "condition": "(commandContext.selectionData.selected.length > 1)",
            "message": "cancelCheckoutFailureMultiple"
          }
        ]
      }
    },
    "checkinProxyObjects": {
      "actionType": "JSFunction",
      "method": "updateSelectionToOwningObjects",
      "inputData": {
        "sourceObjects": "{{commandContext.parameterState.mselected}}"
      },
      "events": {
        "success": [
          {
            "name": "att1CheckinObjects"
          }
        ]
      },
      "deps": "js/Att1ShowParamProxyTableService"
    },
    "att1CheckinObjects": {
      "actionType": "JSFunction",
      "method": "editInProgress",
      "outputData": {
        "editInProgress": "editInProgress"
      },
      "events": {
        "success": [
          {
            "condition": "!data.editInProgress",
            "name": "retrieveCheckinInputs"
          },
          {
            "condition": "data.editInProgress",
            "name": "saveEditsAndCheckin"
          },
          {
            "name": "unregisterContexts"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "checkoutProxyObjects": {
      "actionType": "JSFunction",
      "method": "updateSelectionToOwningObjects",
      "inputData": {
        "sourceObjects": "{{commandContext.selectionData.selected}}"
      },
      "events": {
        "success": [
          {
            "name": "att1Checkout.isDirty"
          }
        ]
      },
      "deps": "js/Att1ShowParamProxyTableService"
    },
    "att1CheckoutIsDirty": {
      "actionType": "JSFunctionAsync",
      "method": "isDirty",
      "outputData": {
        "dirty": "isDirty"
      },
      "events": {
        "success": [
          {
            "condition": "!data.dirty",
            "name": "checkEditInProgress"
          },
          {
            "condition": "data.dirty",
            "name": "leaveConfirmation.success"
          },
          {
            "name": "unregisterContexts"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "unregisterContexts": {
      "actionType": "JSFunction",
      "method": "unregisterContexts",
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "isValidationContract": {
      "actionType": "JSFunction",
      "method": "isValidationContract",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "preferences": "{{ctx.preferences}}"
      },
      "events": {
        "success": [
          {
            "name": "getObjectNames"
          }
        ]
      }
    },
    "getObjectNames": {
      "actionType": "JSFunction",
      "method": "getObjectNames",
      "deps": "js/RemoveMeasurableAttr",
      "outputData": {
        "getObjectNamesReturn": ""
      },
      "events": {
        "success": [
          {
            "name": "deleteConfirmationEvent"
          }
        ]
      }
    },
    "deleteConfirmationEvent": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "condition": "data.getObjectNamesReturn.isSelectedAttrInContext === true",
            "name": "inContextConfirmationOnDelete"
          },
          {
            "condition": "data.getObjectNamesReturn.isSelectedAttrInContext === false",
            "name": "deleteObjectConfirmation"
          }
        ]
      }
    },
    "startDelete": {
      "actionType": "JSFunction",
      "method": "startDelete",
      "deps": "js/RemoveMeasurableAttr",
      "outputData": {
        "startDeleteReturn": ""
      },
      "events": {
        "success": [
          {
            "name": "deleteMeasurableAttributesSoaCall"
          }
        ]
      }
    },
    "deleteMeasurableAttributesSoaCall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmt-2015-10-AttributeTargetManagement",
      "method": "deleteMeasurableAttributes",
      "inputData": {
        "inputs": "{{data.startDeleteReturn.inputs}}"
      },
      "outputData": {
        "deleteMeasurableAttributesSoaResponse": ""
      },
      "events": {
        "success": [
          {
            "condition": "data.deleteMeasurableAttributesSoaResponse.partialErrors === undefined",
            "name": "deleteDone"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      }
    },
    "removeChildrenFrameworkSOACall": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2014-10-DataManagement",
      "method": "removeChildren",
      "inputData": {
        "inputData": "{{data.parameterDatasetInputData}}"
      },
      "outputData": {
        "removeChildrenFrameworkSoaResponse": ""
      },
      "events": {
        "success": [
          {
            "condition": "data.removeChildrenFrameworkSoaResponse.partialErrors === undefined && ( ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 || ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1)",
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.xrtSummaryContextObject}}"
              ]
            }
          },
          {
            "name": "cutToAwClipboard"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(commandContext.selectionData.selected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(commandContext.selectionData.selected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ],
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      }
    },
    "cutParameterFrameworkSOACall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2019-12-AttributeTargetManagement",
      "method": "removeParameters",
      "inputData": {
        "inputs": "{{data.parameterInputData}}",
        "toDelete": false
      },
      "outputData": {
        "cutParameterFrameworkSoaResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "cutParamGroupToAwClipboard",
            "condition": "!(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "cutParamProxyToAwClipboard",
            "condition": "(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "cutParamCompleted",
            "condition": "data.cutParameterFrameworkSoaResponse.partialErrors === undefined"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      }
    },
    "cutParamCompleted": {
      "actionType": "JSFunction",
      "method": "displayCutParametersMessage",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "data": "{{data}}"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.removeParamsFromTable",
            "eventData": {
              "response": "{{data.cutParameterFrameworkSoaResponse}}",
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.parametersTable.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      }
    },
    "deleteDone": {
      "actionType": "JSFunction",
      "method": "deleteDone",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "response": "{{data.deleteMeasurableAttributesSoaResponse}}",
        "data": "{{data}}"
      },
      "outputData": {
        "parentObj": ""
      },
      "events": {
        "success": [
          {
            "name": "refreshOrExpandGroupInPWA",
            "condition": "commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1"
          },
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{data.parentObj}}"
              ]
            },
            "condition": "ctx.Att1ShowMappedAttribute === undefined || commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1"
          },
          {
            "name": "Att1ShowMappedAttribute.refreshTable",
            "condition": "ctx.Att1ShowMappedAttribute !== undefined"
          },
          {
            "name": "gwt.SplitPanelDeSelectEvent",
            "condition": "ctx.Att1ShowMappedAttribute !== undefined"
          }
        ]
      }
    },
    "openPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1AddParameterPanel",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        },
        "context": {
          "selection": "{{commandContext.selection}}",
          "parametersTable": "{{commandContext.parametersTable}}",
          "reusableParamTable": "{{commandContext.reusable}}",
          "dataProvider": "{{commandContext.dataProvider}}"
        }
      }
    },
    "openAssociatePanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1AssociateParamDictonaries",
        "location": "aw_toolsAndInfo"
      },
      "deps": "js/commandPanel.service"
    },
    "getMeasurableAttributesInClipboard": {
      "actionType": "JSFunction",
      "method": "getMeasurableAttributesInClipboard",
      "deps": "js/pasteAttribute",
      "inputData": {
        "clipboardContents": "{{ctx.awClipBoardProvider}}"
      },
      "outputData": {
        "measurableAttributes": ""
      },
      "events": {
        "success": [
          {
            "name": "canPasteAttributes",
            "condition": "data.measurableAttributes.length > 0"
          },
          {
            "name": "pasteGroups",
            "condition": "data.measurableAttributes.length === 0"
          }
        ]
      }
    },
    "callAttachParamSOAForAddCopy": {
      "actionType": "JSFunction",
      "method": "att1PasteParameterAsCopy",
      "outputData": {
        "pasteAsCopy": ""
      },
      "deps": "js/pasteAttribute",
      "events": {
        "success": [
          {
            "name": "att1PasteParameterAsCopy"
          }
        ]
      }
    },
    "getMeasurableAttributesInClipboardForAwb0Element": {
      "actionType": "JSFunction",
      "method": "getMeasurableAttributesInClipboard",
      "deps": "js/pasteAttribute",
      "inputData": {
        "clipboardContents": "{{ctx.awClipBoardProvider}}"
      },
      "outputData": {
        "measurableAttributes": ""
      },
      "events": {
        "success": [
          {
            "name": "canPasteAttributesForAwb0Element",
            "condition": "data.measurableAttributes.length > 0"
          }
        ]
      }
    },
    "clearGroupsSelection": {
      "actionType": "JSFunction",
      "method": "clearGroupsSelection",
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "canPasteAttributesForAwb0Element": {
      "actionType": "JSFunction",
      "method": "canPasteAttributes",
      "deps": "js/pasteAttribute",
      "inputData": {
        "selection": "{{commandContext.parametersTable.parentObjects[0]}}",
        "allowedTypes": "{{ctx.preferences.PLE_MeasurableAttrParentObjectTypes}}"
      },
      "outputData": {
        "isValid": ""
      },
      "events": {
        "success": [
          {
            "name": "getAttachMeasurableAttributesSoaInputForAwb0Element",
            "condition": "data.isValid === true"
          },
          {
            "name": "showInvalidParentObjectErrorMsg",
            "condition": "data.isValid === false"
          }
        ]
      }
    },
    "canPasteAttributes": {
      "actionType": "JSFunction",
      "method": "canPasteAttributes",
      "deps": "js/pasteAttribute",
      "inputData": {
        "selection": "{{function:getValidParent}}",
        "allowedTypes": "{{ctx.preferences.PLE_MeasurableAttrParentObjectTypes}}"
      },
      "outputData": {
        "isValid": ""
      },
      "events": {
        "success": [
          {
            "name": "getAttachMeasurableAttributesSoaInput",
            "condition": "data.isValid === true"
          },
          {
            "name": "showInvalidParentObjectErrorMsg",
            "condition": "data.isValid === false"
          }
        ]
      }
    },
    "showInvalidParentObjectErrorMsg": {
      "actionType": "JSFunction",
      "method": "showInvalidParentObjectErrorMsg",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{ctx.selected}}",
        "message": "{{data.i18n}}"
      }
    },
    "getAttachMeasurableAttributesSoaInput": {
      "actionType": "JSFunction",
      "method": "getAttachMeasurableAttributesSoaInput",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{function:getValidParent}}",
        "attributes": "{{data.measurableAttributes}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaInput": "SoaInput",
        "defaultUsage": "defaultUsage",
        "paramNames": "paramNames",
        "isSingleParam": "isSingleParam"
      },
      "events": {
        "success": [
          {
            "name": "attachMeasurableAttributesSoaCall",
            "condition": "!(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "attachParametersSoaCall",
            "condition": "(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          }
        ]
      }
    },
    "getAttachMeasurableAttributesSoaInputForAwb0Element": {
      "actionType": "JSFunction",
      "method": "getAttachMeasurableAttributesSoaInput",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{commandContext.parametersTable.parentObjects[0]}}",
        "attributes": "{{data.measurableAttributes}}",
        "data": "{{data}}",
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaInput": "SoaInput",
        "defaultUsage": "defaultUsage",
        "paramNames": "paramNames",
        "isSingleParam": "isSingleParam"
      },
      "events": {
        "success": [
          {
            "condition": "data.attachMeasurableAttributesSoaInput.length !== undefined && !(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)",
            "name": "attachMeasurableAttributesSoaCall"
          },
          {
            "name": "attachParametersSoaCall",
            "condition": "data.attachMeasurableAttributesSoaInput.length !== undefined && (ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "condition": "data.attachMeasurableAttributesSoaInput.length === undefined ",
            "name": "displayIgnoredAttributeMsg"
          }
        ]
      }
    },
    "attachParametersSoaCall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmt-2020-12-AttributeTargetManagement",
      "method": "attachParameters",
      "inputData": {
        "inputs": "{{data.attachMeasurableAttributesSoaInput}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1PasteParameter.refreshRespectiveParameterTableAfterPaste"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            }
          },
          {
            "name": "singleParamSetToDefaultUsage",
            "condition": "data.isSingleParam === true"
          },
          {
            "name": "multipleParamSetToDefaultUsage",
            "condition": "data.isSingleParam === false"
          }
        ],
        "failure": [
          {
            "name": "Att1PasteParameter.refreshRespectiveParameterTableAfterPaste"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            },
            "condition": "data.attachMeasurableAttributesSoaOutput.outputs[0].attachedParams.length > 0"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      }
    },
    "attachMeasurableAttributesSoaCall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2017-06-AttributeTargetManagement",
      "method": "attachMeasurableAttributes",
      "inputData": {
        "inputs": "{{data.attachMeasurableAttributesSoaInput}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1PasteParameter.refreshRespectiveParameterTableAfterPaste"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "Att1PasteParameter.refreshRespectiveParameterTableAfterPaste"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      }
    },
    "refreshOrExpandGroupInPWA": {
      "actionType": "JSFunction",
      "method": "refreshOrExpandGroupInPWA",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{commandContext.parameterState.mselected[0]}}"
      }
    },
    "refreshRespectiveParameterTableAfterPaste": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "attachMeasurableAttributesSoaOutput": "{{data.attachMeasurableAttributesSoaOutput}}",
        "source": "attachParameter",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "refreshParameterTableAfterSetUsage": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "SetParamsDirectionResp": "{{data.SetParamsDirectionResp}}",
        "source": "",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "displayIgnoredAttributeMsg": {
      "actionType": "JSFunction",
      "method": "displayIgnoredAttributeMsg",
      "deps": "js/pasteAttribute",
      "inputData": {
        "ignoredAttributes": "{{data.attachMeasurableAttributesSoaOutput.outputs[0].ignoredAttrList}}",
        "totalAttributes": "{{data.measurableAttributes}}",
        "messages": "{{data.i18n}}"
      }
    },
    "confirmAutoMapAttributes": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "autoMappingConfirmationMessage"
          }
        ]
      }
    },
    "automapSelectedAttributes": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2017-12-AttributeTargetManagement",
      "method": "mapMeasurableAttributes2",
      "inputData": {
        "inputs": "{{function:getAutomapInputs}}",
        "pref": "{{function:getAutomapPrefs}}"
      },
      "outputData": {
        "refreshTable": "{{function:evaluateAutomapResults}}"
      },
      "events": {
        "success": [
          {
            "name": "gridDataProvider.resetState"
          },
          {
            "condition": "data.refreshTable",
            "name": "Att1ShowMappedAttribute.refreshTable"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "deps": "js/Att1AttrMappingTableMapService"
    },
    "getMeasurableAttr": {
      "actionType": "JSFunction",
      "method": "getAttributeObject",
      "inputData": {
        "obj": "{{commandContext.vmo}}"
      },
      "outputData": {
        "attr": ""
      },
      "events": {
        "success": [
          {
            "name": "showMeasurableAttr"
          }
        ]
      },
      "deps": "js/Att1AttrMappingTableSelectService"
    },
    "showMeasurableAttr": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{data.attr.uid}}"
      }
    },
    "showReplaceDatasetDialog": {
      "actionType": "JSFunction",
      "method": "openFileSelectDialog",
      "deps": "js/Att1DatasetService",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      }
    },
    "downloadFileAction": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/viewFileCommandHandler",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      }
    },
    "initAddMeasurementFilePanel": {
      "actionType": "JSFunction",
      "method": "initAddFilePanelTypes",
      "deps": "js/addMeasurementFile",
      "inputData": {
        "subPanelContext": "{{commandContext}}"
      },
      "outputData": {
        "addValueFile": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1AddMeasurementFile.continuteInit"
          }
        ]
      }
    },
    "initAddMeasurementFilePanel2": {
      "actionType": "JSFunctionAsync",
      "method": "updateAddObjectContext",
      "deps": "js/addObjectUtils",
      "inputData": {
        "panelContext": {
          "relationMap": "{{data.addValueFile.relationMap}}",
          "target": "{{data.addValueFile.target}}",
          "searchFilter": "{{commandContext.parameterMap.Awp0ShowAddObject.searchFilter}}",
          "panelActive": "{{ctx.activeToolsAndInfoCommand.commandId === 'Att1AddMeasurementFile'}}",
          "visibleTabs": "{{commandContext.parameterMap.Awp0ShowAddObject.visibleTabs}}",
          "objectSetSourceHasDataset": "{{commandContext.objectSetSourceHasDataset}}",
          "showConfiguredRevision": "{{commandContext.searchCriteria.showConfiguredRev}}"
        }
      },
      "events": {
        "success": [
          {
            "name": "Att1AddMeasurementFile.openPanel"
          }
        ]
      }
    },
    "openAddMeasurementFilePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1AddMeasurementFile",
        "location": "aw_toolsAndInfo",
        "context": "{{data.addValueFile}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "closeAddMeasurementFilePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1AddMeasurementFile",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "navigateParamGroup": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/navigateObjectCommandHandler",
      "inputData": {
        "context": "{{commandContext.vmo}}"
      }
    },
    "openAddParamGroupCommandPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Att1AddParameterGroup",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext.parameterState.mselected[0]}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "att1SetImportTarget": {
      "actionType": "JSFunction",
      "method": "getSelectedForImport",
      "inputData": {
        "data": "{{data}}",
        "parametersTable": "{{commandContext.parametersTable}}"
      },
      "outputData": {
        "importTarget": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1Import.att1ActivateImportNewPanel",
            "condition": "data.eventMap['Att1Import.att1SetImportTarget'].source === 'ImportNew'"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "Att1ExportParametersPanelPWA": {
      "actionType": "JSFunction",
      "method": "getTemplateRequestPref",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "context": "{{ctx}}",
        "invoked": "PWA",
        "parametersTable": "{{commandContext.parametersTable}}",
        "commandContext": "{{commandContext}}"
      }
    },
    "Att1ExportParametersPanelSWA": {
      "actionType": "JSFunction",
      "method": "getTemplateRequestPref",
      "deps": "js/Att1ParameterMgmtUtilService",
      "inputData": {
        "context": "{{ctx}}",
        "invoked": "SWA",
        "parametersTable": "{{commandContext.parametersTable}}",
        "commandContext": "{{commandContext}}"
      }
    },
    "att1StartImportNew": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1Import.att1SetImportTarget",
            "eventData": {
              "source": "ImportNew"
            }
          }
        ]
      }
    },
    "att1ActivateImportNewPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Att1ImportParameters",
        "location": "aw_toolsAndInfo",
        "context": {
          "importTarget": "{{data.importTarget}}",
          "isNewImport": true,
          "parametersTable": "{{commandContext.parametersTable}}",
          "reusableParamTable": "{{commandContext.reusable}}"
        }
      }
    },
    "Att1PrePasteInDictionary": {
      "actionType": "JSFunction",
      "method": "getParameterDefinitionOnly",
      "deps": "js/Att1ParameterMgmtUtilService",
      "outputData": {
        "parameterDefinitions": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1PasteInDictionary.getParameterDefinitionOnly"
          }
        ]
      }
    },
    "Att1PasteToDictionary": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/pasteService",
      "inputData": {
        "targetObject": "{{ctx.selected}}",
        "sourceObjects": {
          "$adapt": "{{data.parameterDefinitions}}"
        },
        "relationType": "contents"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ],
              "createdObjects": "{{function:adaptedObjectsInput}}"
            }
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ],
              "createdObjects": "{{function:adaptedObjectsInput}}"
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.awClipBoardProvider.length === 1",
            "message": "pasteSuccessMessage"
          },
          {
            "condition": "ctx.parameterDefinitions.length > 1",
            "message": "pasteMultipleSuccessMessage"
          }
        ]
      }
    },
    "Att1DeleteCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1ParamGroup.confirmDeleteGroupEvent",
            "condition": "(commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length===1)"
          },
          {
            "name": "Att1ParamGroup.confirmMultipleGroupDeleteEvent",
            "condition": "(commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length>1)"
          }
        ]
      }
    },
    "Att1PerformDeleteGroup": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": {
          "$adapt": "{{commandContext.parameterState.selectedLeafGroups}}"
        }
      },
      "outputData": {
        "deleteObjectsPartialErrors": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          },
          {
            "name": "Att1ParamProjectNavigation.clearPWASelection"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length>0)",
            "message": "deleteGroupSuccessfulMessage"
          }
        ],
        "failure": [
          {
            "condition": "(commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length===1)",
            "message": "deleteObjectsSingleFailureMessage"
          },
          {
            "condition": "(commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length>1)",
            "message": "deleteObjectsMultipleFailureMessage"
          }
        ]
      }
    },
    "att1PrepareFreezePoint": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2007-01-DataManagement",
      "method": "refreshObjects",
      "inputData": {
        "objects": "{{function:getRootObject}}"
      },
      "events": {
        "success": [
          {
            "name": "Att1SetFreezePoint.activateFreezePointPanel"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "Awb0Element",
            "properties": [
              {
                "name": "awb0ArchetypeRevEffText",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              }
            ]
          }
        ]
      },
      "deps": "js/Att1FreezePointService"
    },
    "att1ActivateFreezePointPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Att1CreateFreezePoint",
          "parent": ".aw-layout-workarea",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "push": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "syncSelectionWhenCutGroup": {
      "actionType": "JSFunction",
      "method": "syncSelectionWhenCutGroup",
      "events": {
        "success": [
          {
            "name": "refreshParentWhenCutGroup"
          }
        ]
      },
      "deps": "js/pasteAttribute"
    },
    "setPropertiesOnGroupCut": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": "{{function:setPropertiesInputForCutGroup}}"
      },
      "events": {
        "success": [
          {
            "name": "cutParamGroupToAwClipboard",
            "condition": "!(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "cutParamProxyToAwClipboard",
            "condition": "(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "displayCutGroupsMessageEvent"
          }
        ]
      },
      "deps": "js/pasteAttribute"
    },
    "cutPersistentObjToAwClipboard": {
      "actionType": "JSFunction",
      "method": "setContents",
      "deps": "js/tcClipboardService",
      "inputData": {
        "uid": "{{commandContext.parameterState.mselected}}"
      }
    },
    "cutProxyObjToAwClipboard": {
      "actionType": "JSFunction",
      "method": "setContents",
      "deps": "js/tcClipboardService",
      "inputData": {
        "uid": "{{ctx.mselected}}"
      }
    },
    "cutToAwClipboardExceptOverridden": {
      "actionType": "JSFunction",
      "method": "cutToAwClipboardExceptOverridden",
      "deps": "js/RemoveMeasurableAttr",
      "inputData": {
        "uid": "{{data}}"
      }
    },
    "setPropertiesOnGroupPaste": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": "{{function:setPropertiesInputForPasteGroup}}"
      },
      "events": {
        "success": [
          {
            "name": "refreshParentWhenPasteGroup"
          }
        ]
      },
      "deps": "js/pasteAttribute"
    },
    "refreshParentWhenCutGroup": {
      "actionType": "JSFunction",
      "method": "refreshParentWhenCutGroup",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{commandContext.parameterState.mselected[0]}}"
      }
    },
    "refreshParentWhenPasteGroup": {
      "actionType": "JSFunction",
      "method": "refreshParentWhenPasteGroup",
      "deps": "js/pasteAttribute",
      "inputData": {
        "parentObjForPaste": "{{commandContext.parameterState.mselected[0]}}"
      },
      "events": {
        "success": [
          {
            "name": "Att1PasteParamProject.clearClipBoardContents"
          }
        ]
      }
    },
    "clearClipBoardContents": {
      "actionType": "JSFunction",
      "method": "setContents",
      "deps": "js/tcClipboardService",
      "inputData": {
        "contentsToSet": []
      }
    },
    "displayCutGroupsMessage": {
      "actionType": "JSFunction",
      "method": "displayCutGroupsMessage",
      "deps": "js/pasteAttribute",
      "inputData": {
        "data": "{{data}}"
      },
      "events": {
        "success": [
          {
            "name": "syncSelectionWhenCutGroup"
          }
        ]
      }
    },
    "att1StartReplaceToLatestRevision": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1ReviseAndReplace.reviseReplaceSingleConfirmationMessage",
            "condition": "commandContext.selectionData.selected.length === 1"
          },
          {
            "name": "Att1ReviseAndReplace.reviseReplaceMultipleConfirmationMessage",
            "condition": "commandContext.selectionData.selected.length > 1"
          }
        ]
      }
    },
    "executeReviseAndReplace": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2019-12-AttributeTargetManagement",
      "method": "replaceParameters",
      "inputData": {
        "inputs": "{{function:getInputForReviseReplace}}"
      },
      "outputData": {
        "reviseReplaceResponse": "",
        "replaceParametersPartialErrors": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage",
            "condition": "errorCode.code!==236041"
          }
        ]
      },
      "deps": "js/Att1ReviseReplaceParameterService"
    },
    "refreshRespectiveParameterTable": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "reviseReplaceResponse": "{{data.reviseReplaceResponse}}",
        "source": "",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "att1ReviseParameterPre": {
      "actionType": "JSFunction",
      "method": "reviseParameterPre",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/addMeasurableAttr"
    },
    "checkParamSelectedWithoutSWA": {
      "actionType": "JSFunction",
      "method": "checkParamSelectedWithoutSWA",
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameter.getAllSelectedParameterNames"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "checkParamSelectedWithoutSWAForOverride": {
      "actionType": "JSFunction",
      "method": "checkParamSelectedWithoutSWA",
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameter.getAllSelectedParameterNamesForOverride"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "releaseParamDefToWorkFLow": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2008-06-Workflow",
      "method": "createInstance",
      "inputData": {
        "startImmediately": true,
        "observerKey": "",
        "name": "Name",
        "subject": "",
        "description": "",
        "contextData": {
          "processTemplate": "{{function:getReleaseTemplateName}}",
          "attachmentCount": "{{commandContext.selectionModel.selectionData.selected.length}}",
          "attachments": "{{function:getParentUidArray}}",
          "attachmentTypes": "{{function:getAttachmentTypes}}"
        }
      },
      "outputData": {},
      "actionMessages": {
        "success": [
          {
            "condition": "commandContext.selectionModel.selectionData.selected.length === 1",
            "message": "singleSubmitToWorkflowSuccess"
          },
          {
            "condition": "commandContext.selectionModel.selectionData.selected.length > 1",
            "message": "submitToWorkflowSuccess"
          }
        ],
        "failure": [
          {
            "message": "paramFailureMessage",
            "condition": "errorCode.code!==236041"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "getAllSelectedParameterNames": {
      "actionType": "JSFunction",
      "method": "getSelectedParameterNames",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "data": "{{data}}",
        "action": "delete"
      },
      "outputData": {
        "selectedParameterNames": "selectedParameterNames",
        "warningConfirmationMessage": "warningConfirmationMessage"
      },
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameter.publishDeleteParameterConfirmPopUp"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "getAllSelectedParameterNamesForOverride": {
      "actionType": "JSFunction",
      "method": "getSelectedParameterNames",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "data": "{{data}}",
        "action": "removeoverride"
      },
      "outputData": {
        "selectedParameterNames": "selectedParameterNames",
        "warningConfirmationMessage": "warningConfirmationMessage"
      },
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameter.publishRemoveOverrideParameterConfirmPopUp"
          }
        ]
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "publishDeleteParameterConfirmPopUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1DeleteParameter.deleteParameter12xConfirmationMessage",
            "condition": "commandContext.parameterState.selectedProxyParams.length > 0 || commandContext.parameterState.paramSelectedWithoutSWA || ctx.parammgmtctx.parameterTableCtx.parameterSelectedInPramProjectContext || commandContext.parametersTable.selectedObjects.length > 0 || (ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 || ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1) && ctx.xrtSummaryContextObject.props.is_modifiable.dbValues[ 0 ] === '1'"
          },
          {
            "name": "Att1DeleteParameter.deleteInContextParameter12xConfirmationMessage",
            "condition": "ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length > 0 || ctx.parammgmtctx.parameterTableCtx.inContextParameterSelectedCount > 0 "
          }
        ]
      }
    },
    "publishRemoveParameterConfirmPopUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1DeleteParameter.removeParameter12xConfirmationMessage",
            "condition": "data.warningConfirmationMessage.length > 0"
          },
          {
            "name": "Att1DeleteParameter.cutParameters",
            "condition": "data.warningConfirmationMessage.length === 0"
          }
        ]
      }
    },
    "publishRemoveOverrideParameterConfirmPopUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1DeleteParameter.removeOverrideParameter12xConfirmationMessage"
          }
        ]
      }
    },
    "executeDeleteParameterFor12x": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2019-12-AttributeTargetManagement",
      "method": "removeParameters",
      "inputData": {
        "inputs": "{{data.inputParametersToDelete}}",
        "toDelete": true
      },
      "outputData": {
        "deleteParameterFor12xResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.removeParamsFromTable",
            "eventData": {
              "response": "{{data.deleteParameterFor12xResponse}}",
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.parametersTable.reusable}}"
            },
            "condition": "data.isRemoveOverrideParam !== true"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.parametersTable.reusable}}"
            },
            "condition": "data.isRemoveOverrideParam === true"
          }
        ],
        "failure": [
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.parametersTable.reusable}}"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      },
      "deps": "js/RemoveMeasurableAttr"
    },
    "executeDeleteInContextParameterFor12x": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2019-12-AttributeTargetManagement",
      "method": "removeParameters",
      "inputData": {
        "inputs": "{{data.inputParametersToDelete}}",
        "toDelete": true
      },
      "outputData": {
        "deleteParameterFor12xResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1DeleteParameterFor12x.refreshParametersAfterInContextDelete",
            "eventData": {
              "source": "deleteParameterFromTable"
            }
          }
        ],
        "failure": [
          {
            "name": "Att1DeleteParameterFor12x.refreshParametersAfterInContextDelete",
            "eventData": {
              "source": "deleteParameterFromTable"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "paramFailureMessage"
          }
        ]
      },
      "deps": "js/RemoveMeasurableAttr"
    },
    "refreshRespectiveParameterTableAfterCut": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "cutParameterResponse": "{{data.cutParameterFrameworkSoaResponse}}",
        "source": "",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "refreshRespectiveParameterTableAfterDelete": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "deleteParameterResponse": "{{data.deleteParameterFor12xResponse}}",
        "source": "",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "refreshParametersAfterInContextDelete": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "deleteParameterResponse": "{{data.deleteParameterFor12xResponse}}",
        "source": "{{data.eventMap['Att1DeleteParameterFor12x.refreshParametersAfterInContextDelete'].source}}",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "OpenReplaceParamRevisionPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Att1ReplaceParameterRevision",
          "parent": ".aw-layout-workarea",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "push": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "att1AddParameterValueWithUsage": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmt-2020-12-AttributeTargetManagement",
      "method": "attachParameters",
      "inputData": {
        "inputs": "{{function:getInputForAddParamValue}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "deps": "js/addMeasurableAttr"
    },
    "att1AddParameterValue": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1AddParameterValueWithUsage",
            "condition": "(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          },
          {
            "name": "Att1AddParameterValueWithoutUsage",
            "condition": "!(ctx.tcSessionData.tcMajorVersion > 14 || ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 3)"
          }
        ]
      },
      "outputData": {
        "attachMeasurableAttributesSoaOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "deps": "js/addMeasurableAttr"
    },
    "att1AddParameterValueWithoutUsage": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmtAW-2017-06-AttributeTargetManagement",
      "method": "attachMeasurableAttributes",
      "inputData": {
        "inputs": "{{function:getInputForAddParamValue}}"
      },
      "outputData": {
        "attachMeasurableAttributesSoaOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ],
        "failure": [
          {
            "name": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue"
          },
          {
            "name": "uniformParamTable.reloadTable",
            "eventData": {
              "requestId": "{{commandContext.parametersTable.requestId}}",
              "reusable": "{{commandContext.reusable}}"
            }
          }
        ]
      },
      "deps": "js/addMeasurableAttr"
    },
    "refreshParameterTableAfterAddParameterValue": {
      "actionType": "JSFunction",
      "method": "refreshParameterTable",
      "inputData": {
        "attachMeasurableAttributesSoaOutput": "{{data.attachMeasurableAttributesSoaOutput}}",
        "source": "addParameterValueFromTable",
        "subPanelContext": "{{commandContext}}"
      },
      "deps": "js/Att1ParameterMgmtUtilService"
    },
    "toggleShowParameters": {
      "actionType": "JSFunction",
      "method": "toggleShowParameters",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "Att1ParameterVariants.handleShowParameterVariants"
          }
        ]
      },
      "deps": "js/Att1ConfigureVariantForProductService"
    },
    "handleShowParameterVariants": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1ParameterVariants.showParameterVariants",
            "condition": "commandContext.subPanelContext.context.occContext.persistentRequestPref.showParametersOnVC === true"
          },
          {
            "name": "Att1ParameterVariants.hideParameterVariants",
            "condition": "commandContext.subPanelContext.context.occContext.persistentRequestPref.showParametersOnVC === undefined"
          }
        ]
      }
    },
    "showParameterVariants": {
      "actionType": "JSFunctionAsync",
      "method": "showParameters",
      "inputData": {
        "selectedObjects": "{{ctx.occmgmtContext.selectedModelObjects}}",
        "isSelectionChange": false
      },
      "events": {
        "success": [
          {
            "name": "configuratorVcaTable.reload"
          }
        ]
      },
      "deps": "js/Att1ConfigureVariantForProductService"
    },
    "hideParameterVariants": {
      "actionType": "JSFunction",
      "method": "hideParameterVariants",
      "events": {
        "success": [
          {
            "name": "configuratorVcaTable.reload"
          }
        ]
      },
      "deps": "js/Att1ConfigureVariantForProductService"
    },
    "Att1EnableMultiSelectObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "dataProviderEnableMultiSelect",
      "deps": "js/dataProviderFactory",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.refreshTable"
          }
        ]
      }
    },
    "Att1DisableMultiSelectObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "dataProviderDisableMultiSelect",
      "deps": "js/dataProviderFactory",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      },
      "events": {
        "success": [
          {
            "name": "uniformParamTable.refreshTable"
          }
        ]
      }
    },
    "Att1DisableMultiSelectReusableParamTableCommandAction": {
      "actionType": "JSFunction",
      "method": "displayMultiselectParameters",
      "deps": "js/Att1ShowReusableParametersTableService",
      "inputData": {
        "commandContext": "{{commandContext}}"
      }
    },
    "Att1SelectAllObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "selectAll",
      "deps": "js/dataProviderFactory",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      }
    },
    "Att1DeselectAllObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "selectNone",
      "deps": "js/dataProviderFactory",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}"
      }
    },
    "Att1DuplicateMeasureValueSOACall": {
      "actionType": "TcSoaService",
      "serviceName": "AttrTargetMgmt-2021-12-AttributeTargetManagement",
      "method": "updateParameters2",
      "inputData": {
        "inputs": [
          {
            "clientId": "AWClient",
            "parameters": [
              {
                "clientId": "Parameters",
                "parameter": "{{function:getSelectedParameterObject}}",
                "goalTableInput": {},
                "valueInputs": [
                  {
                    "toCreate": true,
                    "measureValue": "{{commandContext.dataProvider.selectedObjects[0]}}",
                    "valueTableInput": {
                      "operation": "",
                      "fileTicket": "",
                      "jsonString": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      "outputData": {
        "updateParamResp": ""
      },
      "events": {
        "success": [
          {
            "name": "MeasurementsTable.plTable.reload"
          },
          {
            "name": "Att1ParametersWidePanel.refreshParameters",
            "condition": "!(commandContext.parametersTable && commandContext.parametersTable.isParameterWidePanelOpen === true)"
          }
        ]
      },
      "deps": "js/Att1ComplexDataService"
    },
    "Att1ShowRange": {
      "actionType": "JSFunction",
      "method": "showRange",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1ComplexDataService"
    },
    "Att1ShowGoal": {
      "actionType": "JSFunction",
      "method": "showGoal",
      "inputData": {
        "engrTable": "{{commandContext.engrTable}}"
      },
      "deps": "js/Att1ComplexDataService"
    },
    "AddInLineCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Att1InlineAuthoring.addInlineRow",
            "eventData": {
              "targetObjectType": "Double",
              "context": "{{commandContext}}"
            }
          }
        ]
      }
    }
  },
  "functions": {
    "getValidParent": {
      "functionName": "getValidParent",
      "parameters": []
    },
    "getDeleteObjectsPartialErrors": {
      "functionName": "getDeleteObjectsPartialErrors",
      "parameters": []
    },
    "getAutomapInputs": {
      "functionName": "getAutomapInputs",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getAutomapPrefs": {
      "functionName": "getAutomapPrefs",
      "parameters": []
    },
    "evaluateAutomapResults": {
      "functionName": "evaluateAutomapResults",
      "parameters": [
        "{{data}}"
      ]
    },
    "adaptedObjectsInput": {
      "functionName": "adaptedInput",
      "parameters": [
        "{{data.parameterDefinitions}}"
      ]
    },
    "getParameterDefinitionOnly": {
      "functionName": "getParameterDefinitionOnly",
      "parameters": []
    },
    "getSelectedParameterObject": {
      "functionName": "getSelectedParameterObject",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getRootObject": {
      "functionName": "getRootObject",
      "parameters": [
        "{{data}}"
      ]
    },
    "CreateInputForCutGroup": {
      "functionName": "CreateInputForCutGroup",
      "parameters": [
        "{{data}}"
      ]
    },
    "setPropertiesInputForCutGroup": {
      "functionName": "setPropertiesInputForCutGroup",
      "parameters": []
    },
    "setPropertiesInputForPasteGroup": {
      "functionName": "setPropertiesInputForPasteGroup",
      "parameters": []
    },
    "getInputForReviseReplace": {
      "functionName": "getInputForReviseReplace",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "createInputForRemoveParameters": {
      "functionName": "createInputForRemoveParameters",
      "parameters": [
        "{{data}}"
      ]
    },
    "createInputForSetParametersDirection": {
      "functionName": "createInputForSetParametersDirection",
      "parameters": [
        "{{data}}",
        "{{commandContext.parametersTable}}"
      ]
    },
    "getInputForAddParamValue": {
      "functionName": "getInputForAddParamValue",
      "parameters": [
        "{{commandContext.parametersTable}}"
      ]
    },
    "getParentUidArray": {
      "functionName": "getParentUidArray",
      "parameters": []
    },
    "getReleaseTemplateName": {
      "functionName": "getReleaseTemplateName",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "getAttachmentTypes": {
      "functionName": "getAttachmentTypes",
      "parameters": [
        "{{ctx.mselected}}"
      ]
    }
  },
  "conditions": {
    "cutOrDeleteSecondaryFromElement": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.removeAttachmentVisibility",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.Att1IsAwb0ElementSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.selectionData.selected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0ParamDictionary"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isParametersWidePanelOpen": {
      "expression": "commandContext.parametersTable && commandContext.parametersTable.isParameterWidePanelOpen === true"
    },
    "isMeasuredValueContextNotActive": {
      "expression": "ctx.MEASUREMENT_EDIT_HANDLER && ctx['MEASUREMENT_EDIT_HANDLER']._editing === true"
    },
    "isChartsViewSelected": {
      "expression": "commandContext.isShowChart === true && commandContext.isShowValuesTable === false"
    },
    "isShowLogarithimicScaleSelected": {
      "expression": "commandContext.engrTable.isLogarithmicScale === true"
    },
    "isValuesTableViewSelected": {
      "expression": "commandContext.isShowValuesTable === true && commandContext.isShowChart === false"
    },
    "isValuesTableAndChartViewSelected": {
      "expression": "commandContext.isShowValuesTable === true && commandContext.isShowChart === true"
    },
    "Att1IsEngrTableCommandEnabled": {
      "expression": "commandContext.engrTable.tableModel.tableName==='goalTable' || commandContext.isShowValuesTable === true"
    },
    "Att1IsChartCommandEnabled": {
      "expression": "commandContext.isShowChart === true"
    },
    "Att1IsValuesTableAndChartViewCommandVisible": {
      "expression": "conditions.Att1IsSelectedParameterConstainsComplexData && conditions.att1IsMeasuredValueSelectedInTable"
    },
    "Att1IsPlotChartCommandEnabled": {
      "expression": "conditions.Att1IsOnlySingleParameterSelectedInTable && conditions.Att1IsSelectedParameterConstainsComplexData"
    },
    "Att1IsOnlySingleParameterSelectedInTable": {
      "expression": "commandContext.parametersTable.selectedObjects.length===1 && commandContext.parametersTable.selectedUnderlyingObjects[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1"
    },
    "Att1IsCompareModeOn": {
      "expression": "ctx.locationContext && ctx.locationContext['ActiveWorkspace:Location'] === 'parameterComapreTaskRoot'"
    },
    "att1IsAddComplexDataCommandEnabled": {
      "expression": "conditions.isTcReleaseAtLeast133 && commandContext.parametersTable.disabledCommands.addTableValue === undefined && conditions.att1CheckEditModeIsOffForSummary && conditions.Att1IsOnlySingleParameterSelectedInTable && !conditions.Att1IsCompareModeOn && conditions.att1EnableStartEditParamTableCondition"
    },
    "att1IsManageMeasurementsCommandEnabled": {
      "expression": "conditions.isTcReleaseAtLeast133 && conditions.att1CheckEditModeIsOffForSummary && conditions.Att1IsOnlySingleParameterSelectedInTable && conditions.att1EnableManageMeasurements  && conditions.att1EnableStartEditParamTableCondition"
    },
    "isTcReleaseAtLeast133": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 3)"
    },
    "Att1FullScreenCommndVisibleCond": {
      "expression": "ctx.isParametersWidePanelInFullScreen === undefined || ctx.isParametersWidePanelInFullScreen === false"
    },
    "Att1ExitFullScreenCommndVisibleCond": {
      "expression": "ctx.isParametersWidePanelInFullScreen === true"
    },
    "att1NoSelectionInParametersTable": {
      "expression": "commandContext.parametersTable.selectedObjects === undefined || commandContext.parametersTable.selectedObjects.length === 0"
    },
    "supportsHideChildLinesView": {
      "expression": "commandContext.parametersTable.parametersTableViewMode.supportedViewModes.hideChildLines "
    },
    "isHideChildLinesView": {
      "expression": "commandContext.parametersTable.parametersTableViewMode !== undefined && commandContext.parametersTable.parametersTableViewMode.viewModeContext === 'hideChildLines'"
    },
    "supportsShowChildLinesView": {
      "expression": "commandContext.parametersTable.parametersTableViewMode.supportedViewModes.showChildLines"
    },
    "isShowChildLinesView": {
      "expression": "commandContext.parametersTable.parametersTableViewMode !== undefined && commandContext.parametersTable.parametersTableViewMode.viewModeContext === 'showChildLines'"
    },
    "Att1AddTableEnableCommandCond": {
      "expression": "(commandContext.openedObject.props.att0AttributeTable.dbValue === undefined || commandContext.openedObject.props.att0AttributeTable.dbValue === null)"
    },
    "Att1IsSelectedParameterConstainsComplexData": {
      "expression": "conditions.Att1XRTContextObjectCOntainsComplexData || (commandContext.parametersTable.selectedUnderlyingObjects[0].props.att0AttributeTable.dbValues[0] !== undefined && commandContext.parametersTable.selectedUnderlyingObjects[0].props.att0AttributeTable.dbValues[0] !== null && commandContext.parametersTable.selectedUnderlyingObjects[0].props.att0AttributeTable.dbValues[0] !== '')|| (commandContext.openedObject.props.att0AttributeTable.dbValues[0] !== undefined && commandContext.openedObject.props.att0AttributeTable.dbValues[0] !== null && commandContext.openedObject.props.att0AttributeTable.dbValues[0] !== '')"
    },
    "Att1AddTableActiveCommandCond": {
      "expression": "commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && commandContext.openedObject.props.is_modifiable.dbValues[0] === '1'"
    },
    "Att1IsSelectedParameterModifiableForComplexData": {
      "expression": "(commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && commandContext.openedObject.props.is_modifiable.dbValues[0] === '1') || (conditions.isParametersWidePanelOpen && commandContext.parametersTable.selectedObjects[0].props.is_modifiable.dbValues[0] === '1')"
    },
    "Att1XRTContextObjectCOntainsComplexData": {
      "expression": "commandContext.engrTable && commandContext.engrTable.selectedParameter.props && commandContext.engrTable.selectedParameter.props.att0AttributeTable && (commandContext.engrTable.selectedParameter.props.att0AttributeTable.dbValue !== undefined && commandContext.engrTable.selectedParameter.props.att0AttributeTable.dbValue !== null && commandContext.engrTable.selectedParameter.props.att0AttributeTable.dbValue !== '')"
    },
    "Att1StartEditEnableEngrTableCond": {
      "expression": "(!conditions.Att1AddTableEnableCommandCond || conditions.Att1IsSelectedParameterConstainsComplexData ) && (conditions.Att1InGoalTable && commandContext.engrTable.goalTable.isDirty !== true) || (!conditions.Att1InGoalTable && commandContext.engrTable.valueTable.isDirty !== true)"
    },
    "Att1EnableToggleEngrTableCond": {
      "expression": "conditions.Att1StartEditEnableEngrTableCond && conditions.Att1EngrTableEditable"
    },
    "Att1SaveOrCancelEditEnableEngrTableCond": {
      "expression": "(!conditions.Att1AddTableEnableCommandCond || conditions.Att1IsSelectedParameterConstainsComplexData ) && (commandContext.engrTable.goalTable.isDirty === true && conditions.Att1InGoalTable) || (commandContext.engrTable.valueTable.isDirty === true && !conditions.Att1InGoalTable)"
    },
    "Att1IsAutoSaveDisabedInEngrTable": {
      "expression": "ctx.att1IsAutoSaveDisabedInEngrTable === true"
    },
    "Att1ImportExportEngrTableCmdCond": {
      "expression": "commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Values' || !conditions.att1ShowGoalVisibility"
    },
    "Att1AddMeasurementEnableCond": {
      "expression": "(conditions.Att1AddMeasurementEnabledInWidePanel || conditions.Att1AddMeasurementEnabledInOwnLocation) && (!conditions.Att1IsTargetParameterElementSelected)"
    },
    "Att1AddMeasurementActiveCond": {
      "expression": "commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1"
    },
    "Att1AddMeasurementEnabledInOwnLocation": {
      "expression": "commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 && conditions.measurementTableEditNotInProgress"
    },
    "Att1AddMeasurementEnabledInWidePanel": {
      "expression": "conditions.isParametersWidePanelOpen && commandContext.engrTable.selectedParameter.props.is_modifiable.dbValues[0] === '1' && commandContext.engrTable.selectedParameter.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 && conditions.measurementTableEditNotInProgress"
    },
    "measurementTableEditNotInProgress": {
      "expression": "ctx.MEASUREMENT_EDIT_HANDLER && ctx['MEASUREMENT_EDIT_HANDLER']._editing === false"
    },
    "shouldHideCutCommandForConsumingTable": {
      "expression": "(conditions.isItemRevSelection && conditions.isParentMeasurableAttribute && conditions.isRelationContextConsumingRelation)"
    },
    "hideAwb0CtxMenuCommands": {
      "expression": "commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute')>0"
    },
    "canCutParamForFolderStuff": {
      "expression": "(commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 && commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Folder') > -1 && (ctx.relationContext && ctx.relationContext.relationInfo && ctx.relationContext.relationInfo[0].relationType === 'contents'))"
    },
    "isItemRevSelection": {
      "expression": "commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('ItemRevision') > -1"
    },
    "isParentMeasurableAttribute": {
      "expression": "commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "isRelationContextConsumingRelation": {
      "expression": "(ctx.relationContext && ctx.relationContext.relationInfo && ctx.relationContext.relationInfo[0].relationType === 'Nxs0Consuming')"
    },
    "PasteCmdVisibilityDelegate": {
      "expression": "(commandContext.pageContext.primaryActiveTabId === 'tc_xrt_AttributesForDCP' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_AttributesForDCP' || conditions.isParamObjectSet ) && conditions.clipBoardContainsParameter"
    },
    "PasteCmdVisibilityInProjectTree": {
      "expression": "conditions.Att1InParamProjectSublocation && conditions.isTcReleaseAtLeast122 && ctx.mselected.length === 1 && conditions.targetIsProjectOrGroup && (conditions.clipBoardContainsParameter || conditions.clipBoardContainsGroup) && ( commandContext.parametersTable.selectedObjects === undefined || commandContext.parametersTable.selectedObjects.length === 0)"
    },
    "PasteCmdVisibilityInProjectTreeCtxMenu": {
      "expression": "conditions.Att1InParamProjectSublocation && conditions.isTcReleaseAtLeast122 && commandContext.selectionData.selected.length === 1 && conditions.targetIsProjectOrGroup && conditions.clipBoardContainsGroup && ( commandContext.parametersTable.selectedObjects === undefined || commandContext.parametersTable.selectedObjects.length === 0)"
    },
    "Att1InParamProjectSublocation": {
      "expression": "ctx.sublocation.clientScopeURI === 'Att1ProjectNavigation'"
    },
    "targetIsProjectOrGroup": {
      "expression": "commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1  || commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1"
    },
    "clipBoardContainsParameter": {
      "expression": "ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 || (ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1 && ctx.awClipBoardProvider[0].props.att1AttrInOut.dbValues[0] != '')"
    },
    "clipBoardContainsGroup": {
      "expression": "ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Att0ParamGroup') > -1"
    },
    "showAttrMapVisibleCond": {
      "expression": "(conditions.att1EnableMappingParameters && commandContext.parametersTable.selectedObjects.length === 1)"
    },
    "showAttrUnMapVisibleCond": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.showAttrUnMapVisibleCondUniformTable",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "showAttrUnMapVisibleCondUniformTable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableMappingParameters",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.onlyParentParameterSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "onlyParentParameterSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.parametersTable.selectedObjects",
            "$query": {
              "$all": {
                "$source": "levelNdx",
                "$query": {
                  "$eq": 0
                }
              }
            }
          }
        ]
      }
    },
    "checkEditModeIsOffForMappingTable": {
      "expression": "ctx.isMappingTableEditing === false"
    },
    "checkEditModeIsOffForInDefTable": {
      "expression": "ctx.ATTRIBUTE_TABLE_CONTEXT._editing !== true && (ctx.xrtPageContext.secondaryXrtPageID ==='Ase0ArchitectureFeature' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_AttributesForDCP' )"
    },
    "att1CheckEditModeIsOffForSummary": {
      "expression": "conditions.isNoneContextActive && conditions.Att1NotInlineAuthoringMode"
    },
    "att1CheckEditModeIsOffForTableAndSummaryAndACE": {
      "expression": "!ctx['NONE']._editing && !ctx['TABLE_CONTEXT']._editing && !ctx['occDataProvider']._editing && !ctx['occDataProvider2']._editing"
    },
    "att1CheckEditModeIsOnForSummary": {
      "expression": "conditions.isNoneContextNotActive || conditions.Att1IsInlineAuthoringMode"
    },
    "hideFrameworkStartEditCommand": {
      "expression": "conditions.isStartEditAllowed && conditions.isAttrProxyDCPView"
    },
    "hideFrameworkSaveEditCommand": {
      "expression": "conditions.saveEditsCommandActive && conditions.isAttrProxyDCPView"
    },
    "hideFrameworkCancelEditCommand": {
      "expression": "conditions.cancelEditsCommandActive && conditions.isAttrProxyDCPView"
    },
    "att1InContextParameterSelected": {
      "expression": "ctx.parammgmtctx && ctx.parammgmtctx.parameterTableCtx.inContextParameterSelectedCount > 0 "
    },
    "onlyInContextParameterIsSelected": {
      "expression": "conditions.att1InContextParameterSelected && ctx.parammgmtctx.parameterTableCtx.inContextParameterSelectedCount === ctx.parammgmtctx.parameterTableCtx.selectedParameters.length"
    },
    "parameterTableEditInProgress": {
      "expression": "(ctx.NONE && ctx['NONE']._editing) || conditions.Att1IsInlineAuthoringMode"
    },
    "addMeasurableAttrVisibility": {
      "expression": "!conditions.parameterTableEditInProgress && (conditions.selectedParentHasWriteAccess || conditions.addParameterVisibilityCondForVR)"
    },
    "AddParamValueForProductVisibility": {
      "expression": "conditions.isTcReleaseAtLeast124 && ctx.editInProgress !== true &&  ctx.occmgmtContext.selectedModelObjects.length === 1 && commandContext.selectionData.selected.length >= 1 && (ctx.selectedAttrProxyObjects.length > 0 || ctx.selectedProxyObjects.length >0 ) && conditions.Att1NotAROpen === true && conditions.selectedParentHasWriteAccess"
    },
    "pasteAttributeVisibility": {
      "expression": "!conditions.parameterTableEditInProgress && !conditions.isTcReleaseAtLeast122 && commandContext.selectionData.selected.length === 1 && conditions.Att1NotAROpen === true && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_AttributesForDCP' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_AttributesForDCP' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Attributes' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Attributes') && ctx.awClipBoardProvider.length > 0 && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Awb0Element') > -1)"
    },
    "pasteParameterVisibility": {
      "expression": "((conditions.isTcReleaseAtLeast131 && commandContext.parametersTable.parentObjects.length === 1) || (!conditions.isTcReleaseAtLeast131 && conditions.selectedParentHasWriteAccess)) && !conditions.parameterTableEditInProgress && (conditions.isTcReleaseAtLeast122 && ctx.mselected.length === 1 && conditions.att1IsInContextOfAR === false && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_AttributesForDCP' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_AttributesForDCP' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Attributes'  || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Attributes' || ctx.Att1ShowMappedAttribute ) && ctx.awClipBoardProvider.length > 0 && ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1  &&  conditions.isValidParentSelection )"
    },
    "noEditModeNoSelectForMappingTable": {
      "expression": "conditions.att1EnableMappingParameters && (commandContext.parametersTable.selectedObjects === undefined || commandContext.parametersTable.selectedObjects.length === 0) && !conditions.att1IsParametersTableEmpty"
    },
    "noEditModeAndSelectForMappingTable": {
      "expression": "(conditions.att1EnableMappingParameters && commandContext.parametersTable.selectedObjects.length > 0)"
    },
    "replaceDatasetVisibleCond": {
      "expression": "(ctx.pselected.props.is_modifiable.dbValues[0] === '1' && ctx.selected.props.is_modifiable.dbValues[0] === '1') || (ctx.pselected === undefined && ctx.selected.props.is_modifiable.dbValues[0] === '1') || (commandContext.context.selected.props.is_modifiable.dbValues[0] === '1')"
    },
    "addMeasurementFileVisibleCond": {
      "expression": "commandContext.objectSetSource === 'Att1MeasurementFileProvider.Dataset' && commandContext.openedObject.props.is_modifiable.dbValues[0] === '1'"
    },
    "isAttrProxyDCPView": {
      "expression": "ctx.occmgmtContext && ctx.showAttrProxyTable && commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_AttributesForDCP'"
    },
    "Att1RemoveMeasurableAttrFromItemRev": {
      "expression": "ctx.editInProgress !== true && ctx.occmgmtContext === undefined && conditions.Att1IsAttributeSelected === true && conditions.Att1IsAttributeParentModifiable === true && conditions.Att1IsAttrParentHomeFolder === false"
    },
    "Att1IsAttrParentHomeFolder": {
      "expression": "conditions.att1InHomeSublocation && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > 0"
    },
    "Att1RemoveMeasurableAttrFromInContextVisibility": {
      "expression": "conditions.Att1IsRemoveAttrCommandVisibleFromServer === true && ctx.editInProgress !== true && conditions.Att1IsAwb0ElementSelected === true && conditions.Att1IsAttributeParentModifiable === true && ctx.openedARObject === undefined && !conditions.isAttrProxyDCPView"
    },
    "Att1RemoveMeasurableAttrFromDCPVisibilityFor12x": {
      "expression": "conditions.Att1IsAttributeSelected && conditions.selectedParentHasWriteAccess === true && !conditions.parameterTableEditInProgress && conditions.Att1IsAwb0ElementSelected === true  && ctx.openedARObject === undefined && conditions.isAttrProxyDCPView"
    },
    "removeMeasurableAttrFromSplitTableVisibilityFor12x": {
      "expression": "ctx.Att1ShowMappedAttribute.mappingCommand === 'true' && ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length > 0 && conditions.selectedParentHasWriteAccess === true  && ctx.openedARObject === undefined && ctx.editInProgress === false"
    },
    "releaseParamDefEnableCondition": {
      "expression": "ctx.mselected.length>0 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf('Att0AttributeDefRevision')>-1"
    },
    "Att1IsRemoveAttrCommandVisibleFromServer": {
      "expression": "ctx.visibleServerCommands.Att1RemoveMeasurableAttr && ctx.visibleServerCommands.Att1RemoveMeasurableAttr === true"
    },
    "Att1IsAttributeSelected": {
      "expression": "commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Att1AttributeAlignmentProxy' ) > -1 || (commandContext.parameterState.selectedProxyParams && commandContext.parameterState.selectedProxyParams.length > 0)"
    },
    "Att1IsAttributeParentModifiable": {
      "expression": "commandContext.selectionData.pselected.props.is_modifiable.dbValues[0] === '1' || commandContext.parameterState.mselected[0].props.is_modifiable.dbValues[0] === '1'"
    },
    "Att1IsAwb0ElementSelected": {
      "expression": "commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1"
    },
    "Att1IsSingleAttrParentSelected": {
      "expression": "ctx.isAttrmultipleParentSelected === undefined || (ctx.isAttrmultipleParentSelected &&  ctx.isAttrmultipleParentSelected === false)"
    },
    "navigateParamGroupVisibleCondition": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 && (commandContext.vmo.props.att0ChildParamGroups.dbValues[0] !== undefined || commandContext.vmo.props.att0ChildParamValues.dbValues[0] !== undefined)"
    },
    "isAtt1AddParameterGroupButtonVisible": {
      "expression": "(commandContext.parameterState.mselected && commandContext.parameterState.mselected.length === 1 ) && (commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1 || commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1) && commandContext.parameterState.mselected[0].props.is_modifiable.dbValues[0] === '1'"
    },
    "Att1NotAROpen": {
      "expression": "(ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('Crt0VldnContractRevision') === -1) && (ctx.openedARObject===undefined || (ctx.openedARObject && ctx.openedARObject.modelType.typeHierarchyArray.indexOf('Crt0VldnContractRevision') === -1))"
    },
    "isDictionaryContext": {
      "expression": "conditions.folderSelected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) !== -1"
    },
    "isTcReleaseAtLeast122": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 12 || ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 2"
    },
    "isTcReleaseAtLeast123": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 12 || ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 3"
    },
    "isTcReleaseAtLeast124": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 12 || ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 4"
    },
    "parametersAreSelectedFromTable": {
      "expression": "commandContext.selectionData.selected.length > 0 && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Att1AttributeAlignmentProxy' ) > -1)"
    },
    "isParentParamDefRevision": {
      "expression": "commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf( 'Att0AttributeDefRevision' ) > -1"
    },
    "att0CutParamCmdCond": {
      "expression": "!conditions.canCutParamForFolderStuff && conditions.isParentParamDefRevision === false && conditions.att1IsInContextOfAR === false && conditions.parametersAreSelectedFromTable && !conditions.att0IsMeasurementFileSelected && (conditions.itemRevisionIsModifiableForDataSetParamTable || conditions.selectedParentHasWriteAccess ) && !conditions.disableRightWallCommandsInQuickAddMode && commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "isParamSelectedInFolderPWA": {
      "expression": "( ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1)"
    },
    "att0IsMeasurementFileSelected": {
      "expression": "commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Dataset' ) > -1 && ctx.relationContext.relationInfo[0].relationType === 'Att1MeasurementFileProvider'"
    },
    "att0CutMeasurementDatasetCmdCond": {
      "expression": "conditions.att1IsInContextOfAR === false && ( commandContext.parameterState.selectedProxyParams.length === 1 || commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 || conditions.isParamSelectedInFolderPWA ) && conditions.att0IsMeasurementFileSelected === true"
    },
    "att0CutParamCmdCondForProjectTree": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast122",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isParamProjectSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isParamGroupSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "commandContext.parameterState.mselected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0MeasurableAttribute"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.parameterState.mselected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Att0ParamGroup"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.selectionData.selected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Dataset"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "cutGroupFromProjectCond": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast123",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.parameterState.mselected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0ParamGroup"
                  ]
                }
              }
            }
          },
          {
            "$source": "commandContext.parameterState.mselected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Att0MeasurableAttribute"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1SingleObjSelectPrefValueFalse": {
      "expression": "ctx.mselected.length === 1 && ctx.preferences.REPORT_AW_Show_GenerateReport_Command_for_Multiselect[0] === 'false'"
    },
    "att1MultipleObjSelectPrefValueTrue": {
      "expression": "ctx.mselected.length >= 1 && ctx.preferences.REPORT_AW_Show_GenerateReport_Command_for_Multiselect[0] === 'true'"
    },
    "att1ShowGenerateReportCommand": {
      "expression": "conditions.att1IsParamProxySelected && ( conditions.att1SingleObjSelectPrefValueFalse || conditions.att1MultipleObjSelectPrefValueTrue)"
    },
    "att0CheckoutProxyCmdCond": {
      "expression": "conditions.isTcReleaseAtLeast122 && ctx.canCheckoutProxyObjects && commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "att0CheckinProxyCmdCond": {
      "expression": "conditions.isTcReleaseAtLeast122 && ctx.canCheckinProxyObjects && commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "att0cancelCheckoutProxyCmdCond": {
      "expression": "conditions.isTcReleaseAtLeast122 && ctx.canCheckinProxyObjects && commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "isParamInClipBoard": {
      "expression": "ctx.awClipBoardProvider.length > 0 && ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1"
    },
    "isParamProjectSelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1"
    },
    "isParamGroupSelected": {
      "expression": "commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1"
    },
    "isParamDictionarySelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1"
    },
    "isInVRContextExceptStudy": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 || ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 ) && !conditions.att1StudyTabContext"
    },
    "isParamObjectSet": {
      "expression": "commandContext.objectSetSourceArray.includes('Att1ParametersProvider.Att0MeasurableAttributeInt')"
    },
    "isValidParentSelection": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "isAtt1TreeEditNotInProgress": {
      "expression": "!ctx['NONE']._editing && !ctx['TABLE_CONTEXT']._editing"
    },
    "startEditParamTreeCond": {
      "expression": "ctx.visibleServerCommands.Awp0StartEditTable && commandContext.parameterState.parameterProject.props.is_modifiable.dbValues[0] === '1' && conditions.isAtt1TreeEditNotInProgress"
    },
    "att1IsInContextOfAR": {
      "expression": "commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Crt0VldnContractRevision') > -1 || commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Crt0VldnContractRevision') > -1"
    },
    "att1IsParamProxySelected": {
      "expression": "commandContext.selectionData.selected.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "att1IsSingleParamProxySelected": {
      "expression": "commandContext.parameterState.mselected && commandContext.parameterState.mselected.length === 1 && commandContext.parameterState.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1"
    },
    "att1IsSingleParamSelected": {
      "expression": "commandContext.parametersTable && commandContext.parametersTable.selectedUnderlyingObjects && commandContext.parametersTable.selectedUnderlyingObjects.length === 1 && commandContext.parametersTable.selectedUnderlyingObjects[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1"
    },
    "Att1ImportExportEngrTableEnableCond": {
      "expression": "conditions.att1IsSingleParamSelected || commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1"
    },
    "Att1ImportNewEngrTableEnableCond": {
      "expression": "conditions.Att1ImportExportEngrTableEnableCond && (!conditions.Att1IsTargetParameterElementSelected) && conditions.Att1EngrTableEditable"
    },
    "att1CopyParamProxyCommandVisible": {
      "expression": "conditions.cmdCopyCommandVisible && conditions.att1IsParamProxySelected && !conditions.disableRightWallCommandsInQuickAddMode"
    },
    "att1ShowParamProxyCommandVisible": {
      "expression": "conditions.cmdOpenBaseVisibleCondition && conditions.att1IsParamProxySelected"
    },
    "att1ShowParamProxyForReviseCommandVisible": {
      "expression": "conditions.cmdOpenBaseVisibleCondition && conditions.att1IsParamProxySelected && commandContext.vmo"
    },
    "att1OpenParamInNewTabWidePanelCmdCond": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && (commandContext.popupOptions.subPanelContext.parametersTable.getValue().isParameterWidePanelOpen === true)"
    },
    "att1OpenParamInNewTabCommandVisible": {
      "expression": "commandContext.selectionData.selected.length === 1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1"
    },
    "att1OpenParamProxyInNewWindowCommandVisible": {
      "expression": "conditions.cmdOpenInNewWindowCommandActive && conditions.att1IsParamProxySelected"
    },
    "att1OpenParamProxyInRACCommandVisible": {
      "expression": "conditions.awp0OpenInRACCommandCondition && conditions.att1IsParamProxySelected"
    },
    "Att1ShowReviseOnParamTableCommandVisible": {
      "expression": "conditions.att1IsParameterProjectOrGroupInPWA && ( commandContext.parametersTable.selectedObjects.length > 0 ) && (conditions.att1CheckEditModeIsOffForSummary || commandContext.isBulkEditing.value === false)"
    },
    "att1IsVRCreatedByProjectCond1": {
      "expression": "commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 && commandContext.openedObject.props.crt0VerificationType !== undefined && commandContext.openedObject.props.crt0VerificationType.dbValues[0] === 'Project' "
    },
    "att1SaveAsParamProxyCommandVisible": {
      "expression": "conditions.isTcReleaseAtLeast122 && conditions.att1IsSingleParamProxySelected && conditions.att1IsVRCreatedByProjectCond1 === false"
    },
    "att1ReviseParamProxyCommandVisible": {
      "expression": "conditions.isTcReleaseAtLeast122 && conditions.att1IsSingleParamProxySelected && conditions.att1IsVRCreatedByProjectCond1 === false"
    },
    "att1SaveAsParamCommandVisible": {
      "expression": "conditions.isTcReleaseAtLeast122 && commandContext.selectionData.selected.length === 1 && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1)"
    },
    "att1ReviseParamCommandVisible": {
      "expression": "conditions.isTcReleaseAtLeast122 && commandContext.selectionData.selected.length === 1 && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att1AttributeAlignmentProxy') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1)"
    },
    "att1NewWorkflowParamProxyCommandVisible": {
      "expression": "conditions.att1IsParamProxySelected && commandContext.parameterState.selectedParameters.length > 0"
    },
    "att1ParameterTableIsVisible": {
      "expression": "commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_AttributesForDCP'"
    },
    "att1ItemRevisionSelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1"
    },
    "att1ParameterFamilyObjectSelected": {
      "expression": "!conditions.parameterTableEditInProgress && (conditions.isParamProjectSelected || conditions.isParamDictionarySelected || conditions.isParamGroupSelected)"
    },
    "att1RoundTripPWACommandCondition": {
      "expression": "!conditions.parameterTableEditInProgress && (conditions.att1MultipleProductSelected || conditions.isParamProjectSelected || conditions.isParamGroupSelected || conditions.att1IsParamProxySelected || conditions.att1RoundTripParameterDefVisibility || conditions.att1ParameterTableIsVisible || conditions.isInVRContextExceptStudy)"
    },
    "att1RoundTripCommandCondition": {
      "expression": "commandContext.parametersTable === undefined && conditions.att1RoundTripPWACommandCondition"
    },
    "att1MultipleProductSelected": {
      "expression": "ctx.mselected.length > 0 && ctx.mselected[ctx.mselected.length -1].modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && ctx.Att1ShowMappedAttribute"
    },
    "att1ImportNewParamTableVisibility": {
      "expression": "conditions.isTcReleaseAtLeast122 && !conditions.parameterTableEditInProgress && ( conditions.isParamProjectSelected || conditions.isParamGroupSelected || conditions.att1IsParamProxySelected || conditions.att1RoundTripParameterDefVisibility || conditions.att1ParameterTableIsVisible || conditions.isInVRContextExceptStudy || conditions.Att1IsAwb0ElementSelected === true)"
    },
    "att1ImportParameterPWAVisiblity": {
      "expression": "conditions.isTcReleaseAtLeast122 && conditions.att1ParameterFamilyObjectSelected"
    },
    "att1ItemRevisionOwnLocationParamTableVisibility": {
      "expression": "commandContext.pageContext.primaryActiveTabId  === 'tc_xrt_AttributesForDCP'  && !conditions.att1IsParametersTableEmpty"
    },
    "att1RoundTripParameterDefVisibility": {
      "expression": "conditions.isParamDictionarySelected || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1 || (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Fnd0HomeFolder' ) > -1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0AttributeDefRevision' ))"
    },
    "att1DeleteGroupVisibility": {
      "expression": "commandContext.parameterState.selectedLeafGroups && commandContext.parameterState.selectedLeafGroups.length>0"
    },
    "att1AllSelectedAreParameterDefinition": {
      "expression": "ctx.mselected.length >= 1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Att0AttributeDefRevision') > -1 && ctx.mselected[ctx.mselected.length -1].modelType.typeHierarchyArray.indexOf('Att0AttributeDefRevision') > -1"
    },
    "att1InHomeSublocation": {
      "expression": "commandContext.baseSelection.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 || commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 || commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1"
    },
    "att1InDictionarySublocation": {
      "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1"
    },
    "att1SplitPanelContext": {
      "expression": "commandContext.pageState.splitPanelLocation !== undefined"
    },
    "arm0SplitPanelContext": {
      "expression": "ctx.requirementCtx && ctx.requirementCtx.splitPanelLocation !== undefined"
    },
    "att1RequirementsTabContext": {
      "expression": "ctx.xrtPageContext && commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_SystemRequirements'"
    },
    "att1StudyTabContext": {
      "expression": "conditions.att1StudyTabContextPre124 || conditions.att1StudyTabContextFor124"
    },
    "att1StudyTabContextPre124": {
      "expression": "ctx.xrtPageContext && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Studies' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Studies')"
    },
    "att1StudyTabContextFor124": {
      "expression": "ctx.xrtPageContext && conditions.isTcReleaseAtLeast124 && ( commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Requests' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Requests')"
    },
    "att1StudyInHomeContext": {
      "expression": "conditions.att1InHomeSublocation && ctx.pselected.modelType.typeHierarchyArray.indexOf('Crt0StudyRevision') > -1"
    },
    "att1ParameterTableIsVisibleForStudy": {
      "expression": "commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_InputForDCP'"
    },
    "att1SingleProductSelected": {
      "expression": "ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "att1AllSelectedAreParameters": {
      "expression": "ctx.mselected.length >= 1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1 && ctx.mselected[ctx.mselected.length -1].modelType.typeHierarchyArray.indexOf('Att0MeasurableAttribute') > -1"
    },
    "att1StudySelected": {
      "expression": "ctx.mselected.length > 0  && ctx.selected.modelType.typeHierarchyArray.indexOf('Crt0StudyRevision') > -1"
    },
    "att1SingleStudySelected": {
      "expression": "ctx.mselected.length === 1  && ctx.mselected[0].modelType.typeHierarchyArray.indexOf('Crt0StudyRevision') > -1"
    },
    "att1RoundTripImportStudyParameterVisibility": {
      "expression": "conditions.isTcReleaseAtLeast122 && (conditions.att1StudyInHomeContext || conditions.att1StudyTabContext) && conditions.att1SingleStudySelected"
    },
    "att1RoundTripStudyParameterVisibility": {
      "expression": "(conditions.att1StudyInHomeContext || conditions.att1StudyTabContext) && conditions.att1SingleStudySelected"
    },
    "att1RoundTripSplitTableVisibility": {
      "expression": "((conditions.att1SplitPanelContext && (conditions.att1SingleProductSelected || conditions.att1AllSelectedAreParameters )) || conditions.arm0SplitPanelContext ) && conditions.selectedParentHasWriteAccess"
    },
    "att1RoundTripSplitTableVisibilityForExport": {
      "expression": "((conditions.att1SplitPanelContext && (conditions.att1SingleProductSelected || conditions.att1AllSelectedAreParameters )) || conditions.arm0SplitPanelContext ) && conditions.selectedParentHasWriteAccess"
    },
    "att1RoundTripSplitTableVisibilityForTC122": {
      "expression": "conditions.isTcReleaseAtLeast122 && conditions.att1AllSelectedAreParameters"
    },
    "att1RoundTripRequirementParamSWATableVisibility": {
      "expression": "conditions.att1RequirementsTabContext &&  (conditions.att1SingleProductSelected || conditions.att1AllSelectedAreParameters)"
    },
    "att1InAceContext": {
      "expression": "ctx.occmgmtContext.modelObject.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "att1OnlyElementsSelectedInTreeMode": {
      "expression": "conditions.isShowChildLinesView && commandContext.parametersTable.selectedElementsFromProxy.length > 0 && commandContext.parametersTable.selectedObjects.length === commandContext.parametersTable.selectedElementsFromProxy.length"
    },
    "att1setFreezePointCommandVisibilityCond": {
      "expression": "conditions.isTcReleaseAtLeast123 && conditions.att1InAceContext &&  (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 || conditions.att1OnlyElementsSelectedInTreeMode ) && ( commandContext.occContext.rootElement.modelType.typeHierarchyArray.indexOf( 'Att1ParameterPrjElement' ) > -1 || commandContext.occContext.rootElement.modelType.typeHierarchyArray.indexOf( 'Ase0LogicalElement' ) > -1 || commandContext.occContext.rootElement.modelType.typeHierarchyArray.indexOf( 'Arm0RequirementElement' ) > -1 || commandContext.occContext.rootElement.modelType.typeHierarchyArray.indexOf( 'Arm0RequirementSpecElement' ) > -1 ) && conditions.projectModelNotSelected && !ctx.aceActiveContext.context.supportedFeatures['Awb0RevisibleOccurrenceFeature']"
    },
    "projectModelNotSelected": {
      "expression": "ctx.occmgmtContext.modelObject.modelType.typeHierarchyArray.indexOf('Uml1ModelElement') === -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Uml1ModelElement' ) === -1"
    },
    "itemRevisionIsModifiableForDataSetParamTable": {
      "expression": "(conditions.att1InHomeSublocation && commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && commandContext.selectionData.pselected.props.is_modifiable.dbValues[0] === '1') || (conditions.att1ItemRevisionOwnLocationParamTableVisibility && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && commandContext.openedObject.props.is_modifiable.dbValues[0] === '1')"
    },
    "selectedParentHasWriteAccess": {
      "expression": "((commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && commandContext.openedObject.props.is_modifiable.dbValues[0] === '1') || commandContext.parametersTable.selectedParentsAreModifiable === true) && conditions.att1IsInContextOfAR === false"
    },
    "att1ReviseReplaceVisibilityCond": {
      "expression": "!conditions.att1HasSelectionInParametersTable && conditions.parameterTableEditInProgress && !conditions.att1IsInContextOfAR && !conditions.isParamProjectSelected && !conditions.isParamGroupSelected && ( ctx.selected.modelType.typeHierarchyArray.indexOf('Wnb0MassMeasurableAttribute') > -1 || ( conditions.att1ReviseReplaceForProduct || conditions.att1ReviseReplaceForItemRevision ) )"
    },
    "att1ReviseReplaceForProduct": {
      "expression": "conditions.isTcReleaseAtLeast123 && ctx.mselected.length > 0 && conditions.selectedParentHasWriteAccess && (ctx.selectedAttrProxyObjects.length > 0 || ctx.selectedProxyObjects.length > 0 )"
    },
    "att1ReviseReplaceForItemRevision": {
      "expression": "conditions.isTcReleaseAtLeast123 && ctx.mselected.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && conditions.itemRevisionIsModifiableForDataSetParamTable"
    },
    "replaceParamRevisionCmdVisibility": {
      "expression": "!conditions.parameterTableEditInProgress && conditions.selectedParentHasWriteAccess && commandContext.parametersTable.selectedObjects.length===1 && (conditions.replaceParamRevisionForForProduct || conditions.replaceParamRevisionForItemRevision)"
    },
    "att1SetInputDirectionVisibilityCond": {
      "expression": "!conditions.att1HasSelectionInParametersTable && conditions.isTcReleaseAtLeast131 && conditions.selectedParentHasWriteAccess && !conditions.parameterTableEditInProgress && !conditions.att1IsInContextOfAR && (conditions.att1SetInputDirectionVisibilityForItemRevCond || conditions.att1SetInputDirectionVisibilityForACECond)"
    },
    "att1SetInputDirectionVisibilityForItemRevCond": {
      "expression": "((ctx.mselected.length === 1 && ctx.mselected[0].props.att1Direction.dbValue !== 'input') || ctx.mselected.length > 1) && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1"
    },
    "att1SetInputDirectionVisibilityForACECond": {
      "expression": "conditions.Att1IsAwb0ElementSelected && ctx.mselected.length > 0 && (conditions.att1InputDirectionMultipleParentVisibilityCond || conditions.att1InputDirectionSingleParentVisibilityCond)"
    },
    "att1InputDirectionSingleParentVisibilityCond": {
      "expression": "(ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length > 1 )|| (ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length === 1 && ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters[0].props.att1AttrInOut.dbValue != 'input')"
    },
    "att1InputDirectionMultipleParentVisibilityCond": {
      "expression": "(ctx.selectedProxyObjects.length > 1) || (ctx.selectedProxyObjects.length === 1 && ctx.selectedProxyObjects[0].props.att1AttrInOut.dbValue !== 'input')"
    },
    "att1SetOutputDirectionVisibilityCond": {
      "expression": "!conditions.att1HasSelectionInParametersTable && conditions.isTcReleaseAtLeast131 && conditions.selectedParentHasWriteAccess && !conditions.parameterTableEditInProgress && !conditions.att1IsInContextOfAR && (conditions.att1SetOutputDirectionVisibilityForItemRevCond  || conditions.att1SetOutputDirectionVisibilityForACECond)"
    },
    "att1SetOutputDirectionVisibilityForItemRevCond": {
      "expression": "((ctx.mselected.length === 1 && ctx.mselected[0].props.att1Direction.dbValue !== 'output') || ctx.mselected.length > 1) && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1"
    },
    "att1SetOutputDirectionVisibilityForACECond": {
      "expression": "conditions.Att1IsAwb0ElementSelected && ctx.mselected.length > 0 && (conditions.att1OutputDirectionMultipleParentVisibilityCond || conditions.att1OutputDirectionSingleParentVisibilityCond)"
    },
    "att1OutputDirectionSingleParentVisibilityCond": {
      "expression": "(ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length > 1 )|| (ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length === 1 && ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters[0].props.att1AttrInOut.dbValue != 'output')"
    },
    "att1OutputDirectionMultipleParentVisibilityCond": {
      "expression": "(ctx.selectedProxyObjects.length > 1) || (ctx.selectedProxyObjects.length === 1 && ctx.selectedProxyObjects[0].props.att1AttrInOut.dbValue !== 'output')"
    },
    "att1SetUnusedDirectionVisibilityCond": {
      "expression": "!conditions.att1HasSelectionInParametersTable && conditions.isTcReleaseAtLeast131 && conditions.selectedParentHasWriteAccess && !conditions.parameterTableEditInProgress && !conditions.att1IsInContextOfAR && (conditions.att1SetUnusedDirectionVisibilityForItemRevCond || conditions.att1SetUnusedDirectionVisibilityForACECond)"
    },
    "att1SetUnusedDirectionVisibilityForItemRevCond": {
      "expression": "((ctx.mselected.length === 1 && ctx.mselected[0].props.att1Direction.dbValue != 'unused') || ctx.mselected.length > 1) && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1"
    },
    "att1SetUnusedDirectionVisibilityForACECond": {
      "expression": "conditions.Att1IsAwb0ElementSelected && ctx.mselected.length > 0 && (conditions.att1UnusedDirectionMultipleParentVisibilityCond || conditions.att1UnusedDirectionSingleParentVisibilityCond)"
    },
    "att1UnusedDirectionSingleParentVisibilityCond": {
      "expression": "(ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length > 1 )|| (ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters.length === 1 && ctx.parammgmtctx.parameterTableCtx.selectedProxyParameters[0].props.att1AttrInOut.dbValue != 'unused')"
    },
    "att1UnusedDirectionMultipleParentVisibilityCond": {
      "expression": "(ctx.selectedProxyObjects.length > 1) || (ctx.selectedProxyObjects.length === 1 && ctx.selectedProxyObjects[0].props.att1AttrInOut.dbValue !== 'unused')"
    },
    "att1SetInputParametersTableCondition": {
      "expression": "conditions.att1EnableSetDirection && conditions.selectedParentHasWriteAccess && !conditions.att1IsInContextOfAR && conditions.att1SetInputVisibilityCond && !conditions.att1CheckEditModeIsOnForSummary && commandContext.parametersTable.selectedElementsFromProxy.length === 0"
    },
    "att1SetInputVisibilityCond": {
      "expression": "(commandContext.parametersTable.selectedObjects.length === 1 && commandContext.parametersTable.selectedObjects[0].props.att1AttrInOut.dbValue !== 'input') || commandContext.parametersTable.selectedObjects.length > 1"
    },
    "att1SetOutputParametersTableCondition": {
      "expression": "conditions.att1EnableSetDirection && conditions.selectedParentHasWriteAccess && !conditions.att1IsInContextOfAR && conditions.att1SetOutputVisibilityCond && !conditions.att1CheckEditModeIsOnForSummary && commandContext.parametersTable.selectedElementsFromProxy.length === 0"
    },
    "att1SetOutputVisibilityCond": {
      "expression": "(commandContext.parametersTable.selectedObjects.length === 1 && commandContext.parametersTable.selectedObjects[0].props.att1AttrInOut.dbValue !== 'output') || commandContext.parametersTable.selectedObjects.length > 1"
    },
    "att1SetUnusedParametersTableCondition": {
      "expression": "conditions.att1EnableSetDirection && conditions.selectedParentHasWriteAccess && !conditions.att1IsInContextOfAR && conditions.att1SetUnusedVisibilityCond && !conditions.att1CheckEditModeIsOnForSummary && commandContext.parametersTable.selectedElementsFromProxy.length === 0"
    },
    "att1SetUnusedVisibilityCond": {
      "expression": "(commandContext.parametersTable.selectedObjects.length === 1 && commandContext.parametersTable.selectedObjects[0].props.att1AttrInOut.dbValue !== 'unused') || commandContext.parametersTable.selectedObjects.length > 1"
    },
    "att1disableArrangeCond": {
      "expression": "(conditions.Att1IsInlineAuthoringMode  || conditions.att1CheckEditModeIsOnForSummary) && commandContext.gridId === 'uniformParamTable'"
    },
    "att1HasSelectionInParametersTable": {
      "expression": "commandContext.parametersTable.selectedObjects.length > 0"
    },
    "isTcReleaseAtLeast131": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 13 || ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 1"
    },
    "replaceParamRevisionForProjectorGroup": {
      "expression": "conditions.isTcReleaseAtLeast123 && ctx.mselected.length === 1 && commandContext.parameterState.selectedProxyParams.length > 0 && conditions.Att1NotAROpen === true && ctx.parammgmtctx.parameterTableCtx.parameterSelectedInPramProjectContext &&  conditions.selectedParentHasWriteAccess && (conditions.isParamProjectSelected === true || conditions.isParamGroupSelected === true)"
    },
    "replaceParamRevisionForForProduct": {
      "expression": "conditions.isTcReleaseAtLeast123 && ctx.mselected.length === 1 && conditions.selectedParentHasWriteAccess"
    },
    "replaceParamRevisionForItemRevision": {
      "expression": "conditions.isTcReleaseAtLeast123 && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1 && conditions.itemRevisionIsModifiableForDataSetParamTable"
    },
    "showParameterVariantsToggleCmdVisibility": {
      "expression": "conditions.isTcReleaseAtLeast124 && !ctx.selected.uid.endsWith('AWB4GD') && ctx.occmgmtContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && ctx.visibleServerCommands.Att1ShowParameterVariantsToggleCmd === true && ctx.isVariantTableEditing !== true"
    },
    "showParameterVariantsToggleCmdSelectedVisibility": {
      "expression": "conditions.showParameterVariantsToggleCmdVisibility === true && commandContext.subPanelContext.context.occContext.persistentRequestPref.showParametersOnVC === true"
    },
    "att1ActivePasteInDictionaryCond": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0ParamDictionary"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "att1PasteInDictionaryVisibilityCond": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.selectionData.selected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "commandContext.selectionData.selected",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0ParamDictionary"
                  ]
                }
              }
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Att0AttributeDefRevision"
                ]
              }
            }
          }
        ]
      }
    },
    "addParameterVisibilityCondForVR": {
      "expression": "ctx.visibleServerCommands.Crt1AddToVerificationRequest === true && (conditions.att1IsInContextOfAR === true && ctx.mselected.length === 1) && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Content' ) || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Contents' && ctx.xrtSummaryContextObject.props.crt0Domain && ctx.xrtSummaryContextObject.props.crt0Domain.isPropertyModifiable === true)"
    },
    "att1HideAwp0ExportToExcelCommandCondition": {
      "expression": "conditions.isDictionaryContext || conditions.att1ParameterTableIsVisible || conditions.att1InDictionarySublocation"
    },
    "att1MultiSelectObjectSetEnableCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && !commandContext.reusable && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > -1 && !commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()"
    },
    "att1MultiSelectObjectSetDisableCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && !commandContext.reusable && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > -1 && commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()"
    },
    "att1MultiSelectReusableParamTableDisableCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && commandContext.reusable && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > -1 && commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()"
    },
    "att1MultiSelectReusableParamTableEnableCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && commandContext.reusable && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > -1 && !commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()"
    },
    "att1SelectAllObjectSetCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > -1 && commandContext.dataProvider.selectionModel.getCanExecuteSelectLoaded()"
    },
    "att1DeselectAllObjectSetCondition": {
      "expression": "commandContext.parametersTable.disabledCommands.selection === undefined && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0 && commandContext.dataProvider.selectionModel.getCanExecuteDeselect()"
    },
    "att1StartEditParametersTableCondition": {
      "expression": "conditions.att1EnableEditParameters && conditions.att1CheckEditModeIsOffForTableAndSummaryAndACE && conditions.Att1NotInlineAuthoringMode"
    },
    "att1EnableStartEditParamTableCondition": {
      "expression": "!(commandContext.parametersTable.selectedUnderlyingObjects.length === 1 && commandContext.parametersTable.selectedUnderlyingObjects[0].props.is_modifiable.dbValues[0] === '0') && conditions.att1IsParamTableNonEmpty"
    },
    "att1SaveEditParametersTableCondition": {
      "expression": "conditions.att1EnableEditParameters && conditions.att1CheckEditModeIsOnForSummary && conditions.Att1NotInlineAuthoringMode"
    },
    "att1CutInlineParameterCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableRemoveInlineParameters",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.dataProvider.selectedObjects",
            "$query": {
              "$all": {
                "$source": "isInlineRow",
                "$query": {
                  "$eq": true
                }
              }
            }
          }
        ]
      }
    },
    "att1CutParameterCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableRemoveParameters",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.att1CheckEditModeIsOnForSummary",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1IsInContextOfAR",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.selectedParentHasWriteAccess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1OnlyOverriddenParameterSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.showAttrUnMapVisibleCondUniformTable",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0MeasurableAttribute"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1DeleteOccParameterCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableRemoveParameters",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1IsInContextOfAR",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.selectedParentHasWriteAccess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1OnlyNonOverriddenParameterSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.showAttrUnMapVisibleCondUniformTable",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0MeasurableAttribute"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1OnlyOverriddenParameterSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects",
            "$query": {
              "$all": {
                "$source": "props.att1InContext.dbValues",
                "$query": {
                  "$in": [
                    "1"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1OnlyNonOverriddenParameterSelected": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects",
            "$query": {
              "$all": {
                "$source": "props.att1InContext.dbValues",
                "$query": {
                  "$in": [
                    "0"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1DeleteParameterConditionOld": {
      "expression": "conditions.att1EnableDeleteParameters && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0 && conditions.att1IsInContextOfAR === false && conditions.selectedParentHasWriteAccess && commandContext.parametersTable.selectedObjects.length > 0"
    },
    "att1DeleteParameterConditionAll": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.att1DeleteParameterFromTableCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "att1DeleteParameterFromPWACondition": {
      "expression": "conditions.Att1RemoveMeasurableAttrFromItemRev && conditions.isParentParamDefRevision === false && conditions.Att1InParamProjectSublocation && commandContext.parameterState.selectedProxyParams.length >= 1 && commandContext.parameterState.selectedProxyParams[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasurableAttribute' ) > -1"
    },
    "att1DeleteParameterFromTableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableDeleteParameters",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.att1CheckEditModeIsOnForSummary",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1IsInContextOfAR",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.selectedParentHasWriteAccess",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "conditions.att1OnlyOverriddenParameterSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.showAttrUnMapVisibleCondUniformTable",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "commandContext.parametersTable.selectedUnderlyingObjects",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Att0MeasurableAttribute"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "att1SingleProxySelectedInTreeModeCondition": {
      "expression": "conditions.isShowChildLinesView && commandContext.parametersTable.parentObjects.length === 1 && (commandContext.parametersTable.selectedObjects === undefined || commandContext.parametersTable.selectedObjects.length <= 1)"
    },
    "att1PasteParameterCondition": {
      "expression": "((conditions.isTcReleaseAtLeast131 && ((conditions.isHideChildLinesView && commandContext.parametersTable.parentObjects.length === 1) || conditions.att1SingleProxySelectedInTreeModeCondition )) || (!conditions.isTcReleaseAtLeast131 && conditions.selectedParentHasWriteAccess )) && conditions.att1EnablePasteParameters && conditions.att1IsInContextOfAR === false && conditions.clipBoardContainsParameter && !conditions.att1CheckEditModeIsOnForSummary"
    },
    "att1CopyAndPasteParameterPWACondition": {
      "expression": "conditions.att1PasteParameterCondition && ((commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Att1AttributeAlignmentProxy' ) > -1 && conditions.Att1InParamProjectSublocation))"
    },
    "att1ActiveAddParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.add === undefined"
    },
    "att1EnableAddParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.add === undefined && conditions.att1CheckEditModeIsOffForSummary"
    },
    "att1EnableDeleteParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.delete === undefined"
    },
    "att1EnableEditParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.edit === undefined && commandContext.parametersTable.canStartEdit === true"
    },
    "att1ActiveExportParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.export === undefined && conditions.isHideChildLinesView"
    },
    "att1EnableExportParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.export === undefined && conditions.att1CheckEditModeIsOffForSummary"
    },
    "att1EnableImportParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.import === undefined && conditions.att1CheckEditModeIsOffForSummary"
    },
    "att1EnablePasteParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.paste === undefined"
    },
    "att1EnableRemoveParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.remove === undefined && !conditions.Att1IsInlineAuthoringMode"
    },
    "att1EnableRemoveInlineParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.remove === undefined && conditions.Att1IsInlineAuthoringMode"
    },
    "att1IsParameterProjectOrGroupInACE": {
      "expression": "commandContext.occContext && commandContext.occContext.selectedModelObjects.length > 0 && ( commandContext.occContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf( 'Att1ParameterPrjElement' ) > -1 || commandContext.occContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf( 'Att1ParameterSetElement' ) > -1 )"
    },
    "att1IsParameterProjectOrGroupInNonACE": {
      "expression": "(commandContext.selectionData && (commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Att0ParameterPrjRevision') > -1 || commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Att0ParameterSetRevision') > -1))  || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0ParameterPrjRevision') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0ParameterSetRevision') > -1"
    },
    "att1IsParameterProjectOrGroupInPWA": {
      "expression": "conditions.att1IsParameterProjectOrGroupInNonACE || conditions.att1IsParameterProjectOrGroupInACE"
    },
    "att1IsProjOrSetOpenInRichClientVisible": {
      "expression": "conditions.att1IsParameterProjectOrGroupInNonACE || (conditions.isACEOpenInRACDelegateActive &&  conditions.att1IsParameterProjectOrGroupInACE)"
    },
    "att1InContextOfParameterProjectOrGroup": {
      "expression": "conditions.att1IsParameterProjectOrGroupInPWA || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0ParameterPrj') > -1 || commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Att0ParameterSet') > -1 "
    },
    "att1EnableReplaceParameters": {
      "expression": "conditions.isTcReleaseAtLeast123 && commandContext.parametersTable.disabledCommands.replace === undefined && !conditions.att1IsInContextOfAR &&  !conditions.att1IsParameterProjectOrGroupInNonACE && conditions.att1IsNotParameterProjectOrSet"
    },
    "att1IsNotParameterProjectOrSet": {
      "expression": "commandContext.selected.type !== 'Att0ParameterPrjRevision' && commandContext.selected.type !== 'Att0ParameterSetRevision'"
    },
    "att1EnableSetDirection": {
      "expression": "conditions.isTcReleaseAtLeast131 && commandContext.parametersTable.disabledCommands.setDirection === undefined && !conditions.att1IsInContextOfAR"
    },
    "att1AddParameterCondition": {
      "expression": "((conditions.att1SingleProxySelectedInTreeModeCondition || (conditions.isHideChildLinesView && commandContext.parametersTable.parentObjects.length === 1)) && conditions.att1EnableAddParameters)"
    },
    "att1AddParameterValueCondition": {
      "expression": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0 && conditions.att1EnableAddParameters && conditions.selectedParentHasWriteAccess &&  commandContext.parametersTable.selectedObjects.length >= 1 && commandContext.parametersTable.selectedElementsFromProxy.length === 0"
    },
    "att1DisableRoundTripforMultiSelectCommandCondition": {
      "expression": "commandContext.pageContext.primaryXrtPageID === 'tc_xrt_Trends' && commandContext.selectionData.selected.length > 1"
    },
    "att1RoundTripUniformTableCondition": {
      "expression": "conditions.att1EnableExportParameters && conditions.isHideChildLinesView && !conditions.att1DisableRoundTripforMultiSelectCommandCondition"
    },
    "att1ImportNewUniformTableVisibility": {
      "expression": "conditions.att1EnableImportParameters && commandContext.parametersTable.parentObjects.length === 1 && !conditions.att1MultipleProductSelected && conditions.isHideChildLinesView && !conditions.att1DisableRoundTripforMultiSelectCommandCondition"
    },
    "att1ImportNewUniformTableActive": {
      "expression": "commandContext.parametersTable.disabledCommands.import === undefined && commandContext.parametersTable.parentObjects.length === 1 && !conditions.att1MultipleProductSelected"
    },
    "att1ReviseReplaceParametersCondition": {
      "expression": "conditions.att1EnableReplaceParameters && conditions.att1HasSelectionInCommandContext && commandContext.parametersTable.selectedObjects.length > 0  && !conditions.att1IsInContextOfAR && !conditions.isParamProjectSelected && !conditions.isParamGroupSelected && !conditions.att1IsParameterProjectOrGroupInNonACE && !conditions.att1CheckEditModeIsOnForSummary && (conditions.selectedParentHasWriteAccess || conditions.itemRevisionIsModifiableForDataSetParamTable)"
    },
    "att1ReplaceParamRevisionCmdCondition": {
      "expression": "conditions.att1EnableReplaceParameters && conditions.att1HasSelectionInCommandContext && commandContext.parametersTable.selectedObjects.length > 0 && !conditions.att1IsInContextOfAR && !conditions.isParamProjectSelected && !conditions.isParamGroupSelected && (conditions.selectedParentHasWriteAccess || conditions.itemRevisionIsModifiableForDataSetParamTable)"
    },
    "att1HasSelectionInCommandContext": {
      "expression": "commandContext.selectedObjects.length > 0 || commandContext.dataProvider.selectedObjects.length > 0"
    },
    "att1IsParametersTableEmpty": {
      "expression": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length === 0"
    },
    "att1IsParamTableNonEmpty": {
      "expression": "!conditions.att1IsParametersTableEmpty"
    },
    "att1IsShowChildrenParamsSelected": {
      "expression": "commandContext.parametersTable.options.showFromChildren===true && conditions.att1EnableShowFromChildren"
    },
    "att1EnableShowFromChildren": {
      "expression": "commandContext.parametersTable.disabledCommands.showFromChildren === undefined"
    },
    "att1ActiveShowFromChildren": {
      "expression": "conditions.att1EnableShowFromChildren && conditions.isHideChildLinesView"
    },
    "att1EnableManageMeasurements": {
      "expression": "conditions.isTcReleaseAtLeast133 && commandContext.parametersTable.disabledCommands.manageMeasurements === undefined"
    },
    "att1EnableShowFromChildrenCond": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.att1EnableShowFromChildren",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isHideChildLinesView",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.att1CheckEditModeIsOffForSummary",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "Att1IsTargetParameterElementSelected": {
      "expression": "conditions.Att1IsCompareModeOn && commandContext.parametersTable.selectedObjects && commandContext.parametersTable.selectedObjects.length >0 && commandContext.parametersTable.selectedObjects[0].props.att1Parent && commandContext.parametersTable.selectedObjects[0].props.att1Parent.dbValues[ 0 ] !=='' "
    },
    "att1EnableMappingParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.map === undefined && conditions.att1CheckEditModeIsOffForSummary && commandContext.parametersTable.parametersTableViewMode.viewModeContext !== 'showChildLines'"
    },
    "att1ActiveMappingParameters": {
      "expression": "commandContext.parametersTable.disabledCommands.map === undefined"
    },
    "att1EnableDuplicateMeasurement": {
      "expression": "conditions.Att1AttachMeasurementEngrTableCond && conditions.att1EnableStartEditParamTableCondition"
    },
    "Att1EditMeasurementTableCond": {
      "expression": "conditions.att1EnableStartEditParamTableCondition && !conditions.Att1IsTargetParameterElementSelected"
    },
    "Att1AttachMeasurementEngrTableCond": {
      "expression": "conditions.att1IsMeasuredValueSelectedInTable && conditions.measurementTableEditNotInProgress && conditions.att1EnableStartEditParamTableCondition && !conditions.Att1IsTargetParameterElementSelected"
    },
    "Att1ShowRangeSelected": {
      "expression": "(commandContext.engrTable.goalTable.showRange === true && commandContext.pageContext.primaryXrtPageID != 'tc_xrt_MeasurementsTab') || commandContext.engrTable.valueTable.showRange === true"
    },
    "att1ShowGoalVisibility": {
      "expression": "conditions.att1IsMeasuredValueSelectedInTable && !conditions.Att1InGoalTable"
    },
    "att1ShowGoalRangeEnabled": {
      "expression": "commandContext.engrTable.goalTable.isEditing !== true && commandContext.engrTable.valueTable.isEditing !== true"
    },
    "att1IsMeasuredValueSelectedInTable": {
      "expression": "commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0 && commandContext.dataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'Att0MeasureValue' ) > -1"
    },
    "Att1ShowGoalSelected": {
      "expression": "commandContext.engrTable.valueTable.showGoal === true"
    },
    "Att1RowSelectedCond": {
      "expression": "commandContext.engrTable.goalTable.selectedCell.length > 0 && commandContext.engrTable.goalTable.selectedCell[0].cellType === 'row' && conditions.Att1EngrTableEditable"
    },
    "Att1ColumnSelectedCond": {
      "expression": "commandContext.engrTable.goalTable.selectedCell.length > 0 && commandContext.engrTable.goalTable.selectedCell[0].cellType === 'column' && conditions.Att1EngrTableEditable"
    },
    "Att1ColumnOrSeriesSelectedCond": {
      "expression": "conditions.Att1EngrTableEditable && commandContext.engrTable.goalTable.selectedCell.length > 0 && ((commandContext.engrTable.goalTable.selectedCell[0].cellType === 'column' && commandContext.engrTable.goalTable.selectedCell[0].editable === true && commandContext.engrTable.goalTable.selectedCell[0].series === undefined) || commandContext.engrTable.goalTable.selectedCell[0].cellType === 'series')"
    },
    "Att1RowOrColumnSelectedCond": {
      "expression": "conditions.Att1RowSelectedCond || conditions.Att1ColumnSelectedCond"
    },
    "Att1CellSelectedCond": {
      "expression": "conditions.Att1IsEngrTableCommandEnabled && conditions.Att1IsSelectedParameterModifiableForComplexData && (commandContext.engrTable.goalTable.selectedCell.length > 0 || commandContext.engrTable.valueTable.selectedCell.length > 0)"
    },
    "Att1IsEnableColumnFillCommand": {
      "expression": "commandContext.engrTable.isEnableColumnFillCommand===true"
    },
    "Att1SeriesSelectedCond": {
      "expression": "commandContext.engrTable.goalTable.selectedCell.length === 1 && commandContext.engrTable.goalTable.selectedCell[0].cellType === 'series' && conditions.Att1EngrTableEditable"
    },
    "Att1InsertColumnLeftCond": {
      "expression": "conditions.Att1ColumnSelectedCond && commandContext.engrTable.goalTable.selectedCell[0].index !== 0"
    },
    "Att1InsertRowSeriesCond": {
      "expression": "(conditions.Att1RowSelectedCond || conditions.Att1ColumnSelectedCond && commandContext.engrTable.goalTable.selectedCell[0].index === 0) && commandContext.engrTable.tableModel.tableData.hasRowHeaders !== true"
    },
    "Att1DeleteInEngrTableCond": {
      "expression": "conditions.Att1SelectionCond || conditions.Att1SeriesSelectedCond"
    },
    "Att1IsClearContentEnabledCond": {
      "expression": "conditions.Att1DeleteInEngrTableCond && conditions.isClearContentsAllowed"
    },
    "Att1EnableInsertColumnCond": {
      "expression": "conditions.Att1ColumnSelectedCond"
    },
    "Att1SeriesEnabledCondition": {
      "expression": "conditions.Att1ColumnSelectedCond && !commandContext.engrTable.tableModel.hasSeriesSpan && commandContext.engrTable.goalTable.selectedCell[0].index !== 0"
    },
    "Att1NotValueGoalOrRange": {
      "expression": "conditions.Att1InGoalTable || !(commandContext.engrTable.valueTable.showRange || commandContext.engrTable.valueTable.showGoal)"
    },
    "Att1PasteCellsCond": {
      "expression": "conditions.Att1CellSelectedCond && ctx.awClipBoardProvider.length > 0 && ctx.awClipBoardProvider[0].engrTableCells && conditions.Att1EngrTableEditable && conditions.Att1NotValueGoalOrRange"
    },
    "Att1EngrTableEditable": {
      "expression": "commandContext.engrTable.tableModel.readOnly !== true && conditions.att1EnableStartEditParamTableCondition && !conditions.Att1IsTargetParameterElementSelected && conditions.Att1IsEngrTableCommandEnabled && conditions.Att1IsSelectedParameterModifiableForComplexData"
    },
    "Att1InGoalTable": {
      "expression": "commandContext.engrTable.tableModel.tableName === 'goalTable'"
    },
    "Att1CutInEngrTableCond": {
      "expression": "conditions.Att1CellSelectedCond && conditions.Att1EngrTableEditable && conditions.Att1NotValueGoalOrRange"
    },
    "Att1SelectionCond": {
      "expression": "conditions.Att1CellSelectedCond && !conditions.Att1SeriesSelectedCond && conditions.Att1EngrTableEditable"
    },
    "isClearContentsAllowed": {
      "expression": "(commandContext.engrTable.goalTable.selectedCell.length > 0 || (commandContext.engrTable.valueTable.selectedCell.length > 0 && commandContext.engrTable.valueTable.selectedCell[0].index==='Measurement'))"
    },
    "Att1UndoEngrTableCond": {
      "expression": "(conditions.Att1InGoalTable && commandContext.engrTable.goalTable.undo === true || !conditions.Att1InGoalTable && commandContext.engrTable.valueTable.undo === true) && conditions.Att1EngrTableEditable && conditions.Att1IsEngrTableCommandEnabled"
    },
    "Att1IsInlineAuthoringMode": {
      "expression": "ctx.ParameterTableEditContext.inlineAuthoringContext.isInlineAuthoringMode === true"
    },
    "Att1NotInlineAuthoringMode": {
      "expression": "ctx.ParameterTableEditContext.inlineAuthoringContext.isInlineAuthoringMode !== true"
    },
    "Att1InlineSaveCond": {
      "expression": "conditions.Att1IsInlineAuthoringMode && commandContext.parametersTable.requestId === ctx.ParameterTableEditContext.requestId"
    },
    "Att1InlineAuthoringCommandCond": {
      "expression": "conditions.Att1InlineSaveCond || (conditions.Att1NotInlineAuthoringMode && conditions.att1AddParameterCondition && !conditions.isShowChildLinesView)"
    },
    "disableRightWallCommandsInQuickAddMode": {
      "expression": "commandContext.selectionData.selected[0].isDummyParamSelected === true && commandContext.selectionData.selected[0].type === 'Att1AttributeAlignmentProxy' "
    }
  },
  "messages": {
    "singleParamSetToDefaultUsage": {
      "messageType": "INFO",
      "messageText": "{{i18n.SingleParamSetDefaultUsage}}",
      "messageTextParams": [
        "{{data.paramNames}}",
        "{{data.defaultUsage}}"
      ]
    },
    "multipleParamSetToDefaultUsage": {
      "messageType": "INFO",
      "messageText": "{{i18n.MultipleParamSetDefaultUsage}}",
      "messageTextParams": [
        "{{data.paramNames}}",
        "{{data.defaultUsage}}"
      ]
    },
    "singleObjDeleteCmdConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleObjDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{commandContext.selectionData.selected[0].props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "initiateDeleteCommandAction"
        }
      ]
    },
    "multipleObjsDeleteCmdConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{commandContext.selectionData.selected.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "initiateDeleteCommandAction"
        }
      ]
    },
    "singleCutOrCancelCmdConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
      "messageTextParams": [
        "{{commandContext.selectionData.selected[0].props.object_string.uiValues[0]}}",
        "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "Cut",
          "text": "{{i18n.Awp0CutTitle}}",
          "action": "cutSecondaryFromElement"
        },
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        }
      ]
    },
    "multipleCutOrCancelCmdConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteMultipleFailureMessage}}",
      "expression": {
        "totalRemainToDelete": "objectsFailedToDelete.totalRemainToDelete",
        "totalSelected": "objectsFailedToDelete.totalSelected",
        "message": "objectsFailedToDelete.message"
      },
      "messageTextParams": [
        "{{expression.totalRemainToDelete}}",
        "{{expression.totalSelected}}",
        "{{expression.message}}"
      ],
      "messageData": {
        "partialErrors": "{{data.deleteObjectsPartialErrors}}"
      },
      "navigationOptions": [
        {
          "option": "Cut",
          "text": "{{i18n.Awp0CutTitle}}",
          "action": "cutSecondaryFromElement"
        },
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": "refreshSelectedObject"
        }
      ]
    },
    "breakMappingConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.breakMappingConfirmationMsg}}",
      "messageTextParams": [
        "{{data.deleteMappingInput.inputObjectNames[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.unMap}}",
          "action": "deleteMapping"
        }
      ]
    },
    "breakMappingConfirmationMessageMultiple": {
      "messageType": "WARNING",
      "messageText": "{{i18n.breakMappingConfirmationMsgMultiple}}",
      "messageTextParams": [
        "{{data.deleteMappingInput.inputObjects.length}}",
        "{{data.deleteMappingInput.totalSelected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.unMap}}",
          "action": "deleteMapping"
        }
      ]
    },
    "AttrEditFailure": {
      "messageType": "INFO",
      "messageText": "{{i18n.ignoreSaveNotOverridableAttrsInContext}}",
      "messageTextParams": [
        "null"
      ]
    },
    "paramFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "AttrEditFailureForOutputAttr": {
      "messageType": "INFO",
      "messageText": "{{i18n.ignoreSavePropsForOutputAttrs}}",
      "messageTextParams": [
        "null"
      ]
    },
    "singleSubmitToWorkflowSuccess": {
      "messageType": "INFO",
      "messageText": "{{i18n.singleSubmitToWorkflowSuccess}}",
      "messageTextParams": [
        "{{commandContext.selectionModel.selectionData.selected[0].props.object_string.dbValues[0]}}"
      ]
    },
    "submitToWorkflowSuccess": {
      "messageType": "INFO",
      "messageText": "{{i18n.submitToWorkflowSuccess}}",
      "messageTextParams": [
        "{{commandContext.selectionModel.selectionData.selected.length}}"
      ]
    },
    "inContextConfirmationOnDelete": {
      "messageType": "WARNING",
      "messageText": "{{i18n.inContextConfirmationOnDelete}}",
      "messageTextParams": [
        "{{data.getObjectNamesReturn.objectNames}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Delete}}",
          "action": "startDelete"
        }
      ]
    },
    "deleteObjectConfirmation": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteObjectConfirmation}}",
      "messageTextParams": [
        "{{data.getObjectNamesReturn.objectNames}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Delete}}",
          "action": "startDelete"
        }
      ]
    },
    "autoMappingConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.autoMappingConfirmationMsg}}",
      "messageTextParams": [
        "{{commandContext.selection[0].props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "Automap",
          "text": "{{i18n.autoMapAttributes}}",
          "action": "automapSelectedAttributes"
        }
      ]
    },
    "singleGroupDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{commandContext.parameterState.selectedLeafGroups[0].props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "Att1PerformDeleteGroup"
        }
      ]
    },
    "multipleGroupDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.multipleDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{commandContext.parameterState.selectedLeafGroups.length}}",
        "{{commandContext.parametersTable.selectedUnderlyingObjects.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "Att1PerformDeleteGroup"
        }
      ]
    },
    "deleteGroupSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.deleteSuccessMessage}}",
      "messageTextParams": [
        "{{commandContext.parameterState.selectedLeafGroups.length}}",
        "{{commandContext.parametersTable.selectedUnderlyingObjects.length}}"
      ]
    },
    "reviseReplaceSingleConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.reviseAndReplaceSingleConfMessage}}",
      "messageTextParams": [
        "{{commandContext.parametersTable.selectedUnderlyingObjects[0].props.object_name.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "ReviseAndReplace",
          "text": "{{i18n.reviseAndReplaceTitle}}",
          "action": "executeReviseAndReplace"
        }
      ]
    },
    "reviseReplaceMultipleConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.reviseAndReplaceMultipleConfMessage}}",
      "messageTextParams": [
        "{{commandContext.parametersTable.selectedUnderlyingObjects.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "ReviseAndReplace",
          "text": "{{i18n.reviseAndReplaceTitle}}",
          "action": "executeReviseAndReplace"
        }
      ]
    },
    "deleteParameter12xConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{data.warningConfirmationMessage}}",
      "messageTextParams": [],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Proceed}}",
          "action": "deleteParameters"
        }
      ]
    },
    "removeParameter12xConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{data.warningConfirmationMessage}}",
      "messageTextParams": [],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Proceed}}",
          "action": "cutParameters"
        }
      ]
    },
    "removeOverrideParameter12xConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{data.warningConfirmationMessage}}",
      "messageTextParams": [],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Proceed}}",
          "action": "removeOverrideParameters"
        }
      ]
    },
    "deleteInContextParameter12xConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.inContextConfirmationOnDelete}}",
      "messageTextParams": [
        "{{data.selectedParameterNames}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Cancel}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.Delete}}",
          "action": "executeDeleteInContextParameterFor12x"
        }
      ]
    }
  },
  "onEvent": [
    {
      "eventId": "Att1AddParameterValueWithUsage",
      "action": "att1AddParameterValueWithUsage"
    },
    {
      "eventId": "Att1AddParameterValueWithoutUsage",
      "action": "att1AddParameterValueWithoutUsage"
    },
    {
      "eventId": "Att1SetParametersDirectionSOACall",
      "action": "Att1SetParametersDirectionSOACall"
    },
    {
      "eventId": "deleteConfirmationEvent",
      "action": "deleteConfirmationEvent"
    },
    {
      "eventId": "inContextConfirmationOnDelete",
      "message": "inContextConfirmationOnDelete"
    },
    {
      "eventId": "deleteObjectConfirmation",
      "message": "deleteObjectConfirmation"
    },
    {
      "eventId": "deleteMeasurableAttributesSoaCall",
      "action": "deleteMeasurableAttributesSoaCall"
    },
    {
      "eventId": "cutParameterFrameworkSOACall",
      "action": "cutParameterFrameworkSOACall"
    },
    {
      "eventId": "executeDeleteParameterFor12x",
      "action": "executeDeleteParameterFor12x"
    },
    {
      "eventId": "removeChildrenFrameworkSOACall",
      "action": "removeChildrenFrameworkSOACall"
    },
    {
      "eventId": "att1Checkout.isDirty",
      "action": "att1CheckoutIsDirty"
    },
    {
      "eventId": "unregisterContexts",
      "action": "unregisterContexts"
    },
    {
      "eventId": "att1CheckinObjects",
      "action": "att1CheckinObjects"
    },
    {
      "eventId": "deleteDone",
      "action": "deleteDone"
    },
    {
      "eventId": "cutParamCompleted",
      "action": "cutParamCompleted"
    },
    {
      "eventId": "startDelete",
      "action": "startDelete"
    },
    {
      "eventId": "getObjectNames",
      "action": "getObjectNames"
    },
    {
      "eventId": "getAttachMeasurableAttributesSoaInputForAwb0Element",
      "action": "getAttachMeasurableAttributesSoaInputForAwb0Element"
    },
    {
      "eventId": "getAttachMeasurableAttributesSoaInput",
      "action": "getAttachMeasurableAttributesSoaInput"
    },
    {
      "eventId": "attachParametersSoaCall",
      "action": "attachParametersSoaCall"
    },
    {
      "eventId": "attachMeasurableAttributesSoaCall",
      "action": "attachMeasurableAttributesSoaCall"
    },
    {
      "eventId": "displayIgnoredAttributeMsg",
      "action": "displayIgnoredAttributeMsg"
    },
    {
      "eventId": "refreshOrExpandGroupInPWA",
      "action": "refreshOrExpandGroupInPWA"
    },
    {
      "eventId": "showInvalidParentObjectErrorMsg",
      "action": "showInvalidParentObjectErrorMsg"
    },
    {
      "eventId": "Att1PasteParameter.refreshRespectiveParameterTableAfterPaste",
      "action": "refreshRespectiveParameterTableAfterPaste"
    },
    {
      "eventId": "refreshParameterTableAfterSetUsage",
      "action": "refreshParameterTableAfterSetUsage"
    },
    {
      "eventId": "canPasteAttributes",
      "action": "canPasteAttributes"
    },
    {
      "eventId": "canPasteAttributesForAwb0Element",
      "action": "canPasteAttributesForAwb0Element"
    },
    {
      "eventId": "showMeasurableAttr",
      "action": "showMeasurableAttr"
    },
    {
      "eventId": "Att1AddMeasurementFile.continuteInit",
      "action": "initAddMeasurementFilePanel2"
    },
    {
      "eventId": "Att1AddMeasurementFile.openPanel",
      "action": "openAddMeasurementFilePanel"
    },
    {
      "eventId": "att1AddMeasurementFile.closePanel",
      "action": "closeAddMeasurementFilePanel"
    },
    {
      "eventId": "Att1PasteInDictionary.getParameterDefinitionOnly",
      "action": "Att1PasteToDictionary"
    },
    {
      "eventId": "Att1ParamGroup.confirmDeleteGroupEvent",
      "message": "singleGroupDeleteConfirmationMessage"
    },
    {
      "eventId": "Att1ParamGroup.confirmMultipleGroupDeleteEvent",
      "message": "multipleGroupDeleteConfirmationMessage"
    },
    {
      "eventId": "Att1Import.att1SetImportTarget",
      "cacheEventData": true,
      "action": "att1SetImportTarget"
    },
    {
      "eventId": "Att1Import.att1ActivateImportNewPanel",
      "cacheEventData": true,
      "action": "att1ActivateImportNewPanel"
    },
    {
      "eventId": "Att1SetFreezePoint.activateFreezePointPanel",
      "action": "att1ActivateFreezePointPanel"
    },
    {
      "eventId": "Att1SetFreezePoint.refreshSeedNode",
      "action": "att1PrepareFreezePoint"
    },
    {
      "eventId": "Att1ReviseAndReplace.reviseReplaceSingleConfirmationMessage",
      "message": "reviseReplaceSingleConfirmationMessage"
    },
    {
      "eventId": "Att1ReviseAndReplace.reviseReplaceMultipleConfirmationMessage",
      "message": "reviseReplaceMultipleConfirmationMessage"
    },
    {
      "eventId": "Att1ReviseReplace.refreshRespectiveParameterTable",
      "action": "refreshRespectiveParameterTable"
    },
    {
      "eventId": "Att1CutParameters.refreshRespectiveParameterTableAfterCut",
      "action": "refreshRespectiveParameterTableAfterCut"
    },
    {
      "eventId": "Att1DeleteParameter.getAllSelectedParameterNames",
      "action": "getAllSelectedParameterNames"
    },
    {
      "eventId": "Att1DeleteParameter.getAllSelectedParameterNamesForOverride",
      "action": "getAllSelectedParameterNamesForOverride"
    },
    {
      "eventId": "Att1DeleteParameter.publishDeleteParameterConfirmPopUp",
      "action": "publishDeleteParameterConfirmPopUp"
    },
    {
      "eventId": "Att1DeleteParameter.publishRemoveParameterConfirmPopUp",
      "action": "publishRemoveParameterConfirmPopUp"
    },
    {
      "eventId": "Att1DeleteParameter.publishRemoveOverrideParameterConfirmPopUp",
      "action": "publishRemoveOverrideParameterConfirmPopUp"
    },
    {
      "eventId": "Att1DeleteParameter.deleteParameter12xConfirmationMessage",
      "message": "deleteParameter12xConfirmationMessage"
    },
    {
      "eventId": "Att1DeleteParameter.removeParameter12xConfirmationMessage",
      "message": "removeParameter12xConfirmationMessage"
    },
    {
      "eventId": "Att1DeleteParameter.removeOverrideParameter12xConfirmationMessage",
      "message": "removeOverrideParameter12xConfirmationMessage"
    },
    {
      "eventId": "Att1DeleteParameter.deleteInContextParameter12xConfirmationMessage",
      "message": "deleteInContextParameter12xConfirmationMessage"
    },
    {
      "eventId": "Att1DeleteParameterFor12x.refreshRespectiveParameterTableAfterDelete",
      "action": "refreshRespectiveParameterTableAfterDelete"
    },
    {
      "eventId": "Att1DeleteParameterFor12x.refreshParametersAfterInContextDelete",
      "cacheEventData": true,
      "action": "refreshParametersAfterInContextDelete"
    },
    {
      "eventId": "syncSelectionWhenCutGroup",
      "action": "syncSelectionWhenCutGroup"
    },
    {
      "eventId": "displayCutGroupsMessageEvent",
      "action": "displayCutGroupsMessage"
    },
    {
      "eventId": "refreshParentWhenCutGroup",
      "action": "refreshParentWhenCutGroup"
    },
    {
      "eventId": "refreshParentWhenPasteGroup",
      "action": "refreshParentWhenPasteGroup"
    },
    {
      "eventId": "Att1PasteParamProject.clearClipBoardContents",
      "action": "clearClipBoardContents"
    },
    {
      "eventId": "pasteGroups",
      "action": "setPropertiesOnGroupPaste"
    },
    {
      "eventId": "Att1ReviseParameter.start",
      "action": "att1ReviseParameterPre"
    },
    {
      "eventId": "cutParamProxyToAwClipboard",
      "action": "cutProxyObjToAwClipboard"
    },
    {
      "eventId": "cutParamGroupToAwClipboard",
      "action": "cutPersistentObjToAwClipboard"
    },
    {
      "eventId": "cutToAwClipboardExceptOverridden",
      "action": "cutToAwClipboardExceptOverridden"
    },
    {
      "eventId": "Att1AddParamValue.refreshParameterTableAfterAddParameterValue",
      "action": "refreshParameterTableAfterAddParameterValue"
    },
    {
      "eventId": "Att1ParameterVariants.handleShowParameterVariants",
      "action": "handleShowParameterVariants"
    },
    {
      "eventId": "Att1ParameterVariants.showParameterVariants",
      "action": "showParameterVariants"
    },
    {
      "eventId": "Att1DeleteParameter.cutParameters",
      "action": "cutParameters"
    },
    {
      "eventId": "Att1ParameterVariants.hideParameterVariants",
      "action": "hideParameterVariants"
    },
    {
      "eventId": "att1PasteParameterAsCopy",
      "cacheEventData": true,
      "action": "getMeasurableAttributesInClipboardForAwb0Element"
    },
    {
      "eventId": "Att1ParamProjectNavigation.clearPWASelection",
      "cacheEventData": true,
      "action": "clearGroupsSelection"
    },
    {
      "eventId": "Att1ReviseParams.callReviseSOACall",
      "action": "reviseMultipleParams"
    },
    {
      "eventId": "param.reviseSoaSuccess",
      "action": "paramPostReviseSoaSuccess",
      "cacheEventData": true
    },
    {
      "eventId": "att1Parameters.setComplexDataImportInrogress",
      "action": "registerImportInProgressCtx"
    },
    {
      "eventId": "att1Parameters.setAddTableValueCommandClicked",
      "action": "registerAddNewValueCommandClickedCtx"
    },
    {
      "eventId": "att1Parameters.setManageMeasurementsCommandClicked",
      "action": "registerManageMeasurementsCommandClickedCtx"
    },
    {
      "eventId": "confirmDeleteObjectEvent",
      "message": "singleObjDeleteCmdConfirmationMessage"
    },
    {
      "eventId": "confirmMultipleDeleteObjectsEvent",
      "message": "multipleObjsDeleteCmdConfirmationMessage"
    },
    {
      "eventId": "confirmSingleCutOrCancelCmdEvent",
      "message": "singleCutOrCancelCmdConfirmationMessage"
    },
    {
      "eventId": "confirmMultipleCutOrCancelCmdEvent",
      "message": "multipleCutOrCancelCmdConfirmationMessage"
    }
  ],
  "i18n": {
    "SingleParamSetDefaultUsage": [
      "Att1AttrMappingMessages"
    ],
    "multipleParamSetToDefaultUsage": [
      "Att1AttrMappingMessages"
    ],
    "AddMeasurementFromExcelTitle": [
      "Att1Messages"
    ],
    "AddMeasurementFromExcelDesc": [
      "Att1Messages"
    ],
    "AddMeasurementFromGoalTitle": [
      "Att1Messages"
    ],
    "AddMeasurementFromGoalDesc": [
      "Att1Messages"
    ],
    "AddMeasurementNewTitle": [
      "Att1Messages"
    ],
    "AddMeasurementNewDesc": [
      "Att1Messages"
    ],
    "AddMeasurementEngrTableTitle": [
      "Att1Messages"
    ],
    "AddMeasurementEngrTableDesc": [
      "Att1Messages"
    ],
    "DuplicateMeasurementEngrTableTitle": [
      "Att1Messages"
    ],
    "DuplicateMeasurementEngrTableDesc": [
      "Att1Messages"
    ],
    "EditMeasurementEngrTableTitle": [
      "Att1Messages"
    ],
    "EditMeasurementEngrTableDesc": [
      "Att1Messages"
    ],
    "AttachMeasurementEngrTableTitle": [
      "Att1Messages"
    ],
    "AttachMeasurementEngrTableDesc": [
      "Att1Messages"
    ],
    "Att1AddTableTitle": [
      "Att1Messages"
    ],
    "Att1AddTableDesc": [
      "Att1Messages"
    ],
    "Att1AddTableFromExcelTitle": [
      "Att1Messages"
    ],
    "Att1AddTableFromExcelDesc": [
      "Att1Messages"
    ],
    "Att1AddTableNewValueTitle": [
      "Att1Messages"
    ],
    "Att1AddTableNewValueDesc": [
      "Att1Messages"
    ],
    "InsertCommandTitle": [
      "Att1Messages"
    ],
    "InsertRowAboveCommandTitle": [
      "Att1Messages"
    ],
    "InsertRowBelowCommandTitle": [
      "Att1Messages"
    ],
    "columnCopyFillTitle": [
      "Att1Messages"
    ],
    "columnCopyFillDesc": [
      "Att1Messages"
    ],
    "InsertColumnLeftCommandTitle": [
      "Att1Messages"
    ],
    "InsertRowSeriesCommandTitle": [
      "Att1Messages"
    ],
    "InsertColumnRightCommandTitle": [
      "Att1Messages"
    ],
    "InsertColumnSeriesCommandTitle": [
      "Att1Messages"
    ],
    "InsertCommandDesc": [
      "Att1Messages"
    ],
    "InsertRowAboveCommandDesc": [
      "Att1Messages"
    ],
    "InsertRowBelowCommandDesc": [
      "Att1Messages"
    ],
    "InsertColumnLeftCommandDesc": [
      "Att1Messages"
    ],
    "InsertRowSeriesCommandDesc": [
      "Att1Messages"
    ],
    "InsertColumnRightCommandDesc": [
      "Att1Messages"
    ],
    "InsertColumnSeriesCommandDesc": [
      "Att1Messages"
    ],
    "CutCommandTitle": [
      "Att1Messages"
    ],
    "CopyCommandTitle": [
      "Att1Messages"
    ],
    "PasteCommandTitle": [
      "Att1Messages"
    ],
    "DeleteCommandTitle": [
      "Att1Messages"
    ],
    "CutCommandDesc": [
      "Att1Messages"
    ],
    "CopyCommandDesc": [
      "Att1Messages"
    ],
    "PasteCommandDesc": [
      "Att1Messages"
    ],
    "DeleteCommandDesc": [
      "Att1Messages"
    ],
    "Att1UndoEngrTableTitle": [
      "Att1Messages"
    ],
    "Att1UndoEngrTableDesc": [
      "Att1Messages"
    ],
    "DeleteRowCommandTitle": [
      "Att1Messages"
    ],
    "DeleteRowCommandDesc": [
      "Att1Messages"
    ],
    "DeleteColumnCommandTitle": [
      "Att1Messages"
    ],
    "DeleteColumnCommandDesc": [
      "Att1Messages"
    ],
    "ClearContentsCommandTitle": [
      "Att1Messages"
    ],
    "ClearContentsCommandDesc": [
      "Att1Messages"
    ],
    "mapGroup": [
      "Att1AttrMappingMessages"
    ],
    "map": [
      "Att1AttrMappingMessages"
    ],
    "manualMap": [
      "Att1AttrMappingMessages"
    ],
    "unMap": [
      "Att1AttrMappingMessages"
    ],
    "breakMapFailure": [
      "Att1AttrMappingMessages"
    ],
    "breakMappingConfirmationMsg": [
      "Att1AttrMappingMessages"
    ],
    "breakMappingConfirmationMsgMultiple": [
      "Att1AttrMappingMessages"
    ],
    "ignoreSaveNotOverridableAttrsInContext": [
      "Att1AttrMappingMessages"
    ],
    "ignoreSavePropsForOutputAttrs": [
      "Att1AttrMappingMessages"
    ],
    "cancel": [
      "Att1AttrMappingMessages"
    ],
    "toggleInputOutputTitle": [
      "Att1AttrMappingMessages"
    ],
    "setAttrAsInputMultiSelectMsg": [
      "Att1AttrMappingMessages"
    ],
    "setAttrAsOutputMultiSelectMsg": [
      "Att1AttrMappingMessages"
    ],
    "getAlreadySetInputMsg": [
      "Att1AttrMappingMessages"
    ],
    "getAlreadySetOutputMsg": [
      "Att1AttrMappingMessages"
    ],
    "getNotOverridableAttrMsg": [
      "Att1AttrMappingMessages"
    ],
    "removeMeasurableAttribute": [
      "Att1AttrMappingMessages"
    ],
    "inContextConfirmationOnDelete": [
      "Att1AttrMappingMessages"
    ],
    "deleteObjectConfirmation": [
      "Att1AttrMappingMessages"
    ],
    "removeOverrideConfirmation": [
      "Att1AttrMappingMessages"
    ],
    "removeConfirmation": [
      "Att1AttrMappingMessages"
    ],
    "ignoreOverriddenObjects": [
      "Att1AttrMappingMessages"
    ],
    "ignoreObjectsWhileRemove": [
      "Att1AttrMappingMessages"
    ],
    "ignoreNonOverriddenObjects": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnOccurance1": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnOccurance2": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnOccurance3": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnOccurance4": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnItemRev1": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnItemRev2": [
      "Att1AttrMappingMessages"
    ],
    "deleteInfoMessageOnItemRev3": [
      "Att1AttrMappingMessages"
    ],
    "addMeasurableAttribute": [
      "Att1AttrMappingMessages"
    ],
    "quickAdd": [
      "Att1AttrMappingMessages"
    ],
    "addParameterValue": [
      "Att1AttrMappingMessages"
    ],
    "pasteAttributeTitle": [
      "Att1AttrMappingMessages"
    ],
    "paste": [
      "Att1AttrMappingMessages"
    ],
    "attributeNOfMMsg": [
      "Att1AttrMappingMessages"
    ],
    "attributeNotAdded": [
      "Att1AttrMappingMessages"
    ],
    "invalidParentObject": [
      "Att1AttrMappingMessages"
    ],
    "automap": [
      "Att1AttrMappingMessages"
    ],
    "autoMappingConfirmationMsg": [
      "Att1AttrMappingMessages"
    ],
    "autoMapAttributes": [
      "Att1AttrMappingMessages"
    ],
    "remove": [
      "Att1AttrMappingMessages"
    ],
    "ignoreUnusedAttrSelectMsg": [
      "Att1AttrMappingMessages"
    ],
    "ignoreAvailableAttrSelectMsg": [
      "Att1AttrMappingMessages"
    ],
    "ShowObjectCommandTitle": [
      "Att1AttrMappingMessages"
    ],
    "downloadFileCommandTitle": [
      "Att1AttrMappingMessages"
    ],
    "replaceFileCommandTitle": [
      "Att1AttrMappingMessages"
    ],
    "aw_attributeViewCommandBar": [
      "Att1AttrMappingMessages"
    ],
    "show_object_command": [
      "Att1AttrMappingMessages"
    ],
    "dataset_commands": [
      "Att1AttrMappingMessages"
    ],
    "mapAttributePanel_oneStepPinCommands": [
      "Att1AttrMappingMessages"
    ],
    "addParameterGroupPanel_oneStepPinCommands": [
      "Att1AttrMappingMessages"
    ],
    "Awp0AddObjectTitle": [
      "ZeroCompileCommandMessages"
    ],
    "ImportAttributeData": [
      "Att1AttrMappingMessages"
    ],
    "Awp0StartEditTitle": [
      "ZeroCompileCommandMessages"
    ],
    "saveEditsTitle": [
      "ZeroCompileCommandMessages"
    ],
    "cancelEditsTitle": [
      "ZeroCompileCommandMessages"
    ],
    "ConfigureVariant": [
      "Att1AttrMappingMessages"
    ],
    "showChildrenTitle": [
      "Att1AttrMappingMessages"
    ],
    "openGroupOrParamterTitle": [
      "Att1AttrMappingMessages"
    ],
    "addParameterGroup": [
      "Att1AttrMappingMessages"
    ],
    "pinButtonToolTip": [
      "Att1AttrMappingMessages"
    ],
    "unpinButtonToolTip": [
      "Att1AttrMappingMessages"
    ],
    "add": [
      "Att1AttrMappingMessages"
    ],
    "aw_param_project": [
      "Att1AttrMappingMessages"
    ],
    "paramCutMessage": [
      "Att1AttrMappingMessages"
    ],
    "multipleParamCutMsg": [
      "Att1AttrMappingMessages"
    ],
    "ignoredOverriddenParamsMsg": [
      "Att1AttrMappingMessages"
    ],
    "cutOperationIgnoredOverriddenParamsMsg": [
      "Att1AttrMappingMessages"
    ],
    "deleteParameterGroup": [
      "Att1AttrMappingMessages"
    ],
    "singleDeleteConfirmationMessage": [
      "ZeroCompileCommandMessages"
    ],
    "multipleDeleteConfirmationMessage": [
      "Att1AttrMappingMessages"
    ],
    "importNewCmdTitle": [
      "Att1AttrMappingMessages"
    ],
    "createFreezePointTitle": [
      "Att1AttrMappingMessages"
    ],
    "att1FailureMessage": [
      "Att1AttrMappingMessages"
    ],
    "freezePointSuccessMessage": [
      "Att1AttrMappingMessages"
    ],
    "frozen": [
      "Att1AttrMappingMessages"
    ],
    "reviseAndReplaceTitle": [
      "Att1AttrMappingMessages"
    ],
    "reviseAndReplaceSingleConfMessage": [
      "Att1AttrMappingMessages"
    ],
    "reviseAndReplaceMultipleConfMessage": [
      "Att1AttrMappingMessages"
    ],
    "replaceRevisionTitle": [
      "Att1AttrMappingMessages"
    ],
    "ShowParameterVariantToggleCommandTitle": [
      "Att1AttrMappingMessages"
    ],
    "NoParameterVariantsFound": [
      "Att1AttrMappingMessages"
    ],
    "Att1MapAttributeDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1MapAttributeGroupDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1UnMapAttributeDesc": [
      "Att1AttrMappingMessages"
    ],
    "StartEditAttributeProxyTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "SaveEditAttributeProxyTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "CancelEditAttributeProxyTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "ToggleInOutForMappedTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1RemoveMeasurableAttrFromItemRevDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AddMeasurableAttrFromTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1QuickAddAttrFromTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AssociateParamDictonariesDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1PasteAttributeDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1PasteParameterDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AutoMapAttributesDesc": [
      "Att1AttrMappingMessages"
    ],
    "ShowMeasurableAttrDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1DownloadFileDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ReplaceFileDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AddMeasurementFileDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ShowChildrenForParamGroupDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1OpenGroupOrParamterDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AddParameterGroupDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetUnPinAddParameterGroupPanelDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetUnPinAddParameterPanelDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1DeleteGroupDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ImportNewDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetFreezePointDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ExportParamTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ShowChildrenParameters": [
      "Att1AttrMappingMessages"
    ],
    "Att1ShowChildrenParametersDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ExportImportParamTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1RemoveMeasurableAttrFromItemRev12xDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AddAttrFromTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1AddAParamValueFromTableDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ReviseAndReplaceParameterDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1ReplaceParameterRevisionDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetParameterDirectionTitle": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetUnusedDirectionTitle": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetInputDirectionTitle": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetOutputDirectionTitle": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetParameterDirectionDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetUnusedDirectionDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetInputDirectionDesc": [
      "Att1AttrMappingMessages"
    ],
    "Att1SetOutputDirectionDesc": [
      "Att1AttrMappingMessages"
    ],
    "cutParam": [
      "Att1AttrMappingMessages"
    ],
    "cutParamDesc": [
      "Att1AttrMappingMessages"
    ],
    "removeOverride": [
      "Att1AttrMappingMessages"
    ],
    "removeOverrideDesc": [
      "Att1AttrMappingMessages"
    ],
    "delete": [
      "Att1AttrMappingMessages"
    ],
    "proceed": [
      "Att1AttrMappingMessages"
    ],
    "deleteParamDesc": [
      "Att1AttrMappingMessages"
    ],
    "pasteAsRefTitle": [
      "Att1AttrMappingMessages"
    ],
    "pasteAsCopyTitle": [
      "Att1AttrMappingMessages"
    ],
    "importFromExcel": [
      "Att1AttrMappingMessages"
    ],
    "removeParamGroupDesc": [
      "Att1AttrMappingMessages"
    ],
    "releaseParamDefinition": [
      "Att1AttrMappingMessages"
    ],
    "releaseParamDefDesc": [
      "Att1AttrMappingMessages"
    ],
    "singleSubmitToWorkflowSuccess": [
      "Att1AttrMappingMessages"
    ],
    "submitToWorkflowSuccess": [
      "Att1AttrMappingMessages"
    ],
    "Att1ShowReviseTitle": [
      "Att1Messages"
    ],
    "Att1ShowReviseDesc": [
      "Att1Messages"
    ],
    "Att1Range": [
      "Att1Messages"
    ],
    "Att1RangeDesc": [
      "Att1Messages"
    ],
    "Att1Goal": [
      "Att1Messages"
    ],
    "Att1GoalDesc": [
      "Att1Messages"
    ],
    "showTableViewText": [
      "XRTMessages"
    ],
    "Awp0ShowTableViewDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowTreeViewTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowTreeViewDesc": [
      "ZeroCompileCommandMessages"
    ],
    "addTableValueFromExcel": [
      "Att1Messages"
    ],
    "addTableValueFromExcelDesc": [
      "Att1Messages"
    ],
    "addTableValue": [
      "Att1Messages"
    ],
    "addTableValueDesc": [
      "Att1Messages"
    ],
    "manageMeasurements": [
      "Att1Messages"
    ],
    "manageMeasurementsDesc": [
      "Att1Messages"
    ],
    "addParameter": [
      "Att1AttrMappingMessages"
    ],
    "manageValueAndMeasurementGroup": [
      "Att1Messages"
    ],
    "manageValueAndMeasurementGroupDesc": [
      "Att1Messages"
    ],
    "Att1UpdateUomEngrTableTitle": [
      "Att1Messages"
    ],
    "Att1UpdateUomEngrTableDesc": [
      "Att1Messages"
    ],
    "Close": [
      "Att1Messages"
    ],
    "plotChart": [
      "Att1Messages"
    ],
    "plotChartDesc": [
      "Att1Messages"
    ],
    "valuesTableViewTitle": [
      "Att1Messages"
    ],
    "valuesTableViewDesc": [
      "Att1Messages"
    ],
    "chartViewTitle": [
      "Att1Messages"
    ],
    "chartViewDesc": [
      "Att1Messages"
    ],
    "valuesTableAndChartViewTitle": [
      "Att1Messages"
    ],
    "valuesTableAndChartViewDesc": [
      "Att1Messages"
    ],
    "showLogarithmicScaleTitle": [
      "Att1Messages"
    ],
    "showLogarithmicScaleDesc": [
      "Att1Messages"
    ]
  }
}

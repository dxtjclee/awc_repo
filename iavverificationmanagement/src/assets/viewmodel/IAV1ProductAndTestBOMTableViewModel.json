{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-splm-table.directive",
        "js/aw-command-bar.directive",
        "js/aw-panel-section.directive",
        "js/aw-am-table-panel.directive"
    ],
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    },
    "lifecycleHooks": {
        "onUnmount": "removeSelection",
        "onUpdate":  {
            "action": "handleSelectionChange",
            "observers": [ "viewModel.atomicData.selectionData" ]
        }
    },
    "actions": {
        "removeSelection": {
            "actionType": "JSFunction",
            "method": "removeSelectionIfany",
            "inputData": {
                "subPanelContext": "{{subPanelContext}}",
                "dataProvider": "{{data.dataProviders.testAndProdBOMTableProvider}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "handleSelectionChange": {
            "actionType": "JSFunction",
            "method": "handleSelectionChange",
            "inputData": {
                "data": "{{data.dataProviders.testAndProdBOMTableProvider}}",
                "subPanelContext": "{{subPanelContext}}"
            },
            "outputData": {},
            "deps": "js/Crt1VROverviewTablesService"
        },
        "editEventAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "plTable.editStateChange",
                        "eventData": {
                            "state": "{{data.eventData.state}}",
                            "dataSource": {
                                "dataProviders": "{{data.dataProviders}}"
                            }
                        }
                    }
                ]
            },
            "events": {
                "success": [
                 {
                    "name": "testAndProdBOMTableProvider.modelObjectsUpdated",
                    "condition": "data.eventData.state === 'saved' && data.dataProviders.testAndProdBOMTableProvider]"
                 }
             ]
            }
        },
        "addEventDataToNativeData": {
            "actionType": "JSFunction",
            "method": "handleHtmlPanelVMCollection",
            "deps": "js/xrtUtilities",
            "inputData": {
                "callback": "{{subPanelContext.callback.updateVMCollectionCallback}}",
                "response": {
                    "dataProvider": "{{data.dataProviders.testAndProdBOMTableProvider}}"
                }
            }
        },
        "refreshTestBOMTable": {
            "actionType": "dataProvider",
            "method": "testAndProdBOMTableProvider"
        },
        "doArrangeEvent": {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/columnArrangeService"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",

            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "operationType": "as_arranged",
                    "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('ProductAndTestEBOMs')}}"
                },
                "saveColumnConfigData": {
                    "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('ProductAndTestEBOMs')}}",
                    "columnConfigId": "{{subPanelContext.context.vrSublocationState.columnConfig.get('ProductAndTestEBOMs')}}",
                    "columns": "{{data.dataProviders.testAndProdBOMTableProvider.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                },
                "searchInput": {
                    "maxToLoad": 30,
                    "maxToReturn": 30,
                    "providerName": "Crt1AnalysisRequestInProvider",
                    "attributesToInflate":["crt1SourceObject"],
                    "searchCriteria": {
                        "parentUid": "{{function:getParentUid}}",
                        "tableUID":"ProductAndTestEBOMs"
                    },
                    "startIndex": "{{data.dataProviders.testAndProdBOMTableProvider.startIndex}}",
                    "columnFilters": "{{data.columnProviders.testAndProdBOMTableColumnProvider.columnFilters}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.testAndProdBOMTableProvider.columnConfig": "columnConfig"
            },
            "deps": "js/Crt1VROverviewTablesService"
        },
        "resetColumnConfig": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-UiConfig",
            "method": "getOrResetUIColumnConfigs4",
            "inputData": {
                "getOrResetUiConfigsIn": [
                    {
                        "scope": "LoginUser",
                        "scopeName": "",
                        "clientName": "AWClient",
                        "resetColumnConfig": true,
                        "columnConfigQueryInfos": [
                            {
                                "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('ProductAndTestEBOMs')}}",
                                "operationType": "configured",
                                "typeNames": [
                                    "WorkspaceObject"
                                ],
                                "columnsToExclude": []
                            }
                        ],
                        "businessObjects": [
                            {}
                        ]
                    }
                ]
            },
            "outputData": {
                "dataProviders.testAndProdBOMTableProvider.columnConfig": "columnConfigurations[0].columnConfigurations[0]"
            }
        },
        "loadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{subPanelContext.context.vrSublocationState.scopeURI.get('ProductAndTestEBOMs')}}",
                    "operationType": "as_configured"
                },
                "searchInput": {
                    "maxToLoad": 30,
                    "maxToReturn": 30,
                    "providerName": "Crt1AnalysisRequestInProvider",
                    "attributesToInflate":["crt1SourceObject"],
                    "searchCriteria": {
                        "parentUid": "{{function:getParentUid}}",
                        "tableUID":"ProductAndTestEBOMs"
                    },
                    "startIndex": "{{data.dataProviders.testAndProdBOMTableProvider.startIndex}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.testAndProdBOMTableProvider.columnConfig": "columnConfig"
            },
            "deps": "js/Crt1VROverviewTablesService",
            "actionMessages": {
                "failure": [ {
                    "message": "SOAFailureMsg"
                } ]
            }
        },
        "modelObjectsLoaded": {
            "actionType": "JSFunction",
            "method": "modelObjectsLoaded",
            "inputData": {
                "data": "{{data.dataProviders.testAndProdBOMTableProvider}}",
                "eventMap":"{{data.eventMap}}",
                "scopeSel": "{{props.subPanelContext.context.vrSublocationState.mselected[0]}}",
                "subPanleCtx": "{{props.subPanelContext}}"
            },
            "deps": "js/Crt1VROverviewTablesService"
        }

    },
    "functions": {
        "getParentUid": {
            "functionName": "getParentUid",
            "parameters": [
                "{{subPanelContext}}"
            ]
        }
    },
    "columnProviders": {
        "testAndProdBOMTableColumnProvider": {
            "saveColumnAndLoadAction": "saveColumnConfigLoadData",
            "resetColumnAction": "resetColumnConfig",
            "sortCriteria": [],
            "columns": "{{data.columns}}",
            "enableSorting": false,
            "id": "Crt1TestAndProdBomTable"
        }
    },
    "dataProviders": {
        "testAndProdBOMTableProvider": {
            "action": "loadData",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "selectionModelMode": "multiple",
            "editContext": "NONE",
            "commandsAnchor": "Open_Content_command",
            "contextMenuCommandsAnchor": "aw_prodAndTestBomTable_contextMenu",
            "inputData": {
                "selectionData": "{{fields.selectionData}}"
            }
        }
    },
    "grids": {
        "testAndProdBOMTable": {
            "columnProvider": "testAndProdBOMTableColumnProvider",
            "dataProvider": "testAndProdBOMTableProvider",
            "enableArrangeMenu": true,
            "gridOptions": {
                "enableSorting": true,
                "maxRowsToShow": 10,
                "isFilteringEnabled": true
            }
        }
    },
    "data": {
        "selectionData": {
            "initialValues": {},
            "meta": {}
        }
    },
    "messages": {
        "SOAFailureMsg": {
            "messageType": "ERROR",
            "messageText": "{{errorCode}}"
        }
    },
    "onEvent": [
        {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent"
        },
        {
            "eventId": "testAndProdBOMTableProvider.refreshTable",
            "cacheEventData": true,
            "action": "refreshTestBOMTable"
        },
        {
            "eventId": "testAndProdBOMTableProvider.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "modelObjectsLoaded"
        },
        {
            "eventId": "editHandlerStateChange",
            "cacheEventData": true,
            "action": "editEventAction"
        },
        {
            "eventId": "testAndProdBOMTableProvider.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "addEventDataToNativeData"
        }
    ]
}

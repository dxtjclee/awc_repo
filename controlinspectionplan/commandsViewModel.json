{
  "commands": {
    "Acp0GenDiffSummary": {
      "iconId": "cmdDifferenceSummaryGenerate",
      "title": "{{i18n.Acp0GenDiffSummaryTitle}}",
      "description": "{{i18n.Acp0GenDiffSummaryDesc}}"
    },
    "Acp0ShowDiffSummary": {
      "iconId": "cmdDifferenceSummaryOpen",
      "title": "{{i18n.Acp0ShowDiffSummaryTitle}}",
      "description": "{{i18n.Acp0ShowDiffSummaryDesc}}"
    },
    "Acp0AlignCpipWithFmea": {
      "iconId": "cmdAlign",
      "title": "{{i18n.Acp0AlignCpipWithFmeaTitle}}",
      "description": "{{i18n.Acp0AlignCpipWithFmeaDesc}}"
    },
    "Acp0GenerateCPIPStructureFromFMEA": {
      "iconId": "cmdGenerateControlInspectionPlan",
      "title": "{{i18n.Acp0GenerateControlPlanTitle}}",
      "description": "{{i18n.Acp0GenerateControlPlanDesc}}"
    },
    "Acp0RemoveCtrlPlanRefPartFromControlPlan": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.RemoveButtonToolTip}}"
    },
    "Acp0ImportPmiFromSelectedBalloon": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.Acp0ImportPmiFromSelectedBalloonTitle}}",
      "description": "{{i18n.Acp0ImportPmiFromSelectedBalloonDesc}}"
    },
    "Acp0AddExprsForCondBuild": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Acp0AddExprsForCondBuildTitle}}"
    },
    "Acp0RemoveCondForCondBuild": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.acp0Remove}}"
    },
    "Acp0MoveUpCondForCondBuild": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.moveUp}}"
    },
    "Acp0MoveDownCondForCondBuild": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.moveDown}}"
    },
    "Acp0ResetCondForCondBuild": {
      "iconId": "cmdDeleteAll",
      "isGroup": false,
      "title": "{{i18n.resetCond}}"
    },
    "Acp0ActivateRule": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Acp0ActivateRuleTitle}}",
      "description": "{{i18n.Acp0ActivateRuleDescription}}"
    },
    "Acp0ChangeOperatorForExprs": {
      "iconId": "cmdChangeCategory",
      "isGroup": false,
      "title": "{{i18n.changeOperator}}"
    },
    "Acp0commandPanelHelpCommand": {
      "iconId": "cmdHelp",
      "isGroup": false,
      "title": "{{i18n.Help}}",
      "description": "{{i18n.HelpDescription}}"
    },
    "Acp0BctInspViewModesGroup": {
      "iconId": "cmdShow",
      "isShuttle": true,
      "title": "{{i18n.Acp0InspViewModeTitle}}"
    },
    "Acp0BctInspCombineViewMode": {
      "iconId": "cmdToggleCompartment",
      "title": "{{i18n.Acp0CombineViewModeTitle}}",
      "description": "{{i18n.Acp0CombineViewModeDesc}}"
    },
    "Acp0BctInspDrawingViewMode": {
      "iconId": "cmdTechnicalDrawing",
      "title": "{{i18n.Acp0DrawingViewTitle}}",
      "description": "{{i18n.Acp0DrawingViewDesc}}"
    },
    "Acp0BctInspTableViewMode": {
      "iconId": "cmdTableView",
      "title": "{{i18n.Acp0TableViewTitle}}",
      "description": "{{i18n.Acp0TableViewDesc}}"
    },
    "Acp0CadViewRefPartsViewModesGroup": {
      "iconId": "cmdShow",
      "isShuttle": true,
      "title": "{{i18n.Acp0InspViewModeTitle}}"
    },
    "Acp0CadViewRefPartsListView": {
      "iconId": "cmdListView",
      "title": "{{i18n.Acp0RefPartsListViewTitle}}",
      "description": "{{i18n.Awp0ShowListViewDesc}}"
    },
    "Acp0CadViewRefPartsTableView": {
      "iconId": "cmdTableView",
      "title": "{{i18n.Acp0RefPartsTableViewTitle}}",
      "description": "{{i18n.Awp0ShowTableViewDesc}}"
    },
    "Acp0SelectDeSelectAllBalloon": {
      "iconId": "cmdCheckmark",
      "isGroup": false,
      "title": "{{i18n.Acp0SelectAllBalloons}}",
      "description": "{{i18n.Acp0SelectAllBalloonsDesc}}",
      "selected": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.Acp0DeSelectAllBalloons}}",
        "description": "{{i18n.Awp0DeselectAllDesc}}"
      }
    },
    "Acp0HideAllBalloons": {
      "iconId": "cmdHidePMI16",
      "isGroup": false,
      "title": "{{i18n.Acp0HideAllBalloons}}",
      "description": "{{i18n.Acp0HideAllBalloonsDesc}}",
      "selected": {
        "iconId": "cmdHidePMI16",
        "title": "{{i18n.Acp0ShowAllBalloons}}",
        "description": "{{i18n.Acp0ShowAllBalloonsDesc}}"
      }
    },
    "Acp0ComparePartRevisions": {
      "iconId": "cmdCompareRevisions",
      "isGroup": false,
      "title": "{{i18n.Acp0ComparePartRevisions}}",
      "description": "{{i18n.Acp0ComparePartRevisionsDesc}}"
    },
    "Acp0ShowHideLinkedPartsPanel": {
      "iconId": "cmdShowParts16",
      "isGroup": false,
      "title": "{{i18n.Acp0ShowLinkedPartsTitle}}",
      "description": "{{i18n.Acp0ShowLinkedPartsDesc}}",
      "selected": {
        "iconId": "cmdShowParts16",
        "title": "{{i18n.Acp0ShowLinkedPartsTitle}}",
        "description": "{{i18n.Acp0ShowLinkedPartsDesc}}"
      }
    }
  },
  "commandHandlers": {
    "Acp0GenDiffSummaryCommandHandler": {
      "id": "Acp0GenDiffSummary",
      "action": "generateDiffSummaryOfCpipWithFmea",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.acp0IsGenDiffSummaryVisibleWhenCmdCond"
      },
      "enableWhen": {
        "condition": "conditions.acp0IsSourceFmeaForDiffSelectedCond"
      }
    },
    "Acp0ShowDiffSummaryCommandHandler": {
      "id": "Acp0ShowDiffSummary",
      "action": "openDiffSummaryOfCpipWithFmea",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.acp0IsGenDiffSummaryVisibleWhenCmdCond"
      },
      "enableWhen": {
        "condition": "conditions.acp0IsSourceFmeaForDiffSelectedCond"
      }
    },
    "Acp0AlignCpipWithFmeaCommandHandler": {
      "id": "Acp0AlignCpipWithFmea",
      "action": "alignCpipWithFmea",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0AlignCpipWithFmeaEnableWhenCond"
      },
      "visibleWhen": {
        "condition": "conditions.acp0AlignCpipWithFmeaVisibleWhenCond"
      }
    },
    "Acp0CreateControlPlanHandler": {
      "id": "Acp0GenerateCPIPStructureFromFMEA",
      "action": "activateCPIPFromFMEA",
      "activeWhen": {
        "condition": "conditions.acp0CreateControlPlanCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.acp0CreateControlPlanCmdCond"
      }
    },
    "Cip0PrintCommandHandler": {
      "id": "Awp0Print",
      "action": "activateCip0PrintPanel",
      "activeWhen": {
        "condition": "conditions.cip0shouldPrintVisible"
      },
      "visibleWhen": {
        "condition": "conditions.cip0shouldPrintVisible"
      }
    },
    "Cip0AddCtrlPlanRefPartForRepresentationCommandHandler": {
      "id": "Awp0ShowAddObject",
      "activeWhen": {
        "condition": "conditions.acp0IsAddRefPartToControlPlan"
      },
      "visibleWhen": false
    },
    "Acp0ObjectInfoCommandHandler": {
      "id": "Awp0ObjectInfo",
      "activeWhen": {
        "condition": "conditions.acp0ObjectInfoActive"
      },
      "enableWhen": false
    },
    "Acp0RemoveCtrlPlanRefPartFromControlPlanCommandHandler": {
      "id": "Acp0RemoveCtrlPlanRefPartFromControlPlan",
      "action": "removeCtrlPlanRefPartFromControlPlan",
      "activeWhen": {
        "condition": "conditions.acp0IsCtrlPlanRefPartSelected"
      },
      "visibleWhen": {
        "condition": "conditions.acp0IsCtrlPlanRefPartSelected"
      }
    },
    "Acp0ImportPmiFromSelectedBalloonCommandHandler": {
      "id": "Acp0ImportPmiFromSelectedBalloon",
      "action": "callBCTServiceToGetReduceIpxml",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0ImportPmiFromSelectedBalloonCmdCond"
      }
    },
    "Acp0AddExprsForCondBuildCmdHandler": {
      "id": "Acp0AddExprsForCondBuild",
      "action": "loadRequiredProperties",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0AddExprsForCondBuildCmdCond"
      }
    },
    "Acp0RemoveCondForCondBuildCmdHandler": {
      "id": "Acp0RemoveCondForCondBuild",
      "action": "acp0DeleteCondExprForCondBuildAction",
      "activeWhen": {
        "condition": "conditions.acp0RemoveCondForCondBuildCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.acp0RemoveCondForCondBuildCmdCond"
      }
    },
    "Acp0MoveUpCondForCondBuildCmdHandler": {
      "id": "Acp0MoveUpCondForCondBuild",
      "action": "updateCommnadContextForActiveCmdIdMoveUpInRuleEngine",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0MoveUpCondForCondBuildCmdCond"
      }
    },
    "Acp0MoveDownCondForCondBuildCmdHandler": {
      "id": "Acp0MoveDownCondForCondBuild",
      "action": "updateCommnadContextForActiveCmdIdMoveDownInRuleEngine",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0MoveDownCondForCondBuildCmdCond"
      }
    },
    "Acp0ResetCondForCondBuildCmdHandler": {
      "id": "Acp0ResetCondForCondBuild",
      "action": "acp0ResetCondForCondBuildAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0ResetCondForCondBuildCmdCond"
      }
    },
    "Acp0ActivateRuleCommandHandler": {
      "id": "Acp0ActivateRule",
      "action": "performSearch",
      "activeWhen": {
        "condition": "conditions.acp0activateRuleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.acp0activateRuleCondition"
      }
    },
    "Acp0ChangeOperatorForExprsCmdHandler": {
      "id": "Acp0ChangeOperatorForExprs",
      "action": "updateCommnadContextForActiveCmdIdOperInRuleEngine",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0ChangeOperatorForExprssssCond"
      }
    },
    "Acp0commandPanelHelpCommandHandler": {
      "id": "Acp0commandPanelHelpCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Acp0BctInspCombineViewModeCmdHandler": {
      "id": "Acp0BctInspCombineViewMode",
      "action": "setInspectorCombineViewMode",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0BctInspViewModeCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0IsCombineViewModeSelected"
      }
    },
    "Acp0BctInspDrawingViewModecmdHandler": {
      "id": "Acp0BctInspDrawingViewMode",
      "action": "setInspectorDrawingViewMode",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0BctInspViewModeCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0IsDrawingViewModeSelected"
      }
    },
    "Acp0BctInspTableViewModeCmdHandler": {
      "id": "Acp0BctInspTableViewMode",
      "action": "setInspectorTableViewMode",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0BctInspViewModeCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0IsTableViewModeSelected"
      }
    },
    "Acp0CadViewRefPartsListViewCmdHandler": {
      "id": "Acp0CadViewRefPartsListView",
      "action": "setRefPartsListView",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true,
      "selectWhen": {
        "condition": "conditions.acp0CadViewRefPartsListViewSelected"
      }
    },
    "Acp0CadViewRefPartsTableViewCmdHandler": {
      "id": "Acp0CadViewRefPartsTableView",
      "action": "setRefPartsTableView",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true,
      "selectWhen": {
        "condition": "conditions.acp0CadViewRefPartsTableViewSelected"
      }
    },
    "Acp0SelectDeSelectAllBalloonCmdHandler": {
      "id": "Acp0SelectDeSelectAllBalloon",
      "action": "selectDeselectAllBalloonFromInspectorView",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0SelectDeSelectAllBalloonCmdCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0SelectDeSelectAllBalloonSelectCmdCond"
      }
    },
    "Acp0HideAllBalloonsCmdHandler": {
      "id": "Acp0HideAllBalloons",
      "action": "hideAllBalloonsFromInspectorView",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0HideAllBalloonsCmdCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0ShowAllBalloonsCmdCond"
      }
    },
    "Acp0ComparePartRevisionsCmdHandler": {
      "id": "Acp0ComparePartRevisions",
      "action": "renderAcp0ComparePartRevisionsPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Acp0ComparePartRevisionsCmdCond"
      }
    },
    "Acp0ControlPlanCommandHandler": {
      "id": "Awp0Paste",
      "action": "acp0DefaultPasteHandlerEvent",
      "activeWhen": {
        "condition": "conditions.Acp0ControlPlanPasteEnableDelegate"
      },
      "enableWhen": {
        "condition": "conditions.Acp0ControlPlanPasteEnableDelegate"
      },
      "visibleWhen": true
    },
    "Acp0PasteCtxMenuControlPlanCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "acp0DefaultPasteHandlerEvent",
      "activeWhen": {
        "condition": "conditions.Acp0ControlPlanPasteEnableDelegate"
      },
      "enableWhen": {
        "condition": "conditions.Acp0ControlPlanPasteEnableDelegate"
      },
      "visibleWhen": true
    },
    "Acp0ShowHideLinkedPartsCmdHandler": {
      "id": "Acp0ShowHideLinkedPartsPanel",
      "action": "acp0ShowHideLinkedPartsPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acp0ShowHideLinkedPartsEnableCmdCond"
      },
      "selectWhen": {
        "condition": "conditions.acp0ShowHideLinkedPartsSelectionCmdCond"
      }
    }
  },
  "commandPlacements": {
    "Acp0AlignCpipWithFmeaCmdPlacement": {
      "id": "Acp0AlignCpipWithFmea",
      "uiAnchor": "aw_workArea_right",
      "priority": 121
    },
    "Acp0CreateControlPlan_toolsAndInfo": {
      "id": "Acp0GenerateCPIPStructureFromFMEA",
      "uiAnchor": "aw_rightWall",
      "priority": 485,
      "parentGroupId": "Awp0NewGroup"
    },
    "Acp0ImportPmiFromSelectedBalloonCmdPlacement": {
      "id": "Acp0ImportPmiFromSelectedBalloon",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 500
    },
    "Acp0ResetCondForCondBuildCmdPlacement": {
      "id": "Acp0ResetCondForCondBuild",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 100
    },
    "Acp0MoveDownCondForCondBuildCmdPlacement": {
      "id": "Acp0MoveDownCondForCondBuild",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 101
    },
    "Acp0MoveUpCondForCondBuildCmdPlacement": {
      "id": "Acp0MoveUpCondForCondBuild",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 102
    },
    "Acp0RemoveCondForCondBuildCmdPlacement": {
      "id": "Acp0RemoveCondForCondBuild",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 103
    },
    "Acp0AddExprsForCondBuildCmdPlacement": {
      "id": "Acp0AddExprsForCondBuild",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 104
    },
    "Acp0AddExprsForCondBuildCmdPlacement2": {
      "id": "Acp0AddExprsForCondBuild",
      "uiAnchor": "aw_AddExprsForCondBuildCmd",
      "priority": 104
    },
    "Acp0ActivateRule_toolsAndInfo": {
      "id": "Acp0ActivateRule",
      "uiAnchor": "aw_rightWall",
      "priority": 500,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Acp0ChangeOperatorForExprsCmdPlacement": {
      "id": "Acp0ChangeOperatorForExprs",
      "uiAnchor": "aw_CondBuildExprsCmd",
      "priority": 99
    },
    "Acp0commandpanelHelpCommandPlacement": {
      "id": "Acp0commandPanelHelpCommand",
      "uiAnchor": "commandPanelhelpAnchor",
      "priority": 100
    },
    "Acp0BctInspViewModesGroupPlacement": {
      "id": "Acp0BctInspViewModesGroup",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 200
    },
    "Acp0BctInspCombineViewModePlacement": {
      "id": "Acp0BctInspCombineViewMode",
      "priority": 300,
      "parentGroupId": "Acp0BctInspViewModesGroup"
    },
    "Acp0BctInspDrawingViewModePlacement": {
      "id": "Acp0BctInspDrawingViewMode",
      "priority": 100,
      "parentGroupId": "Acp0BctInspViewModesGroup"
    },
    "Acp0BctInspTableViewModePlacement": {
      "id": "Acp0BctInspTableViewMode",
      "priority": 200,
      "parentGroupId": "Acp0BctInspViewModesGroup"
    },
    "Acp0CadViewRefPartsViewModesGroupPlacement": {
      "id": "Acp0CadViewRefPartsViewModesGroup",
      "uiAnchor": "acp0_partRefViewModes",
      "priority": 0
    },
    "Acp0CadViewRefPartsListViewPlacement": {
      "id": "Acp0CadViewRefPartsListView",
      "priority": 100,
      "parentGroupId": "Acp0CadViewRefPartsViewModesGroup"
    },
    "Acp0CadViewRefPartsTableViewPlacement": {
      "id": "Acp0CadViewRefPartsTableView",
      "priority": 200,
      "parentGroupId": "Acp0CadViewRefPartsViewModesGroup"
    },
    "Acp0SelectDeSelectAllBalloonCmdPlacement": {
      "id": "Acp0SelectDeSelectAllBalloon",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 400
    },
    "Acp0HideAllBalloonsCmdPlacement": {
      "id": "Acp0HideAllBalloons",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 300
    },
    "Acp0ComparePartRevisionsCmdPlacement": {
      "id": "Acp0ComparePartRevisions",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 600
    },
    "Acp0ShowHideLinkedPartsCmdPlacement": {
      "id": "Acp0ShowHideLinkedPartsPanel",
      "uiAnchor": "acp0_bctInspViewer",
      "priority": 100
    }
  },
  "ctx": {
    "enableAlignCmd": {
      "type": "boolean"
    }
  },
  "actions": {
    "generateDiffSummaryOfCpipWithFmea": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ControlPlan-2022-12-ControlPlanManagement",
      "method": "compareCPIPStructureWithFMEA",
      "inputData": {
        "input": {
          "sourceFMEAObject": {
            "type": "{{ctx.mselected[0].type}}",
            "uid": "{{ctx.mselected[0].uid}}"
          },
          "targetControlPlanRev": {
            "type": "Cip0ControlPlanRevision",
            "uid": "{{commandContext.vmo.uid}}"
          },
          "useSourceObjectRevision": "USE_LATEST_REV"
        },
        "runInBackground": "{{function:setRunInBackgroundValue}}"
      },
      "deps": "js/Acp0ControlPlanUtils",
      "actionMessages": {
        "success": [
          {
            "message": "acp0generateDiffSummarySuccessfulMessage"
          }
        ]
      }
    },
    "alignCpipWithFmea": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ControlPlan-2022-12-ControlPlanManagement",
      "method": "alignCPIPStructureWithFMEA",
      "inputData": {
        "input": "{{function:buildInputToAlignCpipWithFmea}}",
        "runInBackground": "{{function:setRunInBackgroundValue}}"
      },
      "actionMessages": {
        "success": [
          {
            "message": "acp0AlignCpipWithFmeaSuccessfulMessage"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "acp0.disableAlignCmd"
          }
        ]
      },
      "deps": "js/Acp0ControlPlanUtils"
    },
    "openDifferenceSummary": {
      "actionType": "JSFunction",
      "method": "saveAsComplete",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "commandId": "Awp0ShowObject",
        "commandArgs": {
          "edit": true
        },
        "commandContext": {
          "vmo": {
            "type": "Acp0CPIPCompareContext",
            "uid": "{{data.data.searchResult.objects[0].uid}}"
          }
        },
        "runActionWithViewModel": "{{parameters.commandActionExecutor.runActionWithViewModel}}"
      },
      "events": {
        "success": [
          {
            "name": "acp0.enableAlignCmd"
          }
        ]
      }
    },
    "enableAlignCmd": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "inputData": {
        "name": "enableAlignCmd",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "disableAlignCmd": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "inputData": {
        "name": "enableAlignCmd",
        "value": false
      },
      "deps": "js/appCtxService"
    },
    "openDiffSummaryOfCpipWithFmea": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2023-06-Finder",
      "method": "performSearchViewModel5",
      "inputData": {
        "searchInput": {
          "maxToLoad": 50,
          "maxToReturn": 50,
          "providerName": "Aqc0RealizationObjsProvider",
          "searchCriteria": {
            "sourceCxtObjectUid": "{{ctx.mselected[0].uid}}",
            "targetCxtObjectUid": "{{commandContext.vmo.uid}}",
            "searchObjectType": "CompareCxtObject"
          }
        }
      },
      "outputData": {
        "searchResult": "{{json:searchResultsJSON}}",
        "totalLoaded": "totalLoaded",
        "totalFound": "totalFound"
      },
      "events": {
        "success": [
          {
            "name": "acp0.openDifferenceSummary"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "acp0openDiffSummaryMessage",
            "condition": "data.totalFound === 0"
          }
        ]
      }
    },
    "activateCPIPFromFMEA": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Acp0GenerateCPIPStructureFromFMEA",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "activateCip0PrintPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Cip0Print",
        "location": "aw_toolsAndInfo",
        "panelContext": "{{commandContext}}"
      }
    },
    "removeCtrlPlanRefPartFromControlPlan": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteRelations",
      "inputData": {
        "input": [
          {
            "primaryObject": "{{function:getUnderlyingObject}}",
            "secondaryObject": "{{ctx.selected}}",
            "relationType": "{{ctx.relationContext.relationInfo[0].relationType}}",
            "clientId": "CreateObject",
            "userData": ""
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.locationContext.modelObject}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "deps": "js/Acp0ControlPlanUtils"
    },
    "callBCTServiceToGetReduceIpxml": {
      "actionType": "JSFunction",
      "method": "callBCTServiceToGetReduceIpxml",
      "inputData": {
        "ctx": "{{ctx}}",
        "data": "{{data}}"
      },
      "deps": "js/Acp0BCTService"
    },
    "activateAddExprsForCondBuildPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Acp0AddExprsForCondBuild",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "loadRequiredProperties": {
      "actionType": "JSFunction",
      "method": "loadRequiredProperties",
      "inputData": {
        "selectedCondObj": "{{ctx.selected}}",
        "data": "{{data}}",
        "ruleBuilderPanelFlag": true,
        "context": "{{commandContext}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "removeExprOrCondn": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": "{{function:getRemoveExprOrCondnInfo}}"
      },
      "events": {
        "success": [
          {
            "name": "acp0.removeCondExpElement"
          },
          {
            "name": "condExprGrid.plTable.reload"
          },
          {
            "name": "acp0.deleteMultipleCondOrExpSuccessgfullmesage",
            "condition": "ctx.mselected.length > 1"
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.editInProgress && ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.selected}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.editInProgress && ctx.pselected && ctx.pselected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          },
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.editInProgress && ( (ctx.pselected && ctx.pselected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1) || (ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1) )"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "deleteCondnSuccessfulMessage",
            "condition": "ctx.selected.type === 'Acp0RuleCondition' && ctx.mselected.length === 1"
          },
          {
            "message": "deleteAllCondSuccessfulMessage",
            "condition": "ctx.selected.type === 'Acp0Rule' && ctx.mselected.length === 1"
          }
        ]
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "moveDownOrmoveUpTheSelCondOrExpr": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": "{{function:toMoveDownOrMoveUpTheSelCondOrExpr}}"
      },
      "events": {
        "success": [
          {
            "name": "condExprGrid.plTable.reload",
            "condition": "ctx.pselected.type === 'Acp0Rule'"
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.editInProgress && ctx.pselected && ctx.pselected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          },
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.editInProgress && ctx.pselected && ctx.pselected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1"
          },
          {
            "name": "condExprGrid.plTable.reload",
            "condition": "ctx.pselected.modelType.typeHierarchyArray.indexOf('Acp0Rule') > -1"
          }
        ]
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "removeCondExpElement": {
      "actionType": "JSFunction",
      "method": "removeElement",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "acp0ResetCondForCondBuildAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmResetCondEvent"
          }
        ]
      }
    },
    "acp0DeleteCondExprForCondBuildAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmDeleteCondExprEvent",
            "condition": "ctx.mselected.length > 1"
          },
          {
            "name": "confirmDeleteCondEvent",
            "condition": "ctx.mselected[0].type ==='Acp0RuleCondition' && ctx.mselected.length > 0"
          },
          {
            "name": "deleteExpEvent",
            "condition": "ctx.mselected.length > 0 && ctx.mselected[0].type === undefined"
          }
        ]
      }
    },
    "getMultipleObjDeleteMessageData": {
      "actionType": "JSFunction",
      "method": "getMultipleObjDeleteMessageData",
      "inputData": {
        "ctx": "{{ctx}}",
        "data": "{{data}}"
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "checkMultiSelectConds": {
      "actionType": "JSFunction",
      "method": "checkMultiSelectConds",
      "inputData": {
        "ctx": "{{ctx}}",
        "data": "{{data}}"
      },
      "events": {
        "success": [
          {
            "name": "confirmDeleteCondExprMixEvent",
            "condition": "ctx.condCount > 0"
          },
          {
            "name": "deleteExpEvent",
            "condition": "ctx.condCount === 0"
          }
        ]
      },
      "deps": "js/Acp0RuleNCCondUtils"
    },
    "Acp0activateRuleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": [
          {
            "object": "{{ctx.selected}}",
            "vecNameVal": [
              {
                "name": "acp0IsActive",
                "values": [
                  "true"
                ]
              }
            ]
          }
        ]
      },
      "outputData": {
        "ServiceData": ""
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ],
        "failure": [
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length > 0 && data.ServiceData.ServiceData.partialErrors[0].errorValues[0].code === 420060 ",
            "name": "acp0ActivateRuleFailureDueToNCMessageEvent"
          },
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length > 0 && data.ServiceData.ServiceData.partialErrors[0].errorValues[0].code === 2010 ",
            "name": "acp0FailureMessagewithAccessDenyEvent"
          },
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length > 0 && data.ServiceData.ServiceData.partialErrors[0].errorValues[0].code !== 2010 && data.ServiceData.ServiceData.partialErrors[0].errorValues[0].code !== 420060 ",
            "name": "acp0FailureMessageEvent"
          },
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length === 0",
            "name": "acp0FailureMessagewithNoErrorEvent"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "acp0activateRuleSuccessfulMessage"
          }
        ]
      }
    },
    "performSearch": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2023-06-Finder",
      "method": "performSearchViewModel5",
      "inputData": {
        "searchInput": {
          "maxToLoad": 50,
          "providerName": "Acp0CharsRulesAndNCProvider",
          "searchCriteria": {
            "type": "Acp0Rule",
            "searchString": "",
            "status": "true"
          },
          "searchSortCriteria": [
            {
              "fieldName": "creation_date",
              "sortDirection": "DESC"
            }
          ]
        }
      },
      "deps": "js/Acp0ControlPlanUtils",
      "outputData": {
        "searchResults": "{{json:searchResultsJSON}}",
        "totalLoaded": "totalLoaded",
        "totalFound": "totalFound",
        "modelObject": "{{function:processOutput}}"
      },
      "events": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1 && data.searchResults.objects[0] === undefined )",
            "name": "acp0ActivateRuleConfirmForFirstRuleEvent"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].uid !== data.searchResults.objects[0].uid && data.searchResults.objects[0] !== undefined)",
            "name": "acp0ActivateRuleConfirmEvent"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].uid === data.searchResults.objects[0].uid && data.searchResults.objects[0] !== undefined )",
            "name": "acp0InformationShowFailureEvent"
          }
        ]
      }
    },
    "failureMessageAction": {
      "actionType": "JSFunction",
      "method": "failureMessageConcat",
      "deps": "js/Acp0ControlPlanUtils",
      "inputData": {
        "data": "{{data}}"
      },
      "actionMessages": {
        "success": [
          {
            "message": "acp0activateRuleFailureMessage"
          }
        ]
      }
    },
    "setInspectorCombineViewMode": {
      "actionType": "JSFunction",
      "method": "setInspectorViewMode",
      "inputData": {
        "data": "{{data}}",
        "inspViewMode": "{{i18n.Acp0CombineViewModeTitle}}"
      },
      "deps": "js/Acp0BCTInspCompRenderService"
    },
    "setInspectorDrawingViewMode": {
      "actionType": "JSFunction",
      "method": "setInspectorViewMode",
      "inputData": {
        "data": "{{data}}",
        "inspViewMode": "{{i18n.Acp0DrawingViewTitle}}"
      },
      "deps": "js/Acp0BCTInspCompRenderService"
    },
    "setInspectorTableViewMode": {
      "actionType": "JSFunction",
      "method": "setInspectorViewMode",
      "inputData": {
        "data": "{{data}}",
        "inspViewMode": "{{i18n.Acp0TableViewTitle}}"
      },
      "deps": "js/Acp0BCTInspCompRenderService"
    },
    "setRefPartsListView": {
      "actionType": "JSFunction",
      "method": "setRefPartsViewMode",
      "inputData": {
        "i18nData": "{{i18n}}",
        "partToInspspectView": "{{i18n.Acp0RefPartsListViewTitle}}"
      },
      "deps": "js/Acp0BCTService"
    },
    "setRefPartsTableView": {
      "actionType": "JSFunction",
      "method": "setRefPartsViewMode",
      "inputData": {
        "i18nData": "{{i18n}}",
        "partToInspspectView": "{{i18n.Acp0RefPartsTableViewTitle}}"
      },
      "deps": "js/Acp0BCTService"
    },
    "selectDeselectAllBalloonFromInspectorView": {
      "actionType": "JSFunction",
      "method": "selectDeselectAllBalloonFromInspectorView",
      "inputData": {
        "data": "{{data}}"
      },
      "deps": "js/Acp0BCTInspCompRenderService"
    },
    "hideAllBalloonsFromInspectorView": {
      "actionType": "JSFunction",
      "method": "hideAllBalloonsFromInspectorView",
      "inputData": {
        "data": "{{data}}"
      },
      "deps": "js/Acp0BCTInspCompRenderService"
    },
    "updateCommnadContextForActiveCmdIdOperInRuleEngine": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "acp0.moveDownOrmoveUpTheSelCondOrExpr",
            "eventData": {
              "activeCommandId": "Acp0ChangeOperatorForExprs"
            }
          }
        ]
      }
    },
    "updateCommnadContextForActiveCmdIdMoveDownInRuleEngine": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "acp0.moveDownOrmoveUpTheSelCondOrExpr",
            "eventData": {
              "activeCommandId": "Acp0MoveDownCondForCondBuild"
            }
          }
        ]
      }
    },
    "updateCommnadContextForActiveCmdIdMoveUpInRuleEngine": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "acp0.moveDownOrmoveUpTheSelCondOrExpr",
            "eventData": {
              "activeCommandId": "Acp0MoveUpCondForCondBuild"
            }
          }
        ]
      }
    },
    "renderAcp0ComparePartRevisionsPanel": {
      "actionType": "JSFunction",
      "method": "renderAcp0ComparePartRevisionsPanel",
      "inputData": {
        "dataI18n": "{{i18n}}"
      },
      "deps": "js/Acp0BCTService"
    },
    "acp0DefaultPasteHandlerEvent": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "acp0.acp0DefaultPasteHandlerEvent",
            "eventData": {
              "activeCommandId": "Awp0Paste"
            },
            "condition": "ctx.awClipBoardProvider && ctx.awClipBoardProvider[0] && (ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0QcElement') > -1 || ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0CharElementRevision') > -1) && (ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0ControlPlanElement') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0InspOpElement') > -1)"
          },
          {
            "name": "acp0.acp0DefaultPasteHandlerEventWithoutPopup",
            "eventData": {
              "activeCommandId": "Awp0Paste"
            },
            "condition": "ctx.awClipBoardProvider && ctx.awClipBoardProvider[0] && (((ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0QcElement') > -1 || ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0CharElementRevision') > -1)  && (ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0ControlPlanElement') == -1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0InspOpElement') == -1)) || ( ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Awb0PositionedElement') > -1))"
          }
        ]
      }
    },
    "Acp0PasteAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "addObject2",
      "inputData": {
        "input": {
          "objectsToBeAdded": "{{ctx.awClipBoardProvider}}",
          "parentElement": "{{ctx.mselected[0]}}",
          "siblingElement": "",
          "inputCtxt": {
            "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}"
          },
          "sortCriteria": {
            "propertyName": "",
            "sortingOrder": ""
          },
          "addObjectIntent": "paste",
          "fetchPagedOccurrences": true,
          "requestPref": {
            "displayMode": [
              "Tree"
            ]
          },
          "numberOfElements": 1
        }
      },
      "outputData": {
        "addElementResponse": "{{function:getAddElementResponse}}",
        "charRepElementObj": "{{function:getCreatedRepresentationElement}}",
        "ServiceData": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": "[]",
              "relatedModified[0]": "{{data.addElementResponse.newElementInfos[0].parentElement}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0] && ( data.addElementResponse.newElementInfos[0].parentElement.props.awb0NumberOfChildren.dbValues[0] === '1' || data.addElementResponse.newElementInfos[0].newElements.length > 1 )"
          },
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
              "updatedParentElement": "{{ctx.selected}}"
            }
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": "[]",
              "relatedModified[0]": "{{data.addElementResponse.newElementInfos[0].parentElement}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0] && ( data.addElementResponse.newElementInfos[0].parentElement.props.awb0NumberOfChildren.dbValues[0] === '1' || data.addElementResponse.newElementInfos[0].newElements.length > 1 )"
          },
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
              "updatedParentElement": "{{ctx.selected}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0]"
          }
        ]
      },
      "deps": "js/Acp0ControlPlanUtils",
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.awClipBoardProvider.length === 1",
            "message": "pasteSingleSuccessMessage"
          },
          {
            "condition": "ctx.awClipBoardProvider.length > 1",
            "message": "pasteMultipleSuccessMessage"
          }
        ],
        "failure": [
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length > 0",
            "message": "pasteFailureMessage"
          },
          {
            "condition": "data.ServiceData.ServiceData.created.length >= 0",
            "message": "pastePartialSuccessMessage"
          }
        ]
      }
    },
    "GetPropertiesToCopyAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2011-06-OperationDescriptor",
      "method": "getSaveAsDesc",
      "inputData": {
        "targetObjects": "{{function:setUnderlyingObjectsOfSourceObjectsAndReturn}}"
      },
      "outputData": {
        "deepCopyInfoMap": "deepCopyInfoMap"
      },
      "events": {
        "success": [
          {
            "name": "acp0.getUpdatedDataforNewObject"
          },
          {
            "name": "acp0.gotPropertiesThatCouldCopy"
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "createSaveAsInput": {
      "actionType": "JSFunction",
      "method": "createSaveAsInput",
      "inputData": {
        "recentTypeName": "{{data.data}}"
      },
      "outputData": {
        "saveAs": ""
      },
      "events": {
        "success": [
          {
            "name": "acp0.saveAsInputCreated"
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "getUpdatedDataforNewObject": {
      "actionType": "JSFunction",
      "method": "getUpdatedDataforNewObject",
      "inputData": {
        "data": "{{data}}"
      },
      "outputData": {
        "data": "{{data}}"
      },
      "deps": "js/Acp0ControlPlanUtils"
    },
    "saveAs": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2012-09-DataManagement",
      "method": "saveAsObjectAndRelate",
      "inputData": {
        "relateInfo": "{{data.saveAs.relateInfo}}",
        "saveAsInput": "{{data.saveAs.saveAsInput}}"
      },
      "outputData": {
        "saveAsObjects": "{{function:getCreatedObjectsForAddACopy}}"
      },
      "events": {
        "success": [
          {
            "name": "acp0.callCreateObjectSoa"
          }
        ],
        "failure": [
          {
            "name": "acp0.callCreateObjectSoa",
            "condition": "saveAsObjects && saveAsObjects.length > 0 "
          }
        ]
      },
      "deps": "js/addObjectUtils"
    },
    "callCreateObjectSoa": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "addObject2",
      "inputData": {
        "input": {
          "objectsToBeAdded": "{{saveAsObjects}}",
          "parentElement": "{{ctx.mselected[0]}}",
          "siblingElement": "",
          "inputCtxt": {
            "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}"
          },
          "sortCriteria": {
            "propertyName": "",
            "sortingOrder": ""
          },
          "addObjectIntent": "paste",
          "fetchPagedOccurrences": true,
          "requestPref": {
            "displayMode": [
              "Tree"
            ]
          },
          "numberOfElements": 1
        }
      },
      "outputData": {
        "addElementResponse": "{{function:getAddElementResponse}}",
        "charRepElementObj": "{{function:getCreatedRepresentationElement}}",
        "ServiceData": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": "[]",
              "relatedModified[0]": "{{data.addElementResponse.newElementInfos[0].parentElement}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0] && ( data.addElementResponse.newElementInfos[0].parentElement.props.awb0NumberOfChildren.dbValues[0] === '1' || data.addElementResponse.newElementInfos[0].newElements.length > 1 )"
          },
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
              "updatedParentElement": "{{ctx.selected}}"
            }
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": "[]",
              "relatedModified[0]": "{{data.addElementResponse.newElementInfos[0].parentElement}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0] && ( data.addElementResponse.newElementInfos[0].parentElement.props.awb0NumberOfChildren.dbValues[0] === '1' || data.addElementResponse.newElementInfos[0].newElements.length > 1 )"
          },
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{data.addElementResponse.newlyAddedChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
              "updatedParentElement": "{{ctx.selected}}"
            },
            "condition": "data.addElementResponse.newElementInfos[0]"
          }
        ]
      },
      "deps": "js/Acp0ControlPlanUtils",
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.awClipBoardProvider.length === 1",
            "message": "pasteSingleSuccessNewObjMessage"
          },
          {
            "condition": "ctx.awClipBoardProvider.length > 1",
            "message": "pasteMultipleSuccessMessage"
          }
        ],
        "failure": [
          {
            "condition": "data.ServiceData.ServiceData.partialErrors.length > 0",
            "message": "pasteFailureMessage"
          },
          {
            "condition": "data.ServiceData.ServiceData.created.length >= 0",
            "message": "pastePartialSuccessMessage"
          }
        ]
      }
    },
    "acp0ShowHideLinkedPartsPanel": {
      "actionType": "JSFunction",
      "method": "showHideLinkedPartsPanel",
      "inputData": {},
      "deps": "js/Acp0BCTInspCompRenderService"
    }
  },
  "functions": {
    "buildInputToAlignCpipWithFmea": {
      "functionName": "buildInputToAlignCpipWithFmea",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getUnderlyingObject": {
      "functionName": "getUnderlyingObject",
      "parameters": []
    },
    "getRemoveExprOrCondnInfo": {
      "functionName": "getRemoveExprOrCondnInfo",
      "parameters": []
    },
    "toMoveDownOrMoveUpTheSelCondOrExpr": {
      "functionName": "toMoveDownOrMoveUpTheSelCondOrExpr",
      "parameters": [
        "{{data.eventData.activeCommandId}}"
      ]
    },
    "setRunInBackgroundValue": {
      "functionName": "setRunInBackgroundValue"
    },
    "processOutput": {
      "functionName": "processOutput",
      "parameters": [
        "{{data}}"
      ]
    },
    "getCreatedRepresentationElement": {
      "functionName": "getCreatedRepresentationElement",
      "parameters": [
        "{{response}}"
      ]
    },
    "setUnderlyingObjectsOfSourceObjectsAndReturn": {
      "functionName": "setUnderlyingObjectsOfSourceObjectsAndReturn",
      "parameters": [
        "{{data}}",
        "{{ctx.awClipBoardProvider}}"
      ]
    },
    "getAddElementResponse": {
      "functionName": "getAddElementResponse",
      "parameters": [
        "{{data}}"
      ]
    }
  },
  "data": {
    "addPanelState": {
      "initialValues": {
        "creationType": "",
        "createdObject": "",
        "sourceObjects": "",
        "selectedTab": ""
      },
      "meta": {}
    }
  },
  "conditions": {
    "acp0AlignCpipWithFmeaEnableWhenCond": {
      "expression": "ctx.enableAlignCmd === true && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'Acp0CPIPCompareContextSublocation' && commandContext.selectionData.selected.length > 0"
    },
    "acp0AlignCpipWithFmeaVisibleWhenCond": {
      "expression": "commandContext.baseSelection.type === 'Acp0CPIPCompareContext' && commandContext.name === 'Acp0CPIPCompareContextSublocation'"
    },
    "acp0IsGenDiffSummaryVisibleWhenCmdCond": {
      "expression": "commandContext.objectSetSource==='Aqc0RealizationObjsProvider.Qfm0MasterQualityObject'"
    },
    "acp0IsSourceFmeaForDiffSelectedCond": {
      "expression": "(commandContext.objectSetSource==='Aqc0RealizationObjsProvider.Qfm0MasterQualityObject' && commandContext.vmo.type === 'Cip0ControlPlanRevision' && commandContext.selectionModel.selectionData.selected.length === 1 ) && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Qfm0FMEANode' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Qfm0SystemElement' ) > -1)"
    },
    "acp0ObjectInfoActive": {
      "expression": "conditions.cmdObjectInfoActive && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Acp0RuleCondition' ) > -1"
    },
    "cip0shouldPrintVisible": {
      "expression": "ctx.selected && ((ctx.selected.modelType.typeHierarchyArray.indexOf( 'Cip0ControlPlanRevision' ) > -1) || ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'Acp0ControlPlanElement' ) > -1) && ctx.sublocation.nameToken === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation')"
    },
    "acp0IsAddRefPartToControlPlan": {
      "expression": "conditions.xrtIncludeAddCommand && conditions.acp0IsCtrlPlanRefPartSelected"
    },
    "acp0IsCtrlPlanRefPartSelected": {
      "expression": "ctx.selected && ctx.relationContext.relationInfo[0].relationType === 'Cip0ControlPlanRefPart'"
    },
    "acp0ImportPmiFromSelectedBalloonCmdCond": {
      "expression": "((ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 4) || ctx.tcSessionData.tcMajorVersion > 12 ) && ctx.bctInspSelection && ctx.bctInspSelection.length > 0 && (commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_CAD_View' || commandContext.xrtState.value.selectedTab === 'tc_xrt_CAD_View')"
    },
    "acp0AddExprsForCondBuildCmdCond": {
      "expression": "(ctx.mselected.length === 1 &&!(ctx.selected.levelNdx === 1 && ctx.selected.type === undefined)) &&  conditions.isAcp0RuleEditAllowed"
    },
    "acp0RemoveCondForCondBuildCmdCond": {
      "expression": "(ctx.selected && (ctx.selected.type ==='Acp0RuleCondition'||(ctx.selected.levelNdx === 1 && ctx.selected.type === undefined))) && conditions.isAcp0RuleEditAllowed"
    },
    "acp0ResetCondForCondBuildCmdCond": {
      "expression": "ctx.selected.props.acp0RuleCondition.dbValues.length > 0 && conditions.isAcp0RuleEditAllowed"
    },
    "acp0Selected": {
      "expression": "conditions.isLastConditionSelected || conditions.isLastExpressionSelected"
    },
    "acp0MoveDownCondForCondBuildCmdCond": {
      "expression": "ctx.mselected.length === 1 && conditions.acp0Selected && conditions.isAcp0RuleEditAllowed"
    },
    "acp0MoveUpCondForCondBuildCmdCond": {
      "expression": "ctx.mselected.length === 1 && conditions.isAcp0RuleEditAllowed && (conditions.isFirstConditionSelected || conditions.isFirstExpressionSelected)"
    },
    "isFirstConditionSelected": {
      "expression": "ctx.mselected[0].childNdx > 0 && ctx.mselected[0].type === 'Acp0RuleCondition'"
    },
    "isFirstExpressionSelected": {
      "expression": "ctx.mselected[0].childNdx > 1 && ctx.mselected[0].type === undefined"
    },
    "isLastConditionSelected": {
      "expression": "ctx.mselected[0].type === 'Acp0RuleCondition' && ctx.pselected.props.acp0RuleCondition.dbValues.length !== ctx.mselected[0].childNdx+1"
    },
    "isLastExpressionSelected": {
      "expression": "!ctx.mselected[0].type && ctx.mselected[0].totalSiblings !== ctx.mselected[0].childNdx"
    },
    "acp0activateRuleCondition": {
      "expression": "ctx.selected && ctx.selected.type === 'Acp0Rule' &&  ctx.editInProgress !== true && ctx.mselected.length === 1"
    },
    "acp0ChangeOperatorForExprssssCond": {
      "expression": "ctx.mselected.length === 1 && ctx.mselected[0].type === undefined && ctx.mselected[0].childNdx !== 1 && conditions.isAcp0RuleEditAllowed"
    },
    "isAcp0RuleEditAllowed": {
      "expression": "conditions.isStartEditAllowed || conditions.isStartEditSummaryAllowed || ctx.editInProgress"
    },
    "acp0BctInspViewModeCond": {
      "expression": "ctx.selectedPart && !conditions.acp0PMIXrtPageActive"
    },
    "acp0IsCombineViewModeSelected": {
      "expression": "conditions.acp0BctInspViewModeCond && ctx.inspCombineViewMode"
    },
    "acp0ViewModeForInspDrawing": {
      "expression": "ctx.inspDrawingViewMode && conditions.acp0BctInspViewModeCond"
    },
    "acp0ViewModeForPMIXrt": {
      "expression": "ctx.selectedPart && conditions.acp0PMIXrtPageActive"
    },
    "acp0IsDrawingViewModeSelected": {
      "expression": "conditions.acp0ViewModeForInspDrawing || conditions.acp0ViewModeForPMIXrt"
    },
    "acp0IsTableViewModeSelected": {
      "expression": "conditions.acp0BctInspViewModeCond && ctx.inspTableViewMode"
    },
    "acp0CadViewRefPartsListViewSelected": {
      "expression": "ctx.refPartListView"
    },
    "acp0CadViewRefPartsTableViewSelected": {
      "expression": "ctx.refPartTableView"
    },
    "acp0SelectDeSelectAllBalloonCmdCond": {
      "expression": "ctx.selectedSheet && (commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_CAD_View' || commandContext.xrtState.value.selectedTab === 'tc_xrt_CAD_View')"
    },
    "acp0SelectDeSelectAllBalloonSelectCmdCond": {
      "expression": " conditions.acp0SelectDeSelectAllBalloonCmdCond && ctx.isSelectAllBalloonActive"
    },
    "acp0HideAllBalloonsCmdCond": {
      "expression": "ctx.selectedSheet && (commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_CAD_View' || commandContext.xrtState.value.selectedTab === 'tc_xrt_CAD_View')"
    },
    "acp0ShowAllBalloonsCmdCond": {
      "expression": " conditions.acp0HideAllBalloonsCmdCond && ctx.isHideAllBalloonActive"
    },
    "acp0PMIXrtPageActive": {
      "expression": "commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_PMI' || commandContext.xrtState.value.selectedTab === 'tc_xrt_PMI'"
    },
    "acp0CreateControlPlanCmdCond": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Qfm0FMEANode')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Qfm0SystemElement')>-1"
    },
    "Acp0ComparePartRevisionsCmdCond": {
      "expression": "(commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_CAD_View' || commandContext.xrtState.value.selectedTab === 'tc_xrt_CAD_View') && ctx.selectedPart"
    },
    "Acp0ControlPlanPasteEnableDelegate": {
      "expression": "!conditions.awp0PasteToObjectSetActiveCondition && (conditions.isOccurrenceManagementSubLocation || commandContext.clientScopeURI === 'Awp0ObjectNavigation') && ctx.awClipBoardProvider && ctx.awClipBoardProvider[0] && (ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0QcElement') > -1 || ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Aqc0CharElementRevision') > -1 ) && (ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0ControlPlanElement') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Acp0InspOpElement') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Aqc0QcElement') > -1 )"
    },
    "acp0ShowHideLinkedPartsSelectionCmdCond": {
      "expression": "!ctx.isHideLinkedParts && conditions.acp0ShowHideLinkedPartsEnableCmdCond"
    },
    "acp0ShowHideLinkedPartsEnableCmdCond": {
      "expression": "(commandContext.context.pageContext.secondaryActiveTabId === 'tc_xrt_CAD_View' || commandContext.xrtState.value.selectedTab === 'tc_xrt_CAD_View')"
    }
  },
  "onEvent": [
    {
      "eventId": "acp0.openDifferenceSummary",
      "action": "openDifferenceSummary"
    },
    {
      "eventId": "acp0.enableAlignCmd",
      "action": "enableAlignCmd"
    },
    {
      "eventId": "acp0.disableAlignCmd",
      "action": "disableAlignCmd"
    },
    {
      "eventId": "acp0.removeCondExpElement",
      "action": "removeCondExpElement"
    },
    {
      "eventId": "confirmResetCondEvent",
      "message": "resetCondFromCondBuildConfirmationMessage"
    },
    {
      "eventId": "confirmDeleteCondExprEvent",
      "action": "checkMultiSelectConds"
    },
    {
      "eventId": "acp0FailureMessageEvent",
      "action": "failureMessageAction"
    },
    {
      "eventId": "acp0FailureMessagewithNoErrorEvent",
      "message": "failureMessagewithNoErrorMessage"
    },
    {
      "eventId": "acp0FailureMessagewithAccessDenyEvent",
      "message": "failureMessagewithAccessDenyMessage"
    },
    {
      "eventId": "acp0ActivateRuleFailureDueToNCMessageEvent",
      "message": "acp0activateRuleFailureDueToNCMessage"
    },
    {
      "eventId": "confirmDeleteCondExprMixEvent",
      "message": "deleteCondExpFromCondBuildConfirmationMessage"
    },
    {
      "eventId": "confirmDeleteCondEvent",
      "message": "deleteCondFromCondBuildConfirmationMessage"
    },
    {
      "eventId": "deleteExpEvent",
      "action": "removeExprOrCondn"
    },
    {
      "eventId": "acp0.deleteMultipleCondOrExpSuccessgfullmesage",
      "action": "getMultipleObjDeleteMessageData"
    },
    {
      "eventId": "acp0ActivateRuleConfirmEvent",
      "message": "acp0ActivateRuleConfirmMessage"
    },
    {
      "eventId": "acp0ActivateRuleConfirmForFirstRuleEvent",
      "message": "acp0ActivateRuleConfirmMessageForFirstRule"
    },
    {
      "eventId": "acp0InformationShowFailureEvent",
      "message": "acp0informationshowFailureMessage"
    },
    {
      "eventId": "acp0.moveDownOrmoveUpTheSelCondOrExpr",
      "action": "moveDownOrmoveUpTheSelCondOrExpr",
      "cacheEventData": true
    },
    {
      "eventId": "acp0.acp0DefaultPasteHandlerEvent",
      "message": "acp0PasteHandlerConfirmMessage"
    },
    {
      "eventId": "acp0.acp0DefaultPasteHandlerEventWithoutPopup",
      "action": "Acp0PasteAction"
    },
    {
      "eventId": "acp0.gotPropertiesThatCouldCopy",
      "action": "createSaveAsInput"
    },
    {
      "eventId": "acp0.saveAsInputCreated",
      "action": "saveAs"
    },
    {
      "eventId": "acp0.callCreateObjectSoa",
      "cacheEventData": true,
      "action": "callCreateObjectSoa"
    },
    {
      "eventId": "acp0.getUpdatedDataforNewObject",
      "action": "getUpdatedDataforNewObject"
    }
  ],
  "messages": {
    "acp0generateDiffSummarySuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.Acp0GenDiffSummarySuccess}}",
      "messageTextParams": [
        "{{commandContext.vmo}}",
        "{{ctx.selected}}"
      ]
    },
    "acp0AlignCpipWithFmeaSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.Acp0AlignCpipWithFmeaSummarySuccess}}",
      "messageTextParams": [
        "{{commandContext.baseSelection.props.aqc0TargetContext.uiValue}}",
        "{{commandContext.baseSelection.props.aqc0SourceContext.uiValue}}"
      ]
    },
    "acp0openDiffSummaryMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.Acp0OpenDiffSummarySuccess}}"
    },
    "deleteCondnSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.deleteCond}}",
      "messageTextParams": [
        "{{ctx.selected.props.acp0NamingConvention.dbValues[0]}}"
      ]
    },
    "deleteAllCondSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.resetAllCond}}"
    },
    "resetCondFromCondBuildConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetCondConfirmationMessage}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Reset",
          "text": "{{i18n.resetCond}}",
          "action": "removeExprOrCondn"
        }
      ]
    },
    "deleteCondExpFromCondBuildConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteMultiCondExpConf}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.acp0Remove}}",
          "action": "removeExprOrCondn"
        }
      ]
    },
    "deleteCondFromCondBuildConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteCondConf}}",
      "messageTextParams": [
        "{{ctx.selected.props.acp0NamingConvention.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.acp0Remove}}",
          "action": "removeExprOrCondn"
        }
      ]
    },
    "acp0ActivateRuleConfirmMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.Acp0confirmActivateRuleMessage}}",
      "messageTextParams": [
        "{{ctx.selected}}",
        "{{data.modelObject.props.object_name.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Proceed",
          "text": "{{i18n.Acp0Proceed}}",
          "action": "Acp0activateRuleAction"
        }
      ]
    },
    "acp0PasteHandlerConfirmMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.Acp0confirmPasteActionOptions}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Paste as New",
          "text": "{{i18n.Acp0PasteAsNew}}",
          "action": "GetPropertiesToCopyAction"
        },
        {
          "option": "Paste as Reference",
          "text": "{{i18n.Acp0PasteAsRef}}",
          "action": "Acp0PasteAction"
        }
      ]
    },
    "acp0activateRuleSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.Acp0activateSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ]
    },
    "acp0activateRuleFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.Acp0activateRuleFailureMessage}}",
      "messageTextParams": [
        "{{ctx.selected}}",
        "{{ctx.ErrorName}}"
      ]
    },
    "failureMessagewithNoErrorMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.Acp0activateRuleFailureMessagewithNoError}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ]
    },
    "failureMessagewithAccessDenyMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.Acp0activateRuleFailureMessagewithAccessDeny}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ]
    },
    "acp0informationshowFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.Acp0informationShowFailureMessage}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ]
    },
    "acp0activateRuleFailureDueToNCMessage": {
      "messageType": "ERROR",
      "messageText": "{{data.ServiceData.ServiceData.partialErrors[0].errorValues[0].message}}"
    },
    "acp0ActivateRuleConfirmMessageForFirstRule": {
      "messageType": "WARNING",
      "messageText": "{{i18n.Acp0confirmActivateRuleMessageForFirstRule}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.Acp0Cancel}}"
        },
        {
          "option": "Proceed",
          "text": "{{i18n.Acp0Proceed}}",
          "action": "Acp0activateRuleAction"
        }
      ]
    },
    "pasteSingleSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteSingleSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.awClipBoardProvider[0].props.object_string.uiValues[0]}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteSingleSuccessNewObjMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteSingleSuccessMessage}}",
      "messageTextParams": [
        "{{data.saveAsObjects[0]}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteMultipleSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteMultipleSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.awClipBoardProvider.length}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.pasteFailureMessage}}",
      "messageTextParams": [
        "{{data.ServiceData.ServiceData.partialErrors[0].errorValues[0].message}}"
      ]
    },
    "pastePartialSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pastePartialSuccessMessage}}",
      "messageTextParams": [
        "{{data.ServiceData.ServiceData.created.length}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    }
  },
  "i18n": {
    "Acp0AlignCpipWithFmeaDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0AlignCpipWithFmeaSummarySuccess": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0AlignCpipWithFmeaTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0GenDiffSummarySuccess": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0OpenDiffSummarySuccess": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0GenDiffSummaryTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0GenDiffSummaryDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowDiffSummaryTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowDiffSummaryDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ActivateRuleTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ActivateRuleDescription": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0activateRuleFailureMessage": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0activateRuleFailureMessagewithNoError": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0activateRuleFailureMessagewithAccessDeny": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0activateSuccessMessage": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0AddExprsForCondBuildTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0CombineViewModeDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0CombineViewModeTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ComparePartRevisions": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ComparePartRevisionsDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0confirmActivateRuleMessage": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0confirmActivateRuleMessageForFirstRule": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0DeSelectAllBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Awp0DeselectAllDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Acp0DrawingViewDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0DrawingViewTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ImportPmiAsynchronous": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ImportPmiFromSelectedBalloonDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ImportPmiFromSelectedBalloonTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0informationShowFailureMessage": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0InspViewModeTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0Proceed": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0RefPartsListViewTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0RefPartsTableViewTitle": [
      "ControlInspectionPlanMessages"
    ],
    "acp0Remove": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0SelectAllBalloonsDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0SelectAllBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0TableViewDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0TableViewTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0Cancel": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0GenerateControlPlanDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0GenerateControlPlanTitle": [
      "ControlInspectionPlanMessages"
    ],
    "AllImportedPMIs": [
      "ControlInspectionPlanMessages"
    ],
    "AllImportedPMIImportBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "AllImportedPMIsImportBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Awp0ShowListViewDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowTableViewDesc": [
      "ZeroCompileCommandMessages"
    ],
    "changeOperator": [
      "ControlInspectionPlanMessages"
    ],
    "conditions": [
      "ControlInspectionPlanMessages"
    ],
    "deleteCond": [
      "ControlInspectionPlanMessages"
    ],
    "deleteCondConf": [
      "ControlInspectionPlanMessages"
    ],
    "deleteCondOrExpr": [
      "ControlInspectionPlanMessages"
    ],
    "deleteMultiCondExpConf": [
      "ControlInspectionPlanMessages"
    ],
    "FailedToImportPMIs": [
      "ControlInspectionPlanMessages"
    ],
    "FailedToImportPMIImportBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "FailedToImportPMIsImportBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Help": [
      "ControlInspectionPlanMessages"
    ],
    "HelpDescription": [
      "ControlInspectionPlanMessages"
    ],
    "moveDown": [
      "ControlInspectionPlanMessages"
    ],
    "moveUp": [
      "ControlInspectionPlanMessages"
    ],
    "PartiallyImportedPMIs": [
      "ControlInspectionPlanMessages"
    ],
    "PartiallyImportedPMIsImportBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "pinButtonToolTip": [
      "ControlInspectionPlanMessages"
    ],
    "resetCond": [
      "ControlInspectionPlanMessages"
    ],
    "resetAllCond": [
      "ControlInspectionPlanMessages"
    ],
    "resetCondConfirmationMessage": [
      "ControlInspectionPlanMessages"
    ],
    "unpinButtonToolTip": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0PasteAsRef": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0PasteAsNew": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0confirmPasteActionOptions": [
      "ControlInspectionPlanMessages"
    ],
    "pasteSingleSuccessMessage": [
      "ControlInspectionPlanMessages"
    ],
    "pasteMultipleSuccessMessage": [
      "ControlInspectionPlanMessages"
    ],
    "pasteFailureMessage": [
      "ControlInspectionPlanMessages"
    ],
    "pastePartialSuccessMessage": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0HideAllBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0HideAllBalloonsDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowAllBalloons": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowAllBalloonsDesc": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowLinkedPartsTitle": [
      "ControlInspectionPlanMessages"
    ],
    "Acp0ShowLinkedPartsDesc": [
      "ControlInspectionPlanMessages"
    ]
  }
}

{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-panel.directive",
        "js/aw-flex-row.directive",
        "js/aw-splm-table.directive",
        "js/exist-when.directive",
        "js/aw-break.directive",
        "js/aw-icon-button.directive",
        "js/visible-when.directive",
        "js/aw-toolbar.directive",
        "js/aw-i18n.directive",
        "js/aw-command-panel-section.directive"
    ],
    "actions": {
        "condExprLoadData": {
            "actionType": "JSFunctionAsync",
            "method": "loadCondExprTreeTableData",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "i18nString": "{{data.i18n}}",
                "data":"{{data}}"
            },
            "outputData": {
                "treeLoadResult": "treeLoadResult"
            },
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "loadColumns": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableColumns",
            "inputData": {
                "dataProvider": "{{data.dataProviders.condExprDataProvider}}",
                "i18nString": "{{data.i18n}}"
            },
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "loadRequiredProperties": {
            "actionType": "JSFunctionAsync",
            "method": "loadRequiredProperties",
            "inputData": {
                "selectedCondObj": "{{ctx.selected}}",
                "data": "{{data}}",
                "ruleBuilderPanelFlag": false
            },
            "outputData": {},
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "loadcondExprTreeProperties": {
            "actionType": "JSFunctionAsync",
            "method": "loadcondExprTreeProperties",
            "inputData": {
                "methodArgument": {
                    "propertyLoadInput": "request.propertyLoadInput"
                }
            },
            "outputData": {
                "dataProviders.condExprDataProvider.columnConfig": "result.propertyLoadResult.columnConfig",
                "ctx.searchResponseInfo.columnConfig": "result.propertyLoadResult.columnConfig"
            },
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "addChildAction": {
            "actionType": "JSFunction",
            "method": "addChildInTreeTable",
            "inputData": {
                "treeLoadResult": "{{treeLoadResult}}",
                "data": "{{data}}",
                "dataProvider": "{{data.dataProviders.condExprDataProvider}}",
                "treeLoadInput": "{{request.treeLoadInput}}",
                "selectedParentUid": "{{data.dataProviders.condExprDataProvider.selectedObjects[0].uid}}",
                "addElementResponse": "{{data.addedChildOrSiblingState.addElementResponse}}",
                "i18nString": "{{data.i18n}}"
            },
            "outputData": {
                "treeLoadResult": "treeLoadResult"
            },
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "addSiblingAction": {
            "actionType": "JSFunction",
            "method": "addNewlyCreatedSiblingElement",
            "inputData": {
                "data": "{{data}}",
                "dataProvider": "{{data.dataProviders.condExprDataProvider}}",
                "treeLoadResult": "{{treeLoadResult}}",
                "SelectedParent": "{{data.dataProviders.condExprDataProvider.selectedObjects[0].uid}}"
            },
            "outputData": {
                "treeLoadResult": "treeLoadResult"
            },
            "deps": "js/Acp0RuleNCCondUtils"
        },
        "loadRequiredPropertiesCondExprPanel": {
            "actionType": "JSFunctionAsync",
            "method": "loadRequiredProperties",
            "inputData": {
                "selectedCondObj": "{{ctx.selected}}",
                "data": "{{data}}",
                "ruleBuilderPanelFlag": true,
                "context": "",
                "config": {
                    "isPinUnpinEnabled": true
                }
            },
            "deps": "js/Acp0RuleNCCondUtils"
        }
    },
    "dataProviders": {
        "condExprDataProvider": {
            "initializeAction": "condExprLoadData",
            "action": "condExprLoadData",
            "nextAction": "condExprLoadData",
            "previousAction": "condExprLoadData",
            "treeLoadResult": "{{treeLoadResult}}",
            "selectionModelMode": "multiple",
            "treePageSize": 100,
            "inputData": {
                "accessMode": "tree",
                "selectionData": "{{subPanelContext.selectionData}}",
                "topNodeUid": "top"
            }
        },
        "condExprPropertyProvider": {
            "action": "loadcondExprTreeProperties",
            "propertyLoadResult": "action.result.propertyLoadResult"
        }
    },
    "columnProviders": {
        "condExprColumnProvider": {
            "loadColumnAction": "loadColumns",
            "columns": "{{data.columns}}",
            "soaEnabled": false,
            "sortCriteria": [ {
                "fieldName": "creation_date",
                "sortDirection": "DESC"
            } ]
        }
    },
    "grids": {
        "condExprGrid": {
            "dataProvider": "condExprDataProvider",
            "propertyProvider": "condExprPropertyProvider",
            "columnProvider": "condExprColumnProvider",
            "addIconColumn": false,
            "gridOptions": {
                "enableGridMenu": false,
                "enablePinning": false,
                "enableSorting": false
            }
        }
    },
    "conditions": {
        "isAcp0RuleEditAllowed": {
            "expression": "ctx.selected.props.owning_user.uiValue===ctx.userSession.props.user.uiValue"
        },
        "gridTableHideWithNoConds": {
            "expression": "ctx.selected.type ==='Acp0Rule' && ctx.selected.props.acp0RuleCondition.dbValues.length > 0 || subPanelContext.selected.type ==='Acp0Rule' && subPanelContext.selected.props.acp0RuleCondition.dbValues.length > 0"
        }
    },
    "ctx": {
        "pselected": {
            "type": "object"
        }
    },
    "functions": {},
    "onEvent": [],
    "data": {
        "expressiontoolbarTitle": {
            "displayName": "{{i18n.expressiontoolbarTitle}}",
            "type": "STRING"
        },
        "addCondsExprs": {
            "action": "loadRequiredPropertiesCondExprPanel",
            "iconName": "Add",
            "tooltip": "{{i18n.Acp0AddExprsForCondBuildTitle}}"
        },
        "helpAnchor": "commandPanelhelpAnchor",
        "sharedData": {
            "initialValues": {
                "activeCommandId": ""
            },
            "meta": {}
        },
        "addedChildOrSiblingState": {
            "initialValues": {
                "addedChild": false,
                "addedSibling": false,
                "showAddChildPanel": false,
                "showAddSiblingPanel": false,
                "addElementResponse": {}
            },
            "meta": {}
        },
        "treeLoadResult" : {}
    },
    "props": {
        "updateHook": {
            "type": "object"
        },
        "update-activeView": {
            "type": "object"
        },
        "update-activeCommandId": {
            "type": "string"
        },
        "sub-panel-context": {
            "type": "object"
        }
    },
    "lifecycleHooks": {
        "onInit": "loadRequiredProperties",
        "onUpdate": [
            {
                "action": "addSiblingAction",
                "observers": [
                    "viewModel.atomicData.addedChildOrSiblingState.addedSibling"
                ]
            },
            {
                "action": "addChildAction",
                "observers": [
                    "viewModel.atomicData.addedChildOrSiblingState.addedChild"
                ]
            }
        ]
    },
    "i18n": {
        "Acp0AddExprsForCondBuildTitle": [
            "ControlInspectionPlanMessages"
        ],
        "buttonToAdd": [
            "ControlInspectionPlanMessages"
        ],
        "expressiontoolbarTitle": [
            "ControlInspectionPlanMessages"
        ],
        "ifString": [
            "ControlInspectionPlanMessages"
        ],
        "noExpressionHere": [
            "ControlInspectionPlanMessages"
        ],
        "propMissingInLOV": [
            "ControlInspectionPlanMessages"
        ],
        "ruleBuilderTitle": [
            "ControlInspectionPlanMessages"
        ],
        "setNCString": [
            "ControlInspectionPlanMessages"
        ]
    }
}
